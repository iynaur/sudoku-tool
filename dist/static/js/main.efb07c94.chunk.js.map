{"version":3,"sources":["libs/utils.js","components/Sudoku/Board/Block/Cell/Cell.module.scss","components/UI/Digits/Digits.module.scss","components/Sudoku/Controls/Digits/Digits.module.scss","components/Sudoku/Controls/Controls.module.scss","containers/Sudodu/Main.module.scss","components/Sudoku/Board/Block/Block.module.scss","components/UI/Modal/Modal.module.scss","components/UI/Button/Button.module.scss","components/Sudoku/Board/Board.module.scss","containers/Sudodu/NewGame.module.scss","components/Sudoku/Board/Arrow.module.scss","components/UI/Backdrop/Backdrop.module.css","containers/Sudodu/Sudoku.module.scss","components/UI/Button/Button.js","components/UI/Digits/Digits.js","libs/position.js","libs/sudoku.js","components/Sudoku/Board/Block/Cell/Cell.js","components/Sudoku/Board/Block/Block.js","components/UI/AspectRatio/AspectRatioBox.js","components/Sudoku/Board/Arrow.js","components/Sudoku/Board/Board.js","components/UI/AspectRatio/AspectRatioWrapper.js","components/Sudoku/Controls/Digits/Digits.js","components/Sudoku/Controls/Controls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","containers/Sudodu/Main.js","containers/Sudodu/NewGame.js","containers/Sudodu/Sudoku.js","App.js","serviceWorker.js","index.js"],"names":["combx","comb","findNGroupFromLinks","nilFunc","d","n","k","i","res","push","f","links","order","options","checkClear","s","link","start","end","v","ends","Set","add","points","Object","values","xpoints","filter","p","size","length","idxes","starts","idx","point","forEach","cleared","has","e","window","global","console","group","groupEnd","log","error","module","exports","Button","type","onClick","disabled","children","classes","styles","className","join","generateDigit","digitClass","c","color","digitClassName","style","backgroundColor","Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine","_baseArray","blockShape","blocks","rows","cols","rowColToBlock","row","col","Math","floor","_rowPositions","map","block","key","toString","this","_rowRelatedPositions","r","pos","_colPositions","_colRelatedPositions","_blockPositions","b","blockRows","_blocFlattenkPositions","blockPoses","_blockRelatedPositions","_","_relatedPositions","getPosition","getBlockFlattenPositions","getRowPositions","getColPositions","getRelatedBlockPositions","undefined","blockRowColIndex","getRelatedRowPositions","getRelatedColPositions","getRelatedPositions","flattenPositions","flat","_keyPositionMapping","getCell","cells","_intersection","a","sb","getCommonRelatedPositions","poses","rposes","searchChain","findNGroup","findNXGroup","Notes","value","notes","_base","is","ns","Sudoku","puzzle","jump","steps","_curCellsIdx","_cellsHistory","_notify","jumpToFirst","jumpToLast","subscribers","_setPuzzle","defaultPuzzle","_ops","_setCells","parse","stringify","desc","slice","origin","isEmpty","entries","rpos","delete","1","2","3","4","5","6","7","8","9","curCells","getCurCells","cell","_txSetCellValue","_txCells","_startTx","action","payload","actions","RESET","NOTE","_note","AUTO_NOTE","_autoNote","AUTO_PLACE","_autoPlace","AUTO_POINTING","_autoPointing","AUTO_CLAIMING","_autoClaiming","AUTO_PLACE_POINTING_CLAIMING","_autoPlacePointingClaiming","UPDATE_CELL_VALUE","_updateCellValue","ELIMINATE_GROUP","_eliminateGroup","ELIMINATE_XGROUP","_eliminateXGroup","ELIMINATE_CHAIN","_eliminateChain","HANDLE_TIP","_handleTip","commit","_handlActions","_commit","dispatch","isNoting","tip","setCellValue","new","calcAvailableDigits","count","placed","cls","br","bc","rb","cb","_noteCellValue","_placeCellValue","oldCell","otherPoses","domain","positions","otherPositions","effect","findGroup","findXGroup","findChain","eliminateGroup","eliminateXGroup","eliminateChain","dLinks","dPoses","ds","strongTargets","weakTargets","strongPos","otherDs","false","true","getDigitPosesAndLinks","tryCellLinks","dRes","startNode","val","td","chain","name","effectedPoses","Error","flattenCells","match","cellPattern","flattenCellValues","startsWith","endsWith","split","parseInt","valuePattern","test","Array","from","j","node","extraData","cpos","targets","tpos","chainHasNode","nextNode","cd","getPositionsLinks","note","getAToBLinks","getPositions","getEnd","getRowToColLinks","getRowToBlockLinks","getColToBlockLinks","getPositionsForDigit","types","rc","cr","rcLinks","isXWing","rowPositions","rbLinks","cbLinks","noteClassName","activeVal","highlighted","effectMarked","marks","Note","ActiveValue","src","highlights","subNotes","MarkedNoteValue","MarkedValue","Cell","React","memo","activePos","available","showAvail","content","isSelected","activeRow","activeCol","activeBlock","Selected","Related","clickable","Available","Place","domainMarked","MarkedHighlight","MarkedDomain","MarkedEffect","RowNotes","digits","Value","Placed","Block","availableCells","cellClickedHandler","isOdd","Odd","Row","Box","styled","div","width","ratio","Content","fixed","scroll","Arrow","distance","x","y","deg","dd","getCoord","localRow","startPos","startDigit","endPos","endDigit","sc","ec","sx","sy","dx","dy","sqrt","calcDistance","acos","PI","calcDeg","Pointer","Board","availablePositions","arrows","AspectRatioBox","SudokuBoard","arrow","Wrapper","props","Digits","availableDigits","remainingDigits","digitClickedHandler","genClassName","useCallback","Digit","active","Disabled","AspectRatioWrapper","Count","Controls","cellsRecord","hasPrev","hasNext","deselectHandler","toggleShowAvailHandler","toggleIsNotingHandler","resetHandler","eraseValueHandler","autoNoteHandler","autoPlacePointingClaimingHandler","tipHandler","History","Panel","Tools","Tip","Backdrop","show","close","Modal","Show","Close","prevProps","nextProps","sudoku","sudokus","startNewGameHandler","emptyHandler","useState","showShare","setShowShare","setChanged","useEffect","subscribe","unsubscribe","activeState","setActiveState","setShowAvail","setIsNoting","setTip","useMemo","calcAvailablePositions","calcRemainingDigits","updateCellValue","curActivePos","force","curActiveVal","confirm","reset","autoNote","autoPlacePointingClaiming","handleTip","t","findTip","moveActivePos","dRow","dCol","curRow","curCol","moveActiveVal","endNode","keydownHandler","code","ctrlKey","preventDefault","document","addEventListener","removeEventListener","shareContent","url","URL","location","initialPuzzle","curPuzzle","search","QRCode","Menu","Info","NewGame","cancelNewGameHandler","newGameHandler","setPuzzle","puzzleChangedHandler","event","target","textareaRef","useRef","current","focus","shiftKey","message","ref","id","inputMode","onChange","placeholder","URLSearchParams","get","setSudoku","isNewGame","setIsNewGame","puzzleError","setPuzzleError","Main","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","process","href","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.efb07c94.chunk.js","sourcesContent":["const debug = process.env.NODE_ENV !== 'production';\nconst nilFunc = () => {};\n\nfunction* combx(d, n, k) {\n  if (n < k) {\n  } else if (k === 1) {\n    for (let i = d; i < n + d; i++) {\n      yield [i];\n    }\n  } else if (n === k) {\n    const res = [];\n    for (let i = d; i < n + d; i++) {\n      res.push(i);\n    }\n    yield res;\n  } else {\n    // with 0\n    for (const res of combx(d + 1, n - 1, k - 1)) {\n      yield [d, ...res];\n    }\n    // without 0\n    yield* combx(d + 1, n - 1, k);\n  }\n}\n\nexport function* comb(n, k) {\n  yield* combx(0, n, k);\n}\n\nexport function* findNGroupFromLinks(links, n, order = 0, options = { checkClear: true }) {\n  const s = {};\n  for (const link of links) {\n    const start = link[order];\n    const end = link[(order + 1) % 2];\n    const v = s[start] || { start, ends: new Set() };\n    v.ends.add(end);\n    s[start] = v;\n  }\n  const points = Object.values(s);\n  const xpoints = points.filter(p => p.ends.size <= n);\n  if (options.checkClear && points.length <= n) {\n    // only return group if count(starts) > n\n    return;\n  }\n\n  for (const idxes of comb(xpoints.length, n)) {\n    // check\n    const starts = new Set();\n    const ends = new Set();\n    for (const idx of idxes) {\n      const point = xpoints[idx];\n      starts.add(point.start);\n      point.ends.forEach(ends.add, ends);\n      if (ends.size > n) {\n        break;\n      }\n    }\n    if (ends.size === n) {\n      let cleared = options.checkClear;\n      if (cleared) {\n        // n is 1, no need to check.\n        // check if group is cleared\n        for (const p of points.filter(p => !starts.has(p.start))) {\n          if ([...p.ends].filter(e => !ends.has(e)).length < p.ends.size) {\n            // other starts has end in ends\n            // need clear\n            cleared = false;\n            break;\n          }\n        }\n      }\n\n      if (!cleared) {\n        yield [starts, ends];\n      }\n    }\n  }\n}\n\nconst _store = {};\nexport const memorize = f => (...args) => {\n  if (_store[f]) {\n    _store[f] = { args: [], res: undefined };\n  }\n  const data = _store[f];\n  if (!(data.args.length === args.length && data.args.reduce((r, arg, idx) => r && Object.is(arg, args[idx]), true))) {\n    data.args = args;\n    data.res = f(...args);\n  }\n  return data.res;\n};\n\nconst _console = (window || global || {}).console || {};\n\nexport const console = {\n  group: (debug && _console.group) || nilFunc,\n  groupEnd: (debug && _console.groupEnd) || nilFunc,\n  log: (debug && _console.log) || nilFunc,\n  error: (debug && _console.error) || nilFunc,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Value\":\"Cell_Value__1lDbW\",\"Notes\":\"Cell_Notes__10ap7\",\"Related\":\"Cell_Related__ET6Lg\",\"Available\":\"Cell_Available__3vvqK\",\"Place\":\"Cell_Place__3TPHN\",\"Note\":\"Cell_Note__2U2fC\",\"MarkedDomain\":\"Cell_MarkedDomain__31hFJ\",\"MarkedEffect\":\"Cell_MarkedEffect___usON\",\"MarkedHighlight\":\"Cell_MarkedHighlight__2O1xC\",\"ActiveValue\":\"Cell_ActiveValue__3McOV\",\"Placed\":\"Cell_Placed__3HOvj\",\"Selected\":\"Cell_Selected__2LsAU\",\"MarkedValue\":\"Cell_MarkedValue__dMEee\",\"MarkedNoteValue\":\"Cell_MarkedNoteValue__24o3W\",\"RowNotes\":\"Cell_RowNotes__1QNhn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Zero\":\"Digits_Zero__2W6xd\",\"One\":\"Digits_One__-wXsd\",\"Two\":\"Digits_Two__5WRCG\",\"Three\":\"Digits_Three__1GKk-\",\"Four\":\"Digits_Four__1ahFU\",\"Five\":\"Digits_Five__3m1dx\",\"Six\":\"Digits_Six__kvriF\",\"Seven\":\"Digits_Seven__2_nmU\",\"Eight\":\"Digits_Eight__GNMw3\",\"Nine\":\"Digits_Nine__3u9wd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Digits\":\"Digits_Digits__3-KZF\",\"Digit\":\"Digits_Digit__1MXW9\",\"digit\":\"Digits_digit__3Mpxe\",\"Disabled\":\"Digits_Disabled__1N4Jw\",\"active\":\"Digits_active__2AexO\",\"Count\":\"Digits_Count__Eq4Q5\",\"isNoting\":\"Digits_isNoting__-OBTK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Controls\":\"Controls_Controls__1Accx\",\"History\":\"Controls_History__2GRXF\",\"Panel\":\"Controls_Panel__1AK4m\",\"Tools\":\"Controls_Tools__1-fbY\",\"Tip\":\"Controls_Tip__2IHiE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Main_Menu__3YGZL\",\"Board\":\"Main_Board__3XJet\",\"Controls\":\"Main_Controls__1MSdo\",\"Info\":\"Main_Info__2888w\",\"QRCode\":\"Main_QRCode__1jj5B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Block\":\"Block_Block__1kJyh\",\"Odd\":\"Block_Odd__2xFZf\",\"Row\":\"Block_Row__11Olq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__31OI7\",\"Show\":\"Modal_Show__d05bc\",\"Close\":\"Modal_Close__IQjCe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"On\":\"Button_On__3d77T\",\"Off\":\"Button_Off__R9f9J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SudokuBoard\":\"Board_SudokuBoard__3cPYp\",\"Row\":\"Board_Row__2r5V5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewGame\":\"NewGame_NewGame__2hKIv\",\"Error\":\"NewGame_Error__mao55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pointer\":\"Arrow_Pointer__1rYd7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sudoku\":\"Sudoku_Sudoku__3acWS\",\"Menu\":\"Sudoku_Menu__1l9tJ\",\"Board\":\"Sudoku_Board__rWs6R\",\"Controls\":\"Sudoku_Controls__2JIvy\",\"Info\":\"Sudoku_Info__2OByE\"};","import React from 'react';\nimport styles from './Button.module.scss';\n\nconst Button = ({ type, onClick, disabled = false, children }) => {\n  const classes = [styles.Button];\n  if (type) {\n    classes.push(styles[type]);\n  }\n  return (\n    <button className={classes.join(' ')} disabled={disabled} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport styles from './Digits.module.scss';\n\nconst styleColor = c => (c ? { backgroundColor: c } : {});\n\nconst generateDigit = digitClass => ({\n  color,\n  digitClassName = 'digit',\n  className = '',\n  children,\n}) => (\n  <div\n    className={`${digitClass} ${digitClassName} ${className}`}\n    style={styleColor(color)}\n  >\n    {children}\n  </div>\n);\n\nexport const Zero = generateDigit(styles.Zero);\nexport const One = generateDigit(styles.One);\nexport const Two = generateDigit(styles.Two);\nexport const Three = generateDigit(styles.Three);\nexport const Four = generateDigit(styles.Four);\nexport const Five = generateDigit(styles.Five);\nexport const Six = generateDigit(styles.Six);\nexport const Seven = generateDigit(styles.Seven);\nexport const Eight = generateDigit(styles.Eight);\nexport const Nine = generateDigit(styles.Nine);\n\nexport default [\n  <Zero />,\n  <One />,\n  <Two />,\n  <Three />,\n  <Four />,\n  <Five />,\n  <Six />,\n  <Seven />,\n  <Eight />,\n  <Nine />,\n];\n","export const getDigitLocalPos = d => [Math.floor((d - 1) / 3), (d - 1) % 3];\nconst _baseArray = [0, 1, 2, 3, 4, 5, 6, 7, 8];\nexport const blockShape = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n];\n\nexport const blocks = _baseArray;\nexport const rows = _baseArray;\nexport const cols = _baseArray;\n\nexport const rowColToBlock = (row, col) => Math.floor(row / 3) * 3 + Math.floor(col / 3);\nexport const blockRowColIndex = (row, col) => (row % 3) * 3 + (col % 3);\nexport const blockRows = block => {\n  const start = Math.floor(block / 3) * 3;\n  return [start, start + 1, start + 2];\n};\n\nconst _rowPositions = _baseArray.map(row =>\n  _baseArray.map(col => ({\n    idx: row * 9 + col,\n    row,\n    col,\n    block: rowColToBlock(row, col),\n    key: `r${row}c${col}`,\n    toString() {\n      return this.key;\n    },\n  }))\n);\n\n// row positions without col\nconst _rowRelatedPositions = _baseArray.map(r => _baseArray.map(c => _rowPositions[r].filter(pos => pos.col !== c)));\nconst _colPositions = _baseArray.map(c => _baseArray.map(r => _rowPositions[r][c]));\n// col positions without row\nconst _colRelatedPositions = _baseArray.map(c => _baseArray.map(r => _colPositions[c].filter(pos => pos.row !== r)));\n\n// block positions 3x3\nconst _blockPositions = _baseArray.map(b => blockRows(b).map(row => _rowPositions[row].filter(pos => pos.block === b)));\n\nconst _blocFlattenkPositions = _baseArray.map(b => {\n  const blockPoses = _blockPositions[b];\n  return [...blockPoses[0], ...blockPoses[1], ...blockPoses[2]];\n});\n// block positions without it's row/col index\nconst _blockRelatedPositions = _baseArray.map(b =>\n  _baseArray.map(i => _blocFlattenkPositions[b].filter((_, idx) => idx !== i))\n);\n\n// positions without row/col\nconst _relatedPositions = _baseArray.map(r =>\n  _baseArray.map(c => {\n    const b = rowColToBlock(r, c);\n    const res = [];\n    _rowPositions.forEach(rows =>\n      rows.forEach(pos => {\n        const { row, col, block } = pos;\n        if (r === row && c === col && b === block) {\n          return;\n        }\n        if (r === row || c === col || b === block) {\n          res.push(pos);\n        }\n      })\n    );\n    return res;\n  })\n);\n\nexport const getPosition = (row, col) => _rowPositions[row][col];\n\nexport const getPosBlock = (row, col) => _rowPositions[row][col].block;\n\nexport const getBlockPositions = block => _blockPositions[block];\nexport const getBlockFlattenPositions = block => _blocFlattenkPositions[block];\nexport const getRowPositions = row => _rowPositions[row];\nexport const getColPositions = col => _colPositions[col];\n\nexport const getRelatedBlockPositions = ({ row, col, block }) =>\n  _blockRelatedPositions[block === undefined ? rowColToBlock(row, col) : block][blockRowColIndex(row, col)];\nexport const getRelatedRowPositions = ({ row, col }) => _rowRelatedPositions[row][col];\nexport const getRelatedColPositions = ({ row, col }) => _colRelatedPositions[col][row];\nexport const getRelatedPositions = ({ row, col }) => _relatedPositions[row][col];\n\n// all positions from left to right, top to bottom.\n// used to iterate all positions\nexport const flattenPositions = _rowPositions.flat();\n\nconst _keyPositionMapping = {};\nflattenPositions.forEach(pos => {\n  _keyPositionMapping[pos.key] = pos;\n});\n\nexport const getPositionByKey = key => _keyPositionMapping[key];\n\nexport const mapPositionsTo = f => _baseArray.map(row => _baseArray.map(col => f(row, col)));\n\nexport const getCell = (cells, pos) => cells[pos.row][pos.col];\n\nconst _intersection = (a, b) => {\n  const sb = new Set(b);\n  return a.filter(v => sb.has(v));\n};\n\nexport const getCommonRelatedPositions = (...poses) => {\n  switch (poses.length) {\n    case 0:\n      return [];\n    case 1:\n      return getRelatedPositions(poses[0]);\n    default:\n      const [pos, ...rposes] = poses;\n      return _intersection(getRelatedPositions(pos), getCommonRelatedPositions(...rposes));\n  }\n};\n","import {\n  flattenPositions,\n  getRelatedPositions,\n  mapPositionsTo,\n  rowColToBlock,\n  getRelatedRowPositions,\n  getRelatedColPositions,\n  getRelatedBlockPositions,\n} from './position';\nimport * as positions from './position';\nimport { findNGroupFromLinks, console } from './utils';\n\nexport class Notes {\n  static _base = 1 << 16;\n  static new(...notes) {\n    let value = 1 << 16;\n    for (const n of notes) {\n      value |= 1 << n;\n    }\n    return value;\n  }\n\n  static isEmpty(value) {\n    return value === this._base;\n  }\n\n  static size(value) {\n    let s = 0;\n    for (let n = 1; n <= 9; n++) {\n      value = value >> 1;\n      if ((value & 1) === 1) {\n        s++;\n      }\n    }\n    return s;\n  }\n\n  static first(value) {\n    for (let n = 1; n <= 9; n++) {\n      if (Notes.has(value, n)) {\n        return n;\n      }\n    }\n  }\n\n  static entries(value) {\n    const res = [];\n    for (let n = 1; n <= 9; n++) {\n      if (Notes.has(value, n)) {\n        res.push(n);\n      }\n    }\n    return res;\n  }\n\n  static is(value) {\n    return (value & this._base) !== 0;\n  }\n\n  static has(value, n) {\n    return Notes.is(value) && (value & (1 << n)) !== 0;\n  }\n\n  static add(value, n) {\n    return value | (1 << n);\n  }\n\n  static delete(value, ...ns) {\n    for (const n of ns) {\n      value &= ~(1 << n);\n    }\n    return value;\n  }\n}\n\nexport class Sudoku {\n  static defaultPuzzle = `\n  000000000 000000000 000000000\n  000000000 000000000 000000000\n  000000000 000000000 000000000\n`;\n  constructor(puzzle) {\n    this.subscribers = [];\n    this._setPuzzle(puzzle || Sudoku.defaultPuzzle);\n  }\n\n  _setPuzzle(puzzle) {\n    // clear history\n    this._cellsHistory = [];\n    this._curCellsIdx = -1;\n    this._ops = 0;\n    this._setCells(Sudoku.parse(puzzle), 'init');\n    this.puzzle = this.stringify();\n  }\n\n  get initialPuzzle() {\n    return this.puzzle;\n  }\n\n  get cells() {\n    return this._cellsHistory[this._curCellsIdx].cells;\n  }\n\n  get cellsRecord() {\n    return this._cellsHistory[this._curCellsIdx];\n  }\n\n  _setCells(cells, desc = '') {\n    if (this._curCellsIdx + 1 < this._cellsHistory.length) {\n      this._cellsHistory = this._cellsHistory.slice(0, this._curCellsIdx + 1);\n    }\n    this._cellsHistory.push({ idx: this._ops, cells, desc });\n    this._curCellsIdx++;\n    this._ops++;\n  }\n\n  get hasPrev() {\n    return this._curCellsIdx > 0;\n  }\n\n  get hasNext() {\n    return this._curCellsIdx < this._cellsHistory.length - 1;\n  }\n\n  jump = steps => {\n    this._curCellsIdx += steps;\n    if (this._curCellsIdx < 0) {\n      this._curCellsIdx = 0;\n    } else if (this._curCellsIdx >= this._cellsHistory.length) {\n      this._curCellsIdx = this._cellsHistory.length - 1;\n    }\n\n    this._notify();\n  };\n\n  jumpToFirst = () => {\n    this.jump(this._curCellsIdx);\n  };\n\n  jumpToLast = () => {\n    this.jump(this._cellsHistory.length);\n  };\n\n  subscribe(f) {\n    this.subscribers.push(f);\n  }\n\n  unsubscribe(f) {\n    this.subscribers = this.subscribers.filter(s => s !== f);\n  }\n\n  _notify() {\n    for (const f of this.subscribers) {\n      f(n => n + 1);\n    }\n  }\n\n  static cellPattern = /(\\d)|(p\\d)|(n[1-9]*N)/g;\n  static valuePattern = /^[1-9]$/;\n\n  static parse(puzzle) {\n    if (!puzzle || puzzle.length < 81) {\n      throw new Error(`bad sudoku puzzle format [${puzzle}]`);\n    }\n    // split cell\n    const flattenCells = puzzle.match(Sudoku.cellPattern);\n    if (flattenCells.length !== 81) {\n      throw new Error(`bad sudoku puzzle format [${puzzle}]`);\n    }\n\n    // parse values\n    const flattenCellValues = flattenCells.map(cell => {\n      if (cell.startsWith('n') && cell.endsWith('N')) {\n        // it's note\n        const notes = cell\n          .slice(1, -1)\n          .split('')\n          .map(s => parseInt(s));\n        return { value: Notes.new(...notes) };\n      } else if (cell.startsWith('p')) {\n        // it's placed value\n        return { value: parseInt(cell[1]) };\n      } else if (Sudoku.valuePattern.test(cell)) {\n        // it's value\n        return {\n          value: parseInt(cell),\n          // puzzle origin value\n          origin: true,\n        };\n      } else if (cell === '0') {\n        // it's empty\n        return { value: Notes.new() };\n      }\n      throw new Error('impossible');\n    });\n\n    // organize the values\n    const cells = Array.from(new Array(9)).map(() => new Array(9));\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        cells[i][j] = flattenCellValues[9 * i + j];\n      }\n    }\n    // TODO: check board integrity, no duplicated digit in any row, col, block.\n    return cells;\n  }\n\n  stringify() {\n    const res = [];\n    for (const pos of flattenPositions) {\n      const { origin, value } = this.getCell(pos);\n      if (Notes.is(value)) {\n        // notes\n        if (Notes.isEmpty(value)) {\n          res.push('0');\n        } else {\n          res.push('n', ...Notes.entries(value), 'N');\n        }\n      } else if (origin) {\n        // origin\n        res.push(value);\n      } else {\n        // placed\n        res.push('p', value);\n      }\n    }\n    return res.join('');\n  }\n\n  // calcuate available digits for cell at postion <pos>.\n  calcAvailableDigits(pos) {\n    const res = new Set([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    if (!pos) {\n      return res;\n    }\n\n    const cell = this.getCell(pos);\n    if (cell.origin) {\n      // origin can't be changed\n      return new Set();\n    }\n\n    for (const rpos of getRelatedPositions(pos)) {\n      const { value } = this.getCell(rpos);\n      if (!Notes.is(value)) {\n        res.delete(value);\n      }\n    }\n    return res;\n  }\n\n  calcRemainingDigits() {\n    const res = { 1: 9, 2: 9, 3: 9, 4: 9, 5: 9, 6: 9, 7: 9, 8: 9, 9: 9 };\n    for (const pos of flattenPositions) {\n      const { value } = this.getCell(pos);\n      if (!Notes.is(value)) {\n        res[value]--;\n      }\n    }\n    return res;\n  }\n\n  calcAvailablePositions(d) {\n    if (!(d >= 1 && d <= 9)) {\n      return null;\n    }\n\n    const res = mapPositionsTo(() => true);\n    for (const pos of flattenPositions) {\n      const { value } = this.getCell(pos);\n      if (!Notes.is(value)) {\n        res[pos.row][pos.col] = false;\n        if (value === d) {\n          // clear\n          for (const { row, col } of getRelatedPositions(pos)) {\n            res[row][col] = false;\n          }\n        }\n      }\n    }\n    return res;\n  }\n\n  _txSetCellValue(cells, pos, value) {\n    const { row, col } = pos;\n    const { value: oldValue } = this.getCell(pos);\n    if (value === oldValue) {\n      return cells;\n    }\n\n    const curCells = this.getCurCells();\n    if (cells === curCells) {\n      cells = [...curCells];\n    }\n    if (cells[row] === curCells[row]) {\n      cells[row] = [...curCells[row]];\n    }\n    if (cells[row][col] === curCells[row][col]) {\n      cells[row][col] = { ...curCells[row][col] };\n    }\n    cells[row][col].value = value;\n    if (!Notes.is(value)) {\n      // updated related notes\n      for (const rpos of getRelatedPositions(pos)) {\n        const cell = this.getCell(rpos);\n        if (!Notes.is(cell.value)) {\n          // is not notes\n          continue;\n        }\n        cells = this._txSetCellValue(cells, rpos, Notes.delete(cell.value, value));\n      }\n    }\n    return cells;\n  }\n\n  getCurCells() {\n    if (this._txCells) {\n      // in transaction\n      return this._txCells;\n    }\n    return this.cells;\n  }\n\n  getCell({ row, col }) {\n    return this.getCurCells()[row][col];\n  }\n\n  _startTx() {\n    if (!this._txCells) {\n      this._txCells = this.getCurCells();\n    }\n  }\n\n  _commit(desc = '') {\n    if (this._txCells && this._txCells !== this.cells) {\n      this._setCells(this._txCells, desc);\n      this._txCells = null;\n      this._notify();\n    }\n  }\n\n  setCellValue(pos, value) {\n    this._startTx();\n    this._txCells = this._txSetCellValue(this._txCells, pos, value);\n  }\n\n  // actions\n  static actions = {\n    RESET: 'RESET',\n    NOTE: 'NOTE',\n    UPDATE_CELL_VALUE: 'UPDATE_CELL_VALUE',\n    AUTO_NOTE: 'AUTO_NOTE',\n    AUTO_POINTING: 'AUTO_POINTING',\n    AUTO_CLAIMING: 'AUTO_CLAIMING',\n    AUTO_PLACE: 'AUTO_PLACE',\n    AUTO_PLACE_POINTING_CLAIMING: 'AUTO_PLACE_POINTING_CLAIMING',\n    ELIMINATE_GROUP: 'ELIMINATE_GROUP',\n    ELIMINATE_XGROUP: 'ELIMINATE_XGROUP',\n    ELIMINATE_CHAIN: 'ELIMINATE_CHAIN',\n    HANDLE_TIP: 'HANDLE_TIP',\n  };\n\n  _handlActions(action, payload = {}) {\n    switch (action) {\n      case Sudoku.actions.RESET:\n        this._setPuzzle(this.puzzle);\n        break;\n      case Sudoku.actions.NOTE:\n        this._note(payload);\n        break;\n      case Sudoku.actions.AUTO_NOTE:\n        this._autoNote();\n        break;\n      case Sudoku.actions.AUTO_PLACE:\n        this._autoPlace();\n        break;\n      case Sudoku.actions.AUTO_POINTING:\n        this._autoPointing();\n        break;\n      case Sudoku.actions.AUTO_CLAIMING:\n        this._autoClaiming();\n        break;\n      case Sudoku.actions.AUTO_PLACE_POINTING_CLAIMING:\n        this._autoPlacePointingClaiming();\n        break;\n      case Sudoku.actions.UPDATE_CELL_VALUE:\n        this._updateCellValue(payload);\n        break;\n      case Sudoku.actions.ELIMINATE_GROUP:\n        this._eliminateGroup(payload);\n        break;\n      case Sudoku.actions.ELIMINATE_XGROUP:\n        this._eliminateXGroup(payload);\n        break;\n      case Sudoku.actions.ELIMINATE_CHAIN:\n        this._eliminateChain(payload);\n        break;\n      case Sudoku.actions.HANDLE_TIP:\n        this._handleTip(payload);\n        break;\n      default:\n        break;\n    }\n  }\n\n  dispatch(action, payload, options) {\n    options = { commit: true, log: true, ...(options || {}) };\n    if (options.log) {\n      console.group(`[${action}]`);\n      payload && console.log('->payload:', payload);\n      options && console.log('->options:', options);\n    }\n\n    this._startTx();\n    this._handlActions(action, payload, options);\n\n    if (options.log) {\n      console.groupEnd();\n    }\n\n    if (options.commit) {\n      this._commit(action);\n    }\n  }\n\n  reset() {\n    this.dispatch(Sudoku.actions.RESET);\n  }\n\n  note(pos) {\n    this.dispatch(Sudoku.actions.NOTE, { pos });\n  }\n\n  updateCellValue(isNoting, pos, value) {\n    this.dispatch(Sudoku.actions.UPDATE_CELL_VALUE, { isNoting, pos, value });\n  }\n\n  autoNote() {\n    this.dispatch(Sudoku.actions.AUTO_NOTE);\n  }\n\n  autoPlacePointingClaiming() {\n    this.dispatch(Sudoku.actions.AUTO_PLACE_POINTING_CLAIMING);\n  }\n\n  autoPlace() {\n    this.dispatch(Sudoku.actions.AUTO_PLACE);\n  }\n\n  autoPointing() {\n    this.dispatch(Sudoku.actions.AUTO_POINTING);\n  }\n\n  autoClaiming() {\n    this.dispatch(Sudoku.actions.AUTO_CLAIMING);\n  }\n\n  eliminateGroup(group) {\n    this.dispatch(Sudoku.actions.ELIMINATE_GROUP, { group });\n  }\n\n  eliminateXGroup(tip) {\n    this.dispatch(Sudoku.actions.ELIMINATE_XGROUP, { tip });\n  }\n\n  eliminateChain(tip) {\n    this.dispatch(Sudoku.actions.ELIMINATE_CHAIN, { tip });\n  }\n\n  handleTip(tip) {\n    this.dispatch(Sudoku.actions.HANDLE_TIP, { tip });\n  }\n\n  _note({ pos }) {\n    const { value } = this.getCell(pos);\n    if (!Notes.is(value)) {\n      return;\n    }\n    this.setCellValue(pos, Notes.new(...this.calcAvailableDigits(pos)));\n  }\n\n  _autoNote() {\n    for (const pos of flattenPositions) {\n      this.dispatch(Sudoku.actions.NOTE, { pos }, { commit: false, log: false });\n    }\n  }\n\n  _autoPlacePointingClaiming() {\n    try {\n      let count = 0;\n      do {\n        count = 0;\n        count += this._autoPlace();\n        this._commit(Sudoku.actions.AUTO_PLACE);\n        count += this._autoPointing();\n        this._commit(Sudoku.actions.AUTO_POINTING);\n        count += this._autoClaiming();\n        this._commit(Sudoku.actions.AUTO_CLAIMING);\n      } while (count > 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // auto place naked/hidden single value\n  _autoPlace() {\n    let count = 0;\n    let placed = false;\n\n    console.group('[auto place]');\n    do {\n      placed = false;\n      // 0:naked, 1:hidden\n      for (const cls of [0, 1]) {\n        for (const group of findNGroup(this.getCurCells(), 1, cls)) {\n          this.dispatch(Sudoku.actions.ELIMINATE_GROUP, { group }, { commit: false });\n          count++;\n          placed = true;\n          break;\n        }\n        /* use current cells for every find */\n        if (placed) {\n          continue;\n        }\n      }\n    } while (placed);\n    console.groupEnd();\n\n    return count;\n  }\n\n  // block eliminate row/col\n  _autoPointing() {\n    let count = 0;\n    console.group('[auto pointing]');\n    for (const tip of findNXGroup(this.getCurCells(), 1, { br: true, bc: true })) {\n      console.log(tip);\n      this.dispatch(Sudoku.actions.ELIMINATE_XGROUP, { tip }, { commit: false });\n      count++;\n    }\n    console.groupEnd();\n    return count;\n  }\n\n  // row/col eliminate block\n  _autoClaiming() {\n    let count = 0;\n    console.group('[auto claiming]');\n    for (const tip of findNXGroup(this.getCurCells(), 1, { rb: true, cb: true })) {\n      this.dispatch(Sudoku.actions.ELIMINATE_XGROUP, { tip }, { commit: false });\n      count++;\n    }\n    console.groupEnd();\n    return count;\n  }\n\n  _updateCellValue({ isNoting, pos, value }) {\n    if (isNoting) {\n      this._noteCellValue(pos, value);\n    } else {\n      this._placeCellValue(pos, value);\n    }\n  }\n\n  _placeCellValue(pos, value) {\n    const oldCell = this.getCell(pos);\n    if (oldCell.origin) {\n      // can't place origin value\n      return;\n    }\n\n    if (oldCell.value === value) {\n      // cancel current value\n      value = Notes.new();\n    }\n\n    this.setCellValue(pos, value);\n  }\n\n  _noteCellValue(pos, n) {\n    const { value } = this.getCell(pos);\n    if (!Notes.is(value)) {\n      // can't note cell with value.\n      return;\n    }\n\n    // note\n    let notes = value;\n    if (Notes.has(notes, n)) {\n      notes = Notes.delete(notes, n);\n    } else {\n      notes = Notes.add(notes, n);\n    }\n\n    this.setCellValue(pos, notes);\n  }\n\n  findGroup() {\n    for (let n = 1; n <= 8; n++) {\n      // 0:naked group, 1: hidden group\n      for (const cls of [0, 1]) {\n        for (const group of findNGroup(this.getCurCells(), n, cls)) {\n          // only return the first group\n          group.type = 'group';\n          return group;\n        }\n      }\n    }\n  }\n\n  _eliminateGroup({ group }) {\n    if (group.n === 1) {\n      // place value\n      const pos = [...group.poses][0];\n      const d = [...group.notes][0];\n\n      this.setCellValue(pos, d);\n    } else if (group.cls === 0) {\n      // naked\n      // to eliminate other cells\n      let otherPoses = [];\n      if (group.domain === 'row') {\n        otherPoses = positions.getRowPositions(group.row);\n      } else if (group.domain === 'col') {\n        otherPoses = positions.getColPositions(group.col);\n      } else if (group.domain === 'block') {\n        otherPoses = positions.getBlockFlattenPositions(group.block);\n      }\n      otherPoses = otherPoses.filter(pos => {\n        const { value } = this.getCell(pos);\n        return !(!Notes.is(value) || group.poses.has(pos));\n      });\n      for (const pos of otherPoses) {\n        const { value } = this.getCell(pos);\n        this.setCellValue(pos, Notes.delete(value, ...group.notes));\n      }\n    } else if (group.cls === 1) {\n      // hidden\n      // to eliminate other notes\n      for (const pos of group.poses) {\n        const { value } = this.getCell(pos);\n        this.setCellValue(pos, Notes.new(...Notes.entries(value).filter(n => group.notes.has(n))));\n      }\n    }\n  }\n\n  findXGroup() {\n    for (let n = 1; n <= 8; n++) {\n      for (const group of findNXGroup(this.getCurCells(), n)) {\n        group.type = 'X-Group';\n        return group;\n      }\n    }\n  }\n\n  _eliminateXGroup({ tip }) {\n    const otherPositions = [];\n    if (tip.effect === 'row') {\n      for (const row of tip.rows) {\n        otherPositions.push(...positions.getRowPositions(row));\n      }\n    } else if (tip.effect === 'col') {\n      for (const col of tip.cols) {\n        otherPositions.push(...positions.getColPositions(col));\n      }\n    } else if (tip.effect === 'block') {\n      for (const block of tip.blocks) {\n        otherPositions.push(...positions.getBlockFlattenPositions(block));\n      }\n    }\n\n    for (const pos of otherPositions) {\n      const { value } = this.getCell(pos);\n      if (!Notes.is(value) || tip.poses.has(pos)) {\n        continue;\n      }\n\n      this.setCellValue(pos, Notes.delete(value, tip.d));\n    }\n  }\n\n  findTip() {\n    const cells = this.getCurCells();\n    return this.findGroup(cells) || this.findXGroup(cells) || this.findChain(cells);\n  }\n\n  _handleTip({ tip }) {\n    if (tip.type === 'group') {\n      this.eliminateGroup(tip);\n    } else if (tip.type === 'X-Group') {\n      this.eliminateXGroup(tip);\n    } else if (tip.type === 'chain') {\n      this.eliminateChain(tip);\n    }\n  }\n\n  findChain() {\n    const cells = this.getCurCells();\n    const [dPoses, dLinks] = getDigitPosesAndLinks(cells);\n    for (const tryCellLinks of [false, true]) {\n      let dRes = null;\n      for (let d = 1; d <= 9; d++) {\n        for (const pos of dPoses[d] || []) {\n          const val = false;\n          const startNode = { pos, d, val };\n          for (const chain of searchChain([], startNode, { dLinks, cells, td: d, tryCellLinks })) {\n            chain.type = 'chain';\n            chain.name = 'chain';\n            if (!dRes || dRes.chain.length > chain.chain.length) {\n              dRes = chain;\n            }\n          }\n        }\n      }\n      if (dRes) {\n        return dRes;\n      }\n    }\n  }\n\n  _eliminateChain({ tip }) {\n    for (const pos of tip.effectedPoses) {\n      const { value } = this.getCell(pos);\n      if (!Notes.is(value)) {\n        continue;\n      }\n      this.setCellValue(pos, Notes.delete(value, tip.d));\n    }\n  }\n}\n\nfunction* searchChain(chain, node, extraData) {\n  extraData = { tryCellLinks: false, ...extraData };\n  const { pos, d, val } = node;\n  const { dLinks, cells, td } = extraData;\n\n  if (d === td && val === true) {\n    // strong target\n    // check if intersection related positions has d\n    const effectedPoses = new Set();\n    for (const cpos of positions.getCommonRelatedPositions(chain[0].pos, pos)) {\n      const { value } = positions.getCell(cells, cpos);\n      if (Notes.has(value, d)) {\n        effectedPoses.add(cpos);\n      }\n    }\n    if (effectedPoses.size > 0) {\n      yield { chain: [...chain, node], effectedPoses, d };\n    }\n  }\n  // try related links\n  const targets = dLinks[d][pos][val];\n  for (const tpos of targets) {\n    const nextNode = { pos: tpos, val: !val, d };\n\n    if (chainHasNode(chain, nextNode)) {\n      continue;\n    }\n\n    yield* searchChain([...chain, node], nextNode, extraData);\n  }\n\n  if (extraData.tryCellLinks) {\n    // try cell links\n    for (const cd of dLinks[d][pos].cell[val]) {\n      const nextNode = { pos, val: !val, d: cd };\n\n      if (chainHasNode(chain, nextNode)) {\n        continue;\n      }\n\n      yield* searchChain([...chain, node], nextNode, extraData);\n    }\n  }\n}\n\nconst chainHasNode = (chain, node) => {\n  for (const n of chain) {\n    if (n.pos === node.pos && n.val === node.val && n.d === node.d) {\n      return true;\n    }\n  }\n  return false;\n};\n\nfunction getDigitPosesAndLinks(cells) {\n  const dLinks = {};\n  const dPoses = {};\n  for (const pos of positions.flattenPositions) {\n    const { value } = positions.getCell(cells, pos);\n    if (!Notes.is(value)) {\n      continue;\n    }\n    const ds = Notes.entries(value);\n    for (const d of ds) {\n      if (!dPoses[d]) {\n        dPoses[d] = [];\n      }\n      const poses = dPoses[d];\n      if (!dLinks[d]) {\n        dLinks[d] = {};\n      }\n      const links = dLinks[d];\n\n      poses.push(pos);\n      // strong: false->true, weak: true->false\n      const strongTargets = new Set();\n      const weakTargets = new Set();\n      for (const getRelatedPositions of [getRelatedRowPositions, getRelatedColPositions, getRelatedBlockPositions]) {\n        let count = 0;\n        let strongPos = null;\n        for (const rpos of getRelatedPositions(pos)) {\n          const { value } = positions.getCell(cells, rpos);\n          if (!Notes.has(value, d)) {\n            continue;\n          }\n          weakTargets.add(rpos);\n          count++;\n          strongPos = rpos;\n        }\n        if (count === 1) {\n          strongTargets.add(strongPos);\n        }\n      }\n      const otherDs = ds.filter(v => v !== d);\n      links[pos] = {\n        false: [...strongTargets],\n        true: [...weakTargets],\n        cell: { false: ds.length === 2 ? otherDs : [], true: otherDs },\n      };\n    }\n  }\n  return [dPoses, dLinks];\n}\n\nfunction getPositionsLinks(cells, positions) {\n  const links = [];\n  for (const pos of positions) {\n    const { value } = cells[pos.row][pos.col];\n    if (!Notes.is(value)) {\n      continue;\n    }\n\n    for (const note of Notes.entries(value)) {\n      links.push([pos, note]);\n    }\n  }\n  return links;\n}\n\nfunction* findNGroup(cells, n, cls) {\n  // rows\n  for (const row of positions.rows) {\n    const links = getPositionsLinks(cells, positions.getRowPositions(row));\n    for (const group of findNGroupFromLinks(links, n, cls, { checkClear: n > 1 })) {\n      const poses = group[cls];\n      const notes = group[(cls + 1) % 2];\n      yield { cls, n, domain: 'row', row: row, poses, notes, name: ['naked', 'hidden'][cls] + `-${n}-group` };\n    }\n  }\n  // cols\n  for (const col of positions.cols) {\n    const links = getPositionsLinks(cells, positions.getColPositions(col));\n    for (const group of findNGroupFromLinks(links, n, cls, { checkClear: n > 1 })) {\n      const poses = group[cls];\n      const notes = group[(cls + 1) % 2];\n      yield { cls, n, domain: 'col', col: col, poses, notes, name: ['naked', 'hidden'][cls] + `-${n}-group` };\n    }\n  }\n  // blocks\n  for (const block of positions.blocks) {\n    const links = getPositionsLinks(cells, positions.getBlockFlattenPositions(block));\n    for (const group of findNGroupFromLinks(links, n, cls, { checkClear: n > 1 })) {\n      const poses = group[cls];\n      const notes = group[(cls + 1) % 2];\n      yield { cls, n, domain: 'block', block: block, poses, notes, name: ['naked', 'hidden'][cls] + `-${n}-group` };\n    }\n  }\n}\n\nconst getAToBLinks = (getPositions, getEnd) => (cells, d) => {\n  const links = [];\n  for (let a = 0; a < 9; a++) {\n    for (const pos of getPositions(a)) {\n      const { value } = cells[pos.row][pos.col];\n      if (!Notes.is(value)) {\n        continue;\n      }\n      if (Notes.has(value, d)) {\n        links.push([a, getEnd(pos)]);\n      }\n    }\n  }\n  return links;\n};\n\nconst getRowToColLinks = getAToBLinks(positions.getRowPositions, pos => pos.col);\nconst getRowToBlockLinks = getAToBLinks(positions.getRowPositions, pos => rowColToBlock(pos.row, pos.col));\nconst getColToBlockLinks = getAToBLinks(positions.getColPositions, pos => rowColToBlock(pos.row, pos.col));\n\nconst getPositionsForDigit = (cells, d, positions) => {\n  const poses = [];\n  for (const pos of positions) {\n    const { value } = cells[pos.row][pos.col];\n    if (Notes.is(value) && Notes.has(value, d)) {\n      poses.push(pos);\n    }\n  }\n  return poses;\n};\n\nfunction* findNXGroup(cells, n, types = { rc: true, cr: true, rb: true, br: true, cb: true, bc: true }) {\n  for (let d = 1; d <= 9; d++) {\n    if (types.rc || types.cr) {\n      // row->col\n      const rcLinks = getRowToColLinks(cells, d);\n      if (types.rc) {\n        for (const group of findNGroupFromLinks(rcLinks, n, 0)) {\n          const [rows, cols] = group;\n          const poses = [];\n          let isXWing = true;\n          for (const row of rows) {\n            const rowPositions = getPositionsForDigit(cells, d, positions.getRowPositions(row));\n            if (rowPositions.length !== n) {\n              isXWing = false;\n            }\n            poses.push(...rowPositions);\n          }\n          const name = isXWing ? `${n}-X-Wing` : `${n}-XRC-Group`;\n          yield { name, domain: 'row', effect: 'col', rows, cols, poses: new Set(poses), d };\n        }\n      }\n      // col->row\n      if (types.cr) {\n        for (const group of findNGroupFromLinks(rcLinks, n, 1)) {\n          const [cols, rows] = group;\n          const poses = [];\n          let isXWing = true;\n          for (const col of cols) {\n            const colPositions = getPositionsForDigit(cells, d, positions.getColPositions(col));\n            if (colPositions.length !== n) {\n              isXWing = false;\n            }\n            poses.push(...getPositionsForDigit(cells, d, positions.getColPositions(col)));\n          }\n          const name = isXWing ? `${n}-X-Wing` : `${n}-XCR-Group`;\n          yield { name, domain: 'col', effect: 'row', rows, cols, poses: new Set(poses), d };\n        }\n      }\n    }\n\n    if (types.rb || types.br) {\n      // row->block, 1-xrb-group is claiming\n      const rbLinks = getRowToBlockLinks(cells, d);\n      if (types.rb) {\n        for (const group of findNGroupFromLinks(rbLinks, n, 0)) {\n          const [rows, blocks] = group;\n          const poses = [];\n          for (const row of rows) {\n            poses.push(...getPositionsForDigit(cells, d, positions.getRowPositions(row)));\n          }\n          const name = n === 1 ? 'claiming' : `${n}-XRB-Group`;\n          yield { name, domain: 'row', effect: 'block', rows, blocks, poses: new Set(poses), d };\n        }\n      }\n      // block-row, 1-xbr-group is pointing\n      if (types.br) {\n        for (const group of findNGroupFromLinks(rbLinks, n, 1)) {\n          const [blocks, rows] = group;\n          const poses = [];\n          for (const block of blocks) {\n            poses.push(...getPositionsForDigit(cells, d, positions.getBlockFlattenPositions(block)));\n          }\n          const name = n === 1 ? 'pointing' : `${n}-XBR-Group`;\n          yield { name, domain: 'block', effect: 'row', rows, blocks, poses: new Set(poses), d };\n        }\n      }\n    }\n\n    if (types.cb || types.bc) {\n      // col->block, 1-xcb-group is claiming\n      const cbLinks = getColToBlockLinks(cells, d);\n      if (types.cb) {\n        for (const group of findNGroupFromLinks(cbLinks, n, 0)) {\n          const [cols, blocks] = group;\n          const poses = [];\n          for (const col of cols) {\n            poses.push(...getPositionsForDigit(cells, d, positions.getColPositions(col)));\n          }\n          const name = n === 1 ? 'claiming' : `${n}-XCB-Group`;\n          yield { name, domain: 'col', effect: 'block', cols, blocks, poses: new Set(poses), d };\n        }\n      }\n\n      // block-col, 1-xbc-group is pointing\n      if (types.bc) {\n        for (const group of findNGroupFromLinks(cbLinks, n, 1)) {\n          const [blocks, cols] = group;\n          const poses = [];\n          for (const block of blocks) {\n            poses.push(...getPositionsForDigit(cells, d, positions.getBlockFlattenPositions(block)));\n          }\n          const name = n === 1 ? 'pointing' : `${n}-XBC-Group`;\n          yield { name, domain: 'block', effect: 'col', cols, blocks, poses: new Set(poses), d };\n        }\n      }\n    }\n  }\n}\n","import React from 'react';\nimport styles from './Cell.module.scss';\nimport digits from '../../../../UI/Digits/Digits';\nimport { Notes } from '../../../../../libs/sudoku';\nimport * as positions from '../../../../../libs/position';\n\nconst noteClassName = (n, activeVal, highlighted, effectMarked, marks) => {\n  const classes = [styles.Note];\n  if (n === activeVal) {\n    classes.push(styles.ActiveValue);\n  }\n\n  if (marks) {\n    let src = null;\n    if (highlighted) {\n      src = marks.highlights;\n    } else if (effectMarked) {\n      src = marks.effect;\n    }\n\n    if (src) {\n      const { notes, subNotes } = src;\n      if (notes && notes.has(n)) {\n        classes.push(styles.MarkedNoteValue);\n      } else if (subNotes && subNotes.has(n)) {\n        classes.push(styles.MarkedValue);\n      }\n    }\n  }\n\n  return classes.join(' ');\n};\n\nconst Cell = React.memo(\n  ({ value, origin, pos, activePos, activeVal, available, showAvail, isNoting, onClick, marks }) => {\n    const { block, row, col } = pos;\n    const classes = [];\n    let content = null;\n    let isSelected = false;\n\n    if (activePos) {\n      const { row: activeRow, col: activeCol, block: activeBlock } = activePos;\n      if (row === activeRow && col === activeCol) {\n        // active\n        isSelected = true;\n        classes.push(styles.Selected);\n      } else if (row === activeRow || col === activeCol || block === activeBlock) {\n        // related area\n        classes.push(styles.Related);\n      }\n    }\n\n    let clickable = available;\n    if (available) {\n      classes.push(styles.Available);\n      if (showAvail) {\n        // show background\n        classes.push(isNoting ? styles.Note : styles.Place);\n      }\n    } else if (available === null) {\n      // deselected\n      classes.push(styles.Available);\n      clickable = true;\n    } else if (!isNoting && !origin && value === activeVal) {\n      // place mode, placed value === activeVal\n      classes.push(styles.Available);\n      clickable = true;\n    }\n\n    // marks\n    let highlighted = false;\n    let domainMarked = false;\n    let effectMarked = false;\n    if (marks) {\n      const { domain, effect, highlights } = marks;\n      if (domain) {\n        const { rows, cols, blocks } = domain;\n        if (rows && rows.has(row)) {\n          domainMarked = true;\n        }\n        if (cols && cols.has(col)) {\n          domainMarked = true;\n        }\n        if (blocks && blocks.has(block)) {\n          domainMarked = true;\n        }\n      }\n      if (effect) {\n        const { rows, cols, blocks, poses } = effect;\n        if (rows && rows.has(row)) {\n          effectMarked = true;\n        }\n        if (cols && cols.has(col)) {\n          effectMarked = true;\n        }\n        if (blocks && blocks.has(block)) {\n          effectMarked = true;\n        }\n        if (poses && poses.has(pos)) {\n          effectMarked = true;\n        }\n      }\n      if (highlights && highlights.poses.has(pos)) {\n        highlighted = true;\n      }\n    }\n    if (highlighted) {\n      classes.push(styles.MarkedHighlight);\n    } else if (domainMarked) {\n      classes.push(styles.MarkedDomain);\n    } else if (effectMarked) {\n      classes.push(styles.MarkedEffect);\n    }\n\n    if (!Notes.is(value)) {\n      classes.push(styles.Value);\n      // it's placed value\n      !origin && classes.push(styles.Placed);\n      // it's active value\n      if (value === activeVal && !isSelected) {\n        classes.push(styles.ActiveValue);\n      }\n      // it's marked value\n      if (highlighted && marks.highlights.values && marks.highlights.values.has(value)) {\n        classes.push(styles.MarkedValue);\n      }\n\n      content = digits[value];\n    } else {\n      classes.push(styles.Notes);\n      // Set: [1-9]\n      const notes = value;\n      if (Notes.size(notes) > 0) {\n        content = positions.blockShape.map((rows, idx) => (\n          <div key={idx} className={styles.RowNotes}>\n            {rows.map(i => (\n              <div key={i} className={noteClassName(i + 1, activeVal, highlighted, effectMarked, marks)}>\n                {Notes.has(notes, i + 1) ? digits[i + 1] : null}\n              </div>\n            ))}\n          </div>\n        ));\n      }\n    }\n    return (\n      <div className={classes.join(' ')} onClick={clickable ? () => onClick(pos) : undefined}>\n        {content}\n      </div>\n    );\n  }\n);\n\nexport default Cell;\n","import React from 'react';\nimport Cell from './Cell/Cell';\nimport styles from './Block.module.scss';\nimport * as positions from '../../../../libs/position';\n\nconst Block = ({\n  block,\n  activePos,\n  activeVal,\n  cells,\n  availableCells,\n  cellClickedHandler,\n  showAvail,\n  isNoting,\n  marks,\n}) => {\n  const isOdd = block % 2 === 1;\n  return (\n    <div className={`${styles.Block} ${isOdd ? styles.Odd : ''}`}>\n      {positions.getBlockPositions(block).map((rows, idx) => (\n        <div key={idx} className={styles.Row}>\n          {rows.map(pos => (\n            <Cell\n              key={pos.key}\n              {...cells[pos.row][pos.col]}\n              pos={pos}\n              activePos={activePos}\n              activeVal={activeVal}\n              available={availableCells && availableCells[pos.row][pos.col]}\n              onClick={cellClickedHandler}\n              showAvail={showAvail}\n              isNoting={isNoting}\n              marks={marks}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\nexport default Block;\n","import React from 'react';\nimport styled from 'styled-components';\n\n/*\n  make sure the width is the same with a parent's,\n  because padding refer to parent's width.\n*/\nconst Box = styled.div`\n  width: ${({ width }) => (width !== undefined ? width : 'auto')};\n  height: 0;\n  padding-top: ${({ ratio }) => 100 / ratio}%;\n  position: relative;\n`;\n\nconst Content = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  ${({ fixed, scroll }) =>\n    fixed\n      ? `\n    height: 100%;\n    overflow: ${scroll ? `scroll` : 'hidden'};\n  `\n      : `\n  min-height: 100%;\n  `}\n`;\n\nexport default ({ ratio = 1.0, fixed = true, scroll = false, children }) => {\n  return (\n    <Box ratio={ratio}>\n      <Content fixed={fixed} scroll={scroll}>\n        {children}\n      </Content>\n    </Box>\n  );\n};\n","import React from 'react';\nimport styles from './Arrow.module.scss';\nimport styled from 'styled-components';\nimport * as positions from '../../../libs/position';\n\n// shortend arrow length, to avoid tail-head contact.\nconst dd = 0.03;\n// percentage for a cell\nconst pc = (1 - 1.5 / 100) / 9;\n\nconst Arrow = styled.div`\n  user-select: none;\n  pointer-events: none;\n  position: absolute;\n  border-top: 2px ${({ type }) => type} red;\n  width: ${({ distance }) => distance * 100}%;\n  height: ${({ distance }) => distance * 100}%;\n  transform-origin: top left;\n  transform: translate(${({ x, distance }) => (x / distance) * 100}%, ${({ y, distance }) => (y / distance) * 100}%)\n    rotate(${({ deg }) => deg}deg) translate(${({ distance }) => (dd / 2 / distance) * 100}%);\n`;\n\nconst getCoord = (pos, d) => {\n  const { row, col } = pos;\n  const [localRow, localCol] = positions.getDigitLocalPos(d);\n\n  // block margin: 0.25%\n  // cell margin:1%, padding: 2.5% of block\n  const x = (col + (localCol + 0.5) / 3 + 0.35 / 100) * pc + ((Math.floor(col / 3) + 1) * 0.5 - 0.25) / 100;\n  const y = (row + (localRow + 0.5) / 3 + 0.35 / 100) * pc + ((Math.floor(row / 3) + 1) * 0.5 - 0.25) / 100;\n\n  return [x, y];\n};\n\nconst calcDistance = ([sx, sy], [ex, ey]) => {\n  const [dx, dy] = [ex - sx, ey - sy];\n\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\nconst calcDeg = ([sx, sy], [ex, ey], d) => {\n  const [dx, dy] = [ex - sx, ey - sy];\n  return ((Math.acos(dx / d) * (dy < 0 ? -1 : 1)) / Math.PI) * 180;\n};\n\nexport default ({ type = 'solid', startPos, startDigit, endPos, endDigit }) => {\n  const sc = getCoord(startPos, startDigit);\n  const ec = getCoord(endPos, endDigit);\n  const distance = calcDistance(sc, ec);\n  const deg = calcDeg(sc, ec, distance);\n  console.log(type);\n\n  return (\n    <Arrow x={sc[0]} y={sc[1]} distance={distance - dd} deg={deg} type={type}>\n      <div className={styles.Pointer}></div>\n    </Arrow>\n  );\n};\n","import React from 'react';\nimport Block from './Block/Block';\nimport AspectRatioBox from '../../UI/AspectRatio/AspectRatioBox';\nimport Arrow from './Arrow';\nimport styles from './Board.module.scss';\nimport * as positions from '../../../libs/position';\n\nconst Board = ({ availablePositions, cells, activeVal, activePos, cellClickedHandler, showAvail, isNoting, marks }) => {\n  // active value\n  if (activePos) {\n    // no active value, then selected value is active value for board\n    const { row, col } = activePos;\n    activeVal = cells[row][col].value;\n  }\n\n  console.log(marks && marks.arrows);\n  return (\n    <AspectRatioBox ratio={1.0}>\n      <div className={styles.SudokuBoard}>\n        {marks &&\n          marks.arrows &&\n          marks.arrows.map(arrow => <Arrow key={`${arrow.startPos}-${arrow.endPos}`} {...arrow} />)}\n        {positions.blockShape.map((rows, idx) => (\n          <div key={idx} className={styles.Row}>\n            {rows.map(b => (\n              <Block\n                key={b}\n                block={b}\n                cells={cells}\n                activePos={activePos}\n                activeVal={activeVal}\n                availableCells={availablePositions}\n                cellClickedHandler={cellClickedHandler}\n                showAvail={showAvail}\n                isNoting={isNoting}\n                marks={marks}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n    </AspectRatioBox>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  &::before {\n    content: '';\n    width: 1px;\n    margin-left: -1px;\n    float: left;\n    height: 0;\n    padding-top: ${({ ratio }) => 100 / ratio}%;\n  }\n  &::after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n`;\n\nexport default ({ ratio = 1.0, children, ...props }) => {\n  return (\n    <Wrapper ratio={ratio} {...props}>\n      {children}\n    </Wrapper>\n  );\n};\n","import React, { useCallback } from 'react';\nimport AspectRatioWrapper from '../../../UI/AspectRatio/AspectRatioWrapper';\nimport digits from '../../../UI/Digits/Digits';\nimport styles from './Digits.module.scss';\n\nconst Digits = React.memo(\n  ({\n    isNoting,\n    activeVal,\n    availableDigits,\n    remainingDigits,\n    digitClickedHandler,\n  }) => {\n    const genClassName = useCallback(\n      d => {\n        const classes = [styles.Digit];\n        if (d === activeVal) {\n          classes.push(styles.active);\n        }\n        if (!availableDigits.has(d)) {\n          classes.push(styles.Disabled);\n        }\n        return classes.join(' ');\n      },\n      [activeVal, availableDigits]\n    );\n\n    return (\n      <div className={`${styles.Digits} ${isNoting ? styles.isNoting : ''}`}>\n        <AspectRatioWrapper\n          className={genClassName(1)}\n          onClick={\n            availableDigits.has(1) ? () => digitClickedHandler(1) : undefined\n          }\n        >\n          {digits[1]}\n          <div className={styles.Count}>{digits[remainingDigits[1]]}</div>\n        </AspectRatioWrapper>\n        {[2, 3, 4, 5, 6, 7, 8, 9].map(d => (\n          <div\n            key={d}\n            className={genClassName(d)}\n            onClick={\n              availableDigits.has(d) ? () => digitClickedHandler(d) : undefined\n            }\n          >\n            {digits[d]}\n            <div className={styles.Count}>{digits[remainingDigits[d]]}</div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n);\n\nexport default Digits;\n","import React from 'react';\nimport Digits from './Digits/Digits';\nimport Button from '../../UI/Button/Button';\nimport styles from './Controls.module.scss';\n\nconst Controls = ({\n  cellsRecord,\n  hasPrev,\n  hasNext,\n  jump,\n  jumpToFirst,\n  jumpToLast,\n  remainingDigits,\n  activeVal,\n  availableDigits,\n  digitClickedHandler,\n  showAvail,\n  isNoting,\n  deselectHandler,\n  toggleShowAvailHandler,\n  toggleIsNotingHandler,\n  resetHandler,\n  eraseValueHandler,\n  autoNoteHandler,\n  autoPlacePointingClaimingHandler,\n  tip,\n  tipHandler,\n}) => {\n  return (\n    <div className={styles.Controls}>\n      <div className={styles.History}>\n        <Button disabled={!hasPrev} onClick={jumpToFirst}>\n          first\n        </Button>\n        <Button disabled={!hasPrev} onClick={() => jump(-1)}>\n          prev\n        </Button>\n        <span>#{cellsRecord.idx}</span>\n        <Button disabled={!hasNext} onClick={() => jump(1)}>\n          next\n        </Button>\n        <Button disabled={!hasNext} onClick={jumpToLast}>\n          last\n        </Button>\n        <span>{cellsRecord.desc}</span>\n      </div>\n      <div className={styles.Panel}>\n        <Button onClick={resetHandler}>Reset</Button>\n        <Button onClick={eraseValueHandler}>Erase</Button>\n        <Button onClick={deselectHandler}>Deselect</Button>\n        <Button type={showAvail ? 'On' : 'Off'} onClick={toggleShowAvailHandler}>\n          Avail\n        </Button>\n        <Button type={isNoting ? 'On' : 'Off'} onClick={toggleIsNotingHandler}>\n          Note\n        </Button>\n      </div>\n      <Digits\n        isNoting={isNoting}\n        activeVal={activeVal}\n        availableDigits={availableDigits}\n        remainingDigits={remainingDigits}\n        digitClickedHandler={digitClickedHandler}\n      />\n      <div className={styles.Tools}>\n        <Button onClick={autoNoteHandler}>note</Button>\n        <Button onClick={autoPlacePointingClaimingHandler}>place/point/claim</Button>\n        <div className={styles.Tip}>\n          <Button type={tip && 'On'} onClick={tipHandler}>\n            {tip ? tip.name : 'tip'}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Controls;\n","import React from 'react';\nimport styles from './Backdrop.module.css';\n\nconst Backdrop = ({ show, onClick }) =>\n  show ? <div className={styles.Backdrop} onClick={onClick} /> : null;\n\nexport default Backdrop;\n","import React from 'react';\nimport Backdrop from '../Backdrop/Backdrop';\nimport styles from './Modal.module.scss';\n\nconst Modal = ({ show = false, close, children }) => {\n  const classes = [styles.Modal];\n  if (show) {\n    classes.push(styles.Show);\n  }\n  return (\n    <>\n      <Backdrop show={show} onClick={close} />\n      <div className={classes.join(' ')}>\n        <div className={styles.Close} onClick={close}>\n          X\n        </div>\n        {children}\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(React.memo(Modal), (prevProps, nextProps) => {\n  return !prevProps.show && !nextProps.show;\n});\n","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport Button from '../../components/UI/Button/Button';\nimport Board from '../../components/Sudoku/Board/Board';\nimport Controls from '../../components/Sudoku/Controls/Controls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport QRCode from 'qrcode.react';\nimport styles from './Main.module.scss';\nimport * as sudokus from '../../libs/sudoku';\nimport { Notes } from '../../libs/sudoku';\nimport { getPosition } from '../../libs/position';\nimport { console } from '../../libs/utils';\n\nconst Sudoku = ({ /** @type {sudokus.Sudoku} */ sudoku = new sudokus.Sudoku(), startNewGameHandler, emptyHandler }) => {\n  const [showShare, setShowShare] = useState(false);\n  const [, setChanged] = useState(0);\n  useEffect(() => {\n    sudoku.subscribe(setChanged);\n    return () => {\n      sudoku.unsubscribe(setChanged);\n    };\n  }, [sudoku]);\n\n  // {pos:[row, col], val:0}\n  const [activeState, setActiveState] = useState({ pos: null, val: 0 });\n  const { pos: activePos, val: activeVal } = activeState;\n  const [showAvail, setShowAvail] = useState(false);\n  const [isNoting, setIsNoting] = useState(true);\n  const [tip, setTip] = useState(null);\n\n  // calculated states\n  const cellsRecord = sudoku.cellsRecord;\n  const { cells } = cellsRecord;\n  // cells dependency is needed for memo check\n  const availableDigits = useMemo(() => sudoku.calcAvailableDigits(activePos, cells), [activePos, sudoku, cells]);\n  const availablePositions = useMemo(() => sudoku.calcAvailablePositions(activeVal, cells), [activeVal, sudoku, cells]);\n  const remainingDigits = useMemo(() => sudoku.calcRemainingDigits(cells), [sudoku, cells]);\n\n  // handlers\n  const cellClickedHandler = useCallback(\n    pos => {\n      if (activeVal !== 0) {\n        // place or note\n        sudoku.updateCellValue(isNoting, pos, activeVal);\n      } else {\n        // select position\n        setActiveState(({ pos: curActivePos }) => {\n          if (curActivePos) {\n            if (pos === curActivePos) {\n              // cancel current selected\n              pos = null;\n            }\n          }\n          return { pos, val: 0 };\n        });\n      }\n    },\n    [activeVal, isNoting, sudoku]\n  );\n\n  const digitClickedHandler = useCallback(\n    (d, force = false) => {\n      // force active specified digit\n      if (!force) {\n        if (!availableDigits.has(d)) {\n          return;\n        }\n\n        if (activePos) {\n          // place or note\n          sudoku.updateCellValue(isNoting, activePos, d);\n        } else {\n          // active a value\n          setActiveState(({ val: curActiveVal }) => {\n            let val = d;\n            if (curActiveVal === d) {\n              // cancel active\n              val = 0;\n            }\n            return { pos: null, val };\n          });\n        }\n      } else {\n        // active a value\n        setActiveState({ pos: null, val: d });\n      }\n    },\n    [activePos, availableDigits, isNoting, sudoku]\n  );\n\n  const deselectHandler = useCallback(() => {\n    setActiveState({ pos: null, val: 0 });\n  }, []);\n\n  const resetHandler = useCallback(() => {\n    if (!window.confirm || window.confirm('Are you sure to reset?')) {\n      sudoku.reset();\n      deselectHandler();\n    }\n  }, [deselectHandler, sudoku]);\n\n  const eraseValueHandler = useCallback(() => {\n    if (activePos) {\n      sudoku.updateCellValue(false, activePos, Notes.new());\n    }\n  }, [activePos, sudoku]);\n\n  const toggleShowAvailHandler = useCallback(() => {\n    setShowAvail(showAvail => !showAvail);\n  }, []);\n\n  const toggleIsNotingHandler = useCallback(() => {\n    setIsNoting(isNoting => !isNoting);\n  }, []);\n\n  const autoNoteHandler = useCallback(() => {\n    sudoku.autoNote();\n  }, [sudoku]);\n\n  const autoPlacePointingClaimingHandler = useCallback(() => {\n    sudoku.autoPlacePointingClaiming();\n  }, [sudoku]);\n\n  const tipHandler = useCallback(() => {\n    if (tip) {\n      // clear\n      setTip(null);\n\n      // handle tip\n      sudoku.handleTip(tip);\n    } else {\n      // find tip\n      const t = sudoku.findTip();\n      if (t) {\n        console.log('tip:', t);\n        setTip(t);\n      }\n    }\n    // deselect\n    deselectHandler();\n  }, [deselectHandler, sudoku, tip]);\n\n  const moveActivePos = useCallback(\n    (dRow, dCol) => {\n      if (activePos) {\n        setActiveState(({ pos: { row: curRow, col: curCol } }) => {\n          const pos = getPosition((curRow + 9 + dRow) % 9, (curCol + 9 + dCol) % 9);\n          return { val: 0, pos };\n        });\n      }\n    },\n    [activePos]\n  );\n\n  const moveActiveVal = useCallback(\n    d => {\n      if (activeVal) {\n        setActiveState(({ val: curVal }) => {\n          const val = ((curVal - 1 + d + 9) % 9) + 1;\n          return { pos: null, val };\n        });\n      }\n    },\n    [activeVal]\n  );\n\n  const marks = useMemo(() => {\n    if (tip) {\n      if (tip.type === 'group') {\n        const { cls, domain, poses, notes } = tip;\n        if (cls === 0) {\n          // naked\n          return { effect: { [domain + 's']: new Set([tip[domain]]), notes }, highlights: { poses, notes } };\n        } else if (cls === 1) {\n          // hidden\n          return { domain: { [domain + 's']: new Set([tip[domain]]), notes }, highlights: { poses, notes } };\n        }\n      } else if (tip.type === 'X-Group') {\n        const { domain, rows, cols, blocks, poses, d } = tip;\n        const notes = new Set([d]);\n        if (domain === 'row') {\n          return { domain: { rows }, effect: { cols, blocks, notes }, highlights: { poses, notes } };\n        } else if (domain === 'col') {\n          return { domain: { cols }, effect: { rows, blocks, notes }, highlights: { poses, notes } };\n        } else if (domain === 'block') {\n          return { domain: { blocks }, effect: { rows, cols, notes }, highlights: { poses, notes } };\n        }\n      } else if (tip.type === 'chain') {\n        const { chain, effectedPoses, d } = tip;\n        const poses = new Set(chain.map(n => n.pos));\n        const subNotes = new Set(chain.map(n => n.d).filter(v => v !== d));\n        const notes = new Set([d]);\n\n        const arrows = [];\n        let startNode = chain[0];\n        for (const endNode of chain.slice(1)) {\n          arrows.push({\n            startPos: startNode.pos,\n            startDigit: startNode.d,\n            endPos: endNode.pos,\n            endDigit: endNode.d,\n            type: endNode.val ? 'solid' : 'dashed',\n          });\n          startNode = endNode;\n        }\n        return { arrows, effect: { poses: effectedPoses, notes }, highlights: { poses, notes, subNotes } };\n      }\n    }\n  }, [tip]);\n\n  // event listeners\n  useEffect(() => {\n    const keydownHandler = e => {\n      console.log(e);\n      // TODO: handler other shortcut keys\n      if (e.code.startsWith('Digit')) {\n        const d = parseInt(e.key);\n        digitClickedHandler(d);\n      } else if (e.key === 'N') {\n        startNewGameHandler();\n      } else if (e.key === 'n') {\n        if (e.ctrlKey) {\n          autoNoteHandler();\n        } else {\n          toggleIsNotingHandler();\n        }\n      } else if (e.key === 'b') {\n        if (!activeVal && !activePos) {\n          cellClickedHandler(getPosition(4, 4));\n        }\n      } else if (e.key === 'd' || e.key === 'Escape') {\n        deselectHandler();\n      } else if (e.key === 't') {\n        tipHandler();\n      } else if (e.key === 'p') {\n        autoPlacePointingClaimingHandler();\n      } else if (e.key === 'h' || e.key === 'ArrowLeft') {\n        if (activePos) {\n          moveActivePos(0, -1);\n        } else if (activeVal) {\n          moveActiveVal(-1);\n        } else {\n          sudoku.jumpToFirst();\n        }\n      } else if (e.key === 'l' || e.key === 'ArrowRight') {\n        if (activePos) {\n          moveActivePos(0, 1);\n        } else if (activeVal) {\n          moveActiveVal(1);\n        } else {\n          sudoku.jumpToLast();\n        }\n      } else if (e.key === 'j' || e.key === 'ArrowDown') {\n        if (activePos) {\n          moveActivePos(1, 0);\n        } else if (activeVal) {\n          moveActiveVal(-1);\n        } else {\n          sudoku.jump(-1);\n        }\n      } else if (e.key === 'k' || e.key === 'ArrowUp') {\n        if (activePos) {\n          moveActivePos(-1, 0);\n        } else if (activeVal) {\n          moveActiveVal(1);\n        } else {\n          sudoku.jump(1);\n        }\n      } else {\n        return;\n      }\n      e.preventDefault();\n    };\n    document.addEventListener('keydown', keydownHandler);\n\n    return () => {\n      document.removeEventListener('keydown', keydownHandler);\n    };\n  }, [\n    activePos,\n    activeVal,\n    autoNoteHandler,\n    autoPlacePointingClaimingHandler,\n    cellClickedHandler,\n    deselectHandler,\n    digitClickedHandler,\n    moveActivePos,\n    moveActiveVal,\n    startNewGameHandler,\n    sudoku,\n    tipHandler,\n    toggleIsNotingHandler,\n  ]);\n\n  useEffect(() => {\n    // clear tip if values changed\n    setTip(null);\n  }, [cells]);\n\n  let shareContent = null;\n  if (showShare) {\n    const url = new URL(window.location);\n    const initialPuzzle = sudoku.initialPuzzle;\n    const curPuzzle = sudoku.stringify();\n    url.search = '?puzzle=' + curPuzzle;\n    shareContent = (\n      <div className={styles.QRCode}>\n        <QRCode size={256} value={url.toString()} />\n        <p>{initialPuzzle}</p>\n        <p>{curPuzzle}</p>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Modal show={showShare} close={() => setShowShare(false)}>\n        {shareContent}\n      </Modal>\n      <div className={styles.Menu}>\n        <Button onClick={startNewGameHandler}>New</Button>\n        <Button onClick={emptyHandler}>Empty</Button>\n        <Button onClick={() => setShowShare(true)}>Share</Button>\n      </div>\n      <div className={styles.Board}>\n        <Board\n          cells={cells}\n          availablePositions={availablePositions}\n          activeVal={activeVal}\n          activePos={activePos}\n          cellClickedHandler={cellClickedHandler}\n          showAvail={showAvail}\n          isNoting={isNoting}\n          marks={marks}\n        />\n      </div>\n      <div className={styles.Controls}>\n        <Controls\n          cellsRecord={cellsRecord}\n          hasPrev={sudoku.hasPrev}\n          hasNext={sudoku.hasNext}\n          jump={sudoku.jump}\n          jumpToFirst={sudoku.jumpToFirst}\n          jumpToLast={sudoku.jumpToLast}\n          remainingDigits={remainingDigits}\n          activeVal={activeVal}\n          availableDigits={availableDigits}\n          digitClickedHandler={digitClickedHandler}\n          showAvail={showAvail}\n          isNoting={isNoting}\n          resetHandler={resetHandler}\n          eraseValueHandler={eraseValueHandler}\n          deselectHandler={deselectHandler}\n          toggleShowAvailHandler={toggleShowAvailHandler}\n          toggleIsNotingHandler={toggleIsNotingHandler}\n          autoNoteHandler={autoNoteHandler}\n          autoPlacePointingClaimingHandler={autoPlacePointingClaimingHandler}\n          tip={tip}\n          tipHandler={tipHandler}\n        />\n      </div>\n      <div className={styles.Info}></div>\n    </>\n  );\n};\n\nexport default Sudoku;\n","import React, { useState, useCallback, useRef } from 'react';\nimport Button from '../../components/UI/Button/Button';\nimport styles from './NewGame.module.scss';\nimport { useEffect } from 'react';\n\nconst samplePuzzle = `901002708\n570060000\n000000004\n000000000\n700421900\n000098030\n300506070\n009003000\n000080051`;\n\nconst NewGame = ({ cancelNewGameHandler, newGameHandler, error }) => {\n  const [puzzle, setPuzzle] = useState('');\n  const puzzleChangedHandler = useCallback(event => {\n    setPuzzle(event.target.value);\n  }, []);\n\n  const textareaRef = useRef();\n  useEffect(() => {\n    textareaRef.current.focus();\n  }, []);\n\n  // event listeners\n  useEffect(() => {\n    const keydownHandler = e => {\n      // console.log(e);\n      if (e.key === 'Escape') {\n        cancelNewGameHandler();\n      } else if (e.key === 'Enter' && e.shiftKey) {\n        newGameHandler(puzzle);\n      } else {\n        return;\n      }\n      e.preventDefault();\n    };\n    document.addEventListener('keydown', keydownHandler);\n\n    return () => {\n      document.removeEventListener('keydown', keydownHandler);\n    };\n  }, [cancelNewGameHandler, newGameHandler, puzzle]);\n\n  return (\n    <div className={styles.NewGame}>\n      <h1>input a new puzzle</h1>\n      {error && <div className={styles.Error}>{error.message}</div>}\n      <textarea\n        ref={textareaRef}\n        id=\"puzzle\"\n        name=\"puzzle\"\n        inputMode=\"numeric\"\n        onChange={puzzleChangedHandler}\n        value={puzzle}\n        placeholder={samplePuzzle}\n      />\n      <Button onClick={cancelNewGameHandler}>Cancel</Button>\n      <Button onClick={() => newGameHandler(puzzle)}>Done</Button>\n    </div>\n  );\n};\n\nexport default NewGame;\n","import React, { useState, useCallback } from 'react';\nimport Main from './Main';\nimport NewGame from './NewGame';\nimport styles from './Sudoku.module.scss';\nimport * as sudokus from '../../libs/sudoku';\n\nconst Sudoku = () => {\n  const [sudoku, setSudoku] = useState(() => {\n    // get puzzle from url search parameter: puzzle\n    const puzzle = new URLSearchParams(window.location.search).get('puzzle');\n    try {\n      return new sudokus.Sudoku(puzzle);\n    } catch (error) {\n      return new sudokus.Sudoku();\n    }\n  });\n  const [isNewGame, setIsNewGame] = useState(false);\n  const [puzzleError, setPuzzleError] = useState(null);\n\n  // handlers\n  const startNewGameHandler = useCallback(() => {\n    setIsNewGame(true);\n  }, []);\n  const cancelNewGameHandler = useCallback(() => {\n    setIsNewGame(false);\n  }, []);\n\n  const newGameHandler = useCallback(puzzle => {\n    try {\n      setSudoku(new sudokus.Sudoku(puzzle));\n      setIsNewGame(false);\n    } catch (error) {\n      setPuzzleError(error);\n    }\n  }, []);\n\n  const emptyHandler = useCallback(() => {\n    newGameHandler();\n  }, [newGameHandler]);\n\n  let content = null;\n  if (isNewGame) {\n    content = (\n      <NewGame cancelNewGameHandler={cancelNewGameHandler} newGameHandler={newGameHandler} error={puzzleError} />\n    );\n  } else {\n    content = <Main sudoku={sudoku} startNewGameHandler={startNewGameHandler} emptyHandler={emptyHandler} />;\n  }\n\n  return <div className={styles.Sudoku}>{content}</div>;\n};\n\nexport default Sudoku;\n","import React from 'react';\nimport Sudoku from './containers/Sudodu/Sudoku';\n\nexport default function App() {\n  return <Sudoku />;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}