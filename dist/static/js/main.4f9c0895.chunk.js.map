{"version":3,"sources":["components/Sudoku/Board/Block/Cell/Cell.module.scss","components/UI/Digits/Digits.module.scss","components/Sudoku/Controls/Digits/Digits.module.scss","components/Sudoku/Board/Block/Block.module.scss","containers/Sudodu/Main.module.scss","components/Sudoku/Board/Board.module.scss","components/Sudoku/Controls/Controls.module.scss","components/UI/Modal/Modal.module.scss","components/UI/Button/Button.module.scss","containers/Sudodu/NewGame.module.scss","components/UI/Backdrop/Backdrop.module.css","containers/Sudodu/Sudoku.module.scss","components/UI/Button/Button.js","components/UI/Digits/Digits.js","libs/utils.js","libs/sudoku.js","components/Sudoku/Board/Block/Cell/Cell.js","components/Sudoku/Board/Block/Block.js","components/UI/AspectRatio/AspectRatioBox.js","components/Sudoku/Board/Board.js","components/UI/AspectRatio/AspectRatioWrapper.js","components/Sudoku/Controls/Digits/Digits.js","components/Sudoku/Controls/Controls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","containers/Sudodu/Main.js","containers/Sudodu/NewGame.js","containers/Sudodu/Sudoku.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","type","onClick","children","classes","styles","push","className","join","generateDigit","digitClass","c","color","digitClassName","style","backgroundColor","Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine","combx","comb","findNGroupFromLinks","d","n","k","i","res","f","links","order","s","link","start","end","v","ends","Set","add","points","Object","values","xpoints","filter","p","size","length","idxes","starts","idx","point","forEach","cleared","has","e","findNGroup","findNXGroup","cellToBlockMapping","blockToCellsMapping","r","getCellBlock","row","col","getBlockCells","block","getRowCells","getColCells","getRelatedBlockCells","getRelatedRowCells","getRelatedColCells","getRelatedCells","calcAvailableDigits","pos","origin","value","delete","cellPattern","valuePattern","simpleCheckPuzzle","puzzle","Error","cells","match","parsePuzzle","cellValues","map","cell","startsWith","endsWith","notes","slice","split","parseInt","test","Array","from","j","stringify","setValues","curValues","copyValues","updateRelatedNotes","updateValues","isNoting","oldValue","autoNote","checkUniqueValue","remNotes","autoPlace","copied","placed","tryCopyValues","console","group","log","uv","groupEnd","pointing","b","results","hasOwnProperty","to","curValue","claiming","encodePos","getCellsLinks","note","cls","poses","domain","eliminateGroup","otherCells","decodePos","getAToBLinks","getCells","getEnd","a","getRowToColLinks","getRowToBlockLinks","getColToBlockLinks","getEncodedPosesForDigit","rcLinks","rows","cols","name","effect","rbLinks","blocks","cbLinks","findTip","findGroup","findXGroup","handleTip","tip","eliminateXWing","eliminateXGroup","noteClassName","activeVal","Note","ActiveValue","MarkedValue","Cell","React","memo","activePos","available","showAvail","marks","sudoku","content","isSelected","activeRow","activeCol","activeBlock","Selected","Related","clickable","Available","Place","highlighted","domainMarked","effectMarked","highlights","MarkedHighlight","MarkedDomain","MarkedEffect","valueMarked","Value","Placed","digits","Notes","RowNotes","undefined","Block","rowStart","colStart","availableCells","cellClickedHandler","isOdd","Odd","Row","Box","styled","div","width","ratio","Content","fixed","scroll","Board","useMemo","AspectRatioBox","SudokuBoard","Wrapper","props","Digits","availableDigits","remainingDigits","digitClickedHandler","genClassName","useCallback","Digit","active","Disabled","AspectRatioWrapper","Count","key","Controls","deselectHandler","toggleShowAvailHandler","toggleIsNotingHandler","resetHandler","eraseValueHandler","autoNoteHandler","autoPlaceHandler","pointingHandler","claimingHandler","tipHandler","1","2","3","4","5","6","7","8","9","Panel","Tools","Tip","Backdrop","show","close","Modal","Show","Close","prevProps","nextProps","Sudoku","startNewGameHandler","emptyHandler","useState","showShare","setShowShare","initialPuzzle","setInitialPuzzle","val","activeState","setActiveState","setShowAvail","setIsNoting","setTip","curActivePos","curRow","curCol","force","curActiveVal","window","confirm","t","moveActivePos","dRow","dCol","useEffect","keydownHandler","code","ctrlKey","preventDefault","document","addEventListener","removeEventListener","shareContent","url","URL","location","curPuzzle","search","QRCode","toString","Menu","Info","NewGame","cancelNewGameHandler","newGameHandler","error","setPuzzle","puzzleChangedHandler","event","target","textareaRef","useRef","current","focus","shiftKey","message","ref","id","inputMode","onChange","placeholder","defaultPuzzle","URLSearchParams","get","isNewGame","setIsNewGame","puzzleError","setPuzzleError","Main","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","process","href","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4f9c0895.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Value\":\"Cell_Value__1lDbW\",\"Notes\":\"Cell_Notes__10ap7\",\"Related\":\"Cell_Related__ET6Lg\",\"Available\":\"Cell_Available__3vvqK\",\"Place\":\"Cell_Place__3TPHN\",\"Note\":\"Cell_Note__2U2fC\",\"MarkedDomain\":\"Cell_MarkedDomain__31hFJ\",\"MarkedEffect\":\"Cell_MarkedEffect___usON\",\"MarkedHighlight\":\"Cell_MarkedHighlight__2O1xC\",\"ActiveValue\":\"Cell_ActiveValue__3McOV\",\"Placed\":\"Cell_Placed__3HOvj\",\"Selected\":\"Cell_Selected__2LsAU\",\"MarkedValue\":\"Cell_MarkedValue__dMEee\",\"RowNotes\":\"Cell_RowNotes__1QNhn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Zero\":\"Digits_Zero__2W6xd\",\"One\":\"Digits_One__-wXsd\",\"Two\":\"Digits_Two__5WRCG\",\"Three\":\"Digits_Three__1GKk-\",\"Four\":\"Digits_Four__1ahFU\",\"Five\":\"Digits_Five__3m1dx\",\"Six\":\"Digits_Six__kvriF\",\"Seven\":\"Digits_Seven__2_nmU\",\"Eight\":\"Digits_Eight__GNMw3\",\"Nine\":\"Digits_Nine__3u9wd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Digits\":\"Digits_Digits__3-KZF\",\"Digit\":\"Digits_Digit__1MXW9\",\"digit\":\"Digits_digit__3Mpxe\",\"Disabled\":\"Digits_Disabled__1N4Jw\",\"active\":\"Digits_active__2AexO\",\"Count\":\"Digits_Count__Eq4Q5\",\"isNoting\":\"Digits_isNoting__-OBTK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Block\":\"Block_Block__1kJyh\",\"Odd\":\"Block_Odd__2xFZf\",\"Row\":\"Block_Row__11Olq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Main_Menu__3YGZL\",\"Board\":\"Main_Board__3XJet\",\"Controls\":\"Main_Controls__1MSdo\",\"Info\":\"Main_Info__2888w\",\"QRCode\":\"Main_QRCode__1jj5B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SudokuBoard\":\"Board_SudokuBoard__3cPYp\",\"Row\":\"Board_Row__2r5V5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Controls\":\"Controls_Controls__1Accx\",\"Panel\":\"Controls_Panel__1AK4m\",\"Tools\":\"Controls_Tools__1-fbY\",\"Tip\":\"Controls_Tip__2IHiE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__31OI7\",\"Show\":\"Modal_Show__d05bc\",\"Close\":\"Modal_Close__IQjCe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"On\":\"Button_On__3d77T\",\"Off\":\"Button_Off__R9f9J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewGame\":\"NewGame_NewGame__2hKIv\",\"Error\":\"NewGame_Error__mao55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sudoku\":\"Sudoku_Sudoku__3acWS\",\"Menu\":\"Sudoku_Menu__1l9tJ\",\"Board\":\"Sudoku_Board__rWs6R\",\"Controls\":\"Sudoku_Controls__2JIvy\",\"Info\":\"Sudoku_Info__2OByE\",\"QRCode\":\"Sudoku_QRCode__LWWQ5\"};","import React from 'react';\nimport styles from './Button.module.scss';\n\nconst Button = ({ type, onClick, children }) => {\n  const classes = [styles.Button];\n  if (type) {\n    classes.push(styles[type]);\n  }\n  return (\n    <button className={classes.join(' ')} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport styles from './Digits.module.scss';\n\nconst styleColor = c => (c ? { backgroundColor: c } : {});\n\nconst generateDigit = digitClass => ({\n  color,\n  digitClassName = 'digit',\n  className = '',\n  children,\n}) => (\n  <div\n    className={`${digitClass} ${digitClassName} ${className}`}\n    style={styleColor(color)}\n  >\n    {children}\n  </div>\n);\n\nexport const Zero = generateDigit(styles.Zero);\nexport const One = generateDigit(styles.One);\nexport const Two = generateDigit(styles.Two);\nexport const Three = generateDigit(styles.Three);\nexport const Four = generateDigit(styles.Four);\nexport const Five = generateDigit(styles.Five);\nexport const Six = generateDigit(styles.Six);\nexport const Seven = generateDigit(styles.Seven);\nexport const Eight = generateDigit(styles.Eight);\nexport const Nine = generateDigit(styles.Nine);\n\nexport default [\n  <Zero />,\n  <One />,\n  <Two />,\n  <Three />,\n  <Four />,\n  <Five />,\n  <Six />,\n  <Seven />,\n  <Eight />,\n  <Nine />,\n];\n","function* combx(d, n, k) {\n  if (n < k) {\n  } else if (k === 1) {\n    for (let i = d; i < n + d; i++) {\n      yield [i];\n    }\n  } else if (n === k) {\n    const res = [];\n    for (let i = d; i < n + d; i++) {\n      res.push(i);\n    }\n    yield res;\n  } else {\n    // with 0\n    for (const res of combx(d + 1, n - 1, k - 1)) {\n      yield [d, ...res];\n    }\n    // without 0\n    yield* combx(d + 1, n - 1, k);\n  }\n}\n\nexport function* comb(n, k) {\n  yield* combx(0, n, k);\n}\n\nexport function* findNGroupFromLinks(links, n, order = 0) {\n  const s = {};\n  for (const link of links) {\n    const start = link[order];\n    const end = link[(order + 1) % 2];\n    const v = s[start] || { start, ends: new Set() };\n    v.ends.add(end);\n    s[start] = v;\n  }\n  const points = Object.values(s);\n  const xpoints = points.filter(p => p.ends.size <= n);\n  if (xpoints.length <= n) {\n    // only return group if count(starts) > n\n    return;\n  }\n\n  for (const idxes of comb(xpoints.length, n)) {\n    // check\n    const starts = new Set();\n    const ends = new Set();\n    for (const idx of idxes) {\n      const point = xpoints[idx];\n      starts.add(point.start);\n      point.ends.forEach(ends.add, ends);\n      if (ends.size > n) {\n        break;\n      }\n    }\n    if (ends.size === n) {\n      let cleared = true;\n      // check if group is cleared\n      for (const p of points.filter(p => !starts.has(p.start))) {\n        if ([...p.ends].filter(e => !ends.has(e)).length < p.ends.size) {\n          // other starts has end in ends\n          // need clear\n          cleared = false;\n          break;\n        }\n      }\n\n      if (!cleared) {\n        yield [starts, ends];\n      }\n    }\n  }\n}\n\nconst _store = {};\nexport const memorize = f => (...args) => {\n  if (_store[f]) {\n    _store[f] = { args: [], res: undefined };\n  }\n  const data = _store[f];\n  if (!(data.args.length === args.length && data.args.reduce((r, arg, idx) => r && Object.is(arg, args[idx]), true))) {\n    data.args = args;\n    data.res = f(...args);\n  }\n  return data.res;\n};\n","import { findNGroupFromLinks } from './utils';\n\nconst cellToBlockMapping = [\n  [0, 0, 0, 1, 1, 1, 2, 2, 2],\n  [0, 0, 0, 1, 1, 1, 2, 2, 2],\n  [0, 0, 0, 1, 1, 1, 2, 2, 2],\n  [3, 3, 3, 4, 4, 4, 5, 5, 5],\n  [3, 3, 3, 4, 4, 4, 5, 5, 5],\n  [3, 3, 3, 4, 4, 4, 5, 5, 5],\n  [6, 6, 6, 7, 7, 7, 8, 8, 8],\n  [6, 6, 6, 7, 7, 7, 8, 8, 8],\n  [6, 6, 6, 7, 7, 7, 8, 8, 8],\n];\n\nconst blockToCellsMapping = [[], [], [], [], [], [], [], [], []];\nfor (let r = 0; r < 9; r++) {\n  for (let c = 0; c < 9; c++) {\n    blockToCellsMapping[cellToBlockMapping[r][c]].push([r, c]);\n  }\n}\n\nexport const getCellBlock = (row, col) => (row >= 0 && col >= 0 ? cellToBlockMapping[row][col] : -1);\n\nexport const getBlockCells = block => blockToCellsMapping[block];\nexport const getRowCells = row => [\n  [row, 0],\n  [row, 1],\n  [row, 2],\n  [row, 3],\n  [row, 4],\n  [row, 5],\n  [row, 6],\n  [row, 7],\n  [row, 8],\n];\nexport const getColCells = col => [\n  [0, col],\n  [1, col],\n  [2, col],\n  [3, col],\n  [4, col],\n  [5, col],\n  [6, col],\n  [7, col],\n  [8, col],\n];\n\nexport const getRelatedBlockCells = (row, col) =>\n  blockToCellsMapping[getCellBlock(row, col)].filter(c => !(c[0] === row && c[1] === col));\n\nexport const getRelatedRowCells = (row, col) => getRowCells(row).filter(c => c[1] !== col);\n\nexport const getRelatedColCells = (row, col) => getColCells(col).filter(c => c[0] !== row);\n\n//  related cells without self.\nexport const getRelatedCells = (row, col) => [\n  ...getRelatedRowCells(row, col),\n  ...getRelatedColCells(row, col),\n  ...getRelatedBlockCells(row, col),\n];\n\n// calcuate available digits for cell at postion <pos>.\nexport const calcAvailableDigits = (values, pos) => {\n  let res = new Set([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  if (pos) {\n    const [row, col] = pos;\n    const value = values[row][col];\n    if (value.origin) {\n      // origin can't be changed\n      return new Set();\n    }\n\n    for (const [r, c] of getRelatedCells(row, col)) {\n      const v = values[r][c].value;\n      if (typeof v === 'number') {\n        res.delete(v);\n      }\n    }\n  }\n  return res;\n};\n\nexport const calcRemainingDigits = values => {\n  const res = { 1: 9, 2: 9, 3: 9, 4: 9, 5: 9, 6: 9, 7: 9, 8: 9, 9: 9 };\n  for (const row of values) {\n    for (const cell of row) {\n      const { value } = cell;\n      if (typeof value === 'number') {\n        res[value]--;\n      }\n    }\n  }\n  return res;\n};\n\nexport const calcAvailableCells = (values, d) => {\n  if (d <= 0) {\n    return null;\n  }\n\n  const res = [\n    [true, true, true, true, true, true, true, true, true],\n    [true, true, true, true, true, true, true, true, true],\n    [true, true, true, true, true, true, true, true, true],\n    [true, true, true, true, true, true, true, true, true],\n    [true, true, true, true, true, true, true, true, true],\n    [true, true, true, true, true, true, true, true, true],\n    [true, true, true, true, true, true, true, true, true],\n    [true, true, true, true, true, true, true, true, true],\n    [true, true, true, true, true, true, true, true, true],\n  ];\n  for (let r = 0; r < 9; r++) {\n    for (let c = 0; c < 9; c++) {\n      const { value } = values[r][c];\n      if (typeof value === 'number') {\n        res[r][c] = false;\n        if (value === d) {\n          // clear\n          for (const [row, col] of getRelatedCells(r, c)) {\n            res[row][col] = false;\n          }\n        }\n      }\n    }\n  }\n  return res;\n};\n\nconst cellPattern = /(\\d)|(p\\d)|(n[1-9]*N)/g;\nconst valuePattern = /^[1-9]$/;\n\nexport const simpleCheckPuzzle = puzzle => {\n  if (!puzzle || puzzle.length < 81) {\n    throw new Error(`bad sudoku puzzle format [${puzzle}]`);\n  }\n  // split cell\n  const cells = puzzle.match(cellPattern);\n  if (cells.length !== 81) {\n    throw new Error(`bad sudoku puzzle format [${puzzle}]`);\n  }\n  return cells;\n};\n\nexport const parsePuzzle = puzzle => {\n  const cells = simpleCheckPuzzle(puzzle);\n\n  // parse values\n  const cellValues = cells.map(cell => {\n    if (cell.startsWith('n') && cell.endsWith('N')) {\n      // it's note\n      const notes = cell\n        .slice(1, -1)\n        .split('')\n        .map(s => parseInt(s));\n      return { value: new Set(notes) };\n    } else if (cell.startsWith('p')) {\n      // it's placed value\n      return { value: parseInt(cell[1]) };\n    } else if (valuePattern.test(cell)) {\n      // it's value\n      return {\n        value: parseInt(cell),\n        // puzzle origin value\n        origin: true,\n      };\n    } else if (cell === '0') {\n      // it's empty\n      return { value: new Set() };\n    }\n    throw new Error('impossible');\n  });\n\n  // organize the values\n  const values = Array.from(new Array(9)).map(() => new Array(9));\n  for (let i = 0; i < 9; i++) {\n    for (let j = 0; j < 9; j++) {\n      values[i][j] = cellValues[9 * i + j];\n    }\n  }\n  // TODO: check board integrity\n  return values;\n};\n\nexport const stringify = values => {\n  const res = [];\n  for (let r = 0; r < 9; r++) {\n    for (let c = 0; c < 9; c++) {\n      const cell = values[r][c];\n      if (cell.origin) {\n        // origin\n        res.push(cell.value);\n      } else if (typeof cell.value === 'number') {\n        // placed\n        res.push('p', cell.value);\n      } else {\n        // notes\n        if (cell.value.size > 0) {\n          res.push('n', ...cell.value, 'N');\n        } else {\n          res.push('0');\n        }\n      }\n    }\n  }\n  return res.join('');\n};\n\nexport const setValues = (curValues, row, col, value) => {\n  let values = [...curValues];\n  values[row] = [...curValues[row]];\n  values[row][col] = {\n    ...curValues[row][col],\n    value,\n  };\n  if (typeof value === 'number') {\n    values = copyValues(values);\n    updateRelatedNotes(values, row, col);\n  }\n  return values;\n};\n\nexport const updateValues = (isNoting, row, col, value) => {\n  return curValues => {\n    // TODO: add basic row, col, block check\n    if (!isNoting) {\n      // place\n      const oldValue = curValues[row][col];\n      if (oldValue.origin) {\n        // can't place origin value\n        return curValues;\n      }\n\n      if (oldValue.value === value) {\n        // cancel current value\n        value = new Set();\n      }\n\n      return setValues(curValues, row, col, value);\n    } else {\n      // note\n      const oldValue = curValues[row][col];\n      if (oldValue.origin) {\n        // can't note origin value\n        return curValues;\n      }\n\n      if (typeof oldValue.value === 'number') {\n        // can't note cell with value.\n        return curValues;\n      }\n\n      // note\n      const notes = new Set(oldValue.value);\n      if (notes.has(value)) {\n        notes.delete(value);\n      } else {\n        notes.add(value);\n      }\n\n      return setValues(curValues, row, col, notes);\n    }\n  };\n};\n\nconst copyValues = curValues => {\n  const values = [...curValues];\n  for (let i = 0; i < 9; i++) {\n    values[i] = [...values[i]];\n  }\n  return values;\n};\n\n// auto note based on related cells\nexport const autoNote = curValues => {\n  const values = copyValues(curValues);\n\n  for (let r = 0; r < 9; r++) {\n    for (let c = 0; c < 9; c++) {\n      const cell = values[r][c];\n      if (typeof cell.value === 'number') {\n        continue;\n      }\n      values[r][c] = { ...cell, value: calcAvailableDigits(values, [r, c]) };\n    }\n  }\n  return values;\n};\n\n// find unique note of notes to cells.\nconst checkUniqueValue = (values, notes, cells) => {\n  let remNotes = new Set(notes);\n  for (const [r, c] of cells) {\n    const cell = values[r][c];\n    if (typeof cell.value === 'number') {\n      continue;\n    }\n    const otherNotes = cell.value;\n    otherNotes.forEach(v => {\n      remNotes.delete(v);\n    });\n  }\n  if (remNotes.size === 1) {\n    return [...remNotes][0];\n  }\n};\n\nconst updateRelatedNotes = (values, row, col) => {\n  const { value } = values[row][col];\n  for (const [r, c] of getRelatedCells(row, col)) {\n    const cell = values[r][c];\n    if (typeof cell.value === 'number') {\n      continue;\n    }\n    values[r][c] = {\n      ...cell,\n      value: new Set([...cell.value].filter(n => n !== value)),\n    };\n  }\n};\n\n// auto place last value of cell and unique value of row, col or block.\n// based on naked/hidden single\nexport const autoPlace = curValues => {\n  let copied = false;\n  let placed = true;\n  let values = curValues;\n\n  const tryCopyValues = () => {\n    if (!copied) {\n      values = copyValues(values);\n      copied = true;\n    }\n  };\n\n  console.group('[place]');\n  while (placed) {\n    placed = false;\n    for (let r = 0; r < 9; r++) {\n      for (let c = 0; c < 9; c++) {\n        const cell = values[r][c];\n        if (typeof cell.value === 'number') {\n          continue;\n        }\n        // note cell\n        const notes = cell.value;\n        if (notes.size === 1) {\n          placed = true;\n          // 1. naked single\n          tryCopyValues();\n          const value = [...notes][0];\n          values[r][c] = { ...cell, value };\n          updateRelatedNotes(values, r, c);\n          console.log(`naked single: ${value}@${r}${c}`);\n        } else {\n          let uv;\n          // 1. hidden single/unique value of row, col or block;\n          uv =\n            checkUniqueValue(values, notes, getRelatedRowCells(r, c)) ||\n            checkUniqueValue(values, notes, getRelatedColCells(r, c)) ||\n            checkUniqueValue(values, notes, getRelatedBlockCells(r, c));\n          if (uv) {\n            placed = true;\n            tryCopyValues();\n            values[r][c] = { ...cell, value: uv };\n            updateRelatedNotes(values, r, c);\n            console.log(`hidden single: ${uv}@${r}${c}`);\n          }\n        }\n      }\n    }\n  }\n\n  console.groupEnd();\n  return values;\n};\n\n// block eliminate row/col\nexport const pointing = curValues => {\n  let copied = false;\n  let values = curValues;\n\n  const tryCopyValues = () => {\n    if (!copied) {\n      values = copyValues(values);\n      copied = true;\n    }\n  };\n\n  console.group('[pointing]');\n  for (let b = 0; b < 9; b++) {\n    // {pos:[row, col], to:null} / {to:[row|col],row|col,n} / false\n    const results = {};\n    for (const [r, c] of getBlockCells(b)) {\n      const { value } = values[r][c];\n      if (typeof value === 'number') {\n        continue;\n      }\n      for (const n of value) {\n        if (!results.hasOwnProperty(n)) {\n          results[n] = { pos: [r, c], to: null };\n          continue;\n        }\n        if (results[n] === false) {\n          continue;\n        }\n        switch (results[n].to) {\n          case 'row':\n            if (results[n].row !== r) {\n              results[n] = false;\n            }\n            break;\n          case 'col':\n            if (results[n].col !== c) {\n              results[n] = false;\n            }\n            break;\n          default:\n            if (results[n].pos[0] === r) {\n              results[n] = { to: 'row', row: r, n };\n            } else if (results[n].pos[1] === c) {\n              results[n] = { to: 'col', col: c, n };\n            } else {\n              results[n] = false;\n            }\n            break;\n        }\n      }\n    }\n    // results\n    for (const res of Object.values(results)) {\n      if (res === false || !res.to) {\n        continue;\n      }\n      if (res.to === 'row') {\n        // clear r.row for r.n\n        for (let c = 0; c < 9; c++) {\n          const curValue = values[res.row][c];\n          if (typeof curValue.value === 'number') {\n            continue;\n          }\n          if (b === getCellBlock(res.row, c)) {\n            continue;\n          }\n\n          if (!curValue.value.has(res.n)) {\n            continue;\n          }\n\n          console.log(`block:${b + 1}=>row:${res.row + 1}, n:${res.n}, col:${c + 1}`);\n\n          tryCopyValues();\n          values[res.row][c] = {\n            ...curValue,\n            value: new Set([...curValue.value].filter(n => n !== res.n)),\n          };\n        }\n      } else if (res.to === 'col') {\n        // clear r.col for r.n\n        for (let r = 0; r < 9; r++) {\n          const curValue = values[r][res.col];\n          if (typeof curValue.value === 'number') {\n            continue;\n          }\n          if (b === getCellBlock(r, res.col)) {\n            continue;\n          }\n\n          if (!curValue.value.has(res.n)) {\n            continue;\n          }\n\n          console.log(`block:${b + 1}=>col:${res.col + 1}, n:${res.n}, row:${r + 1}`);\n\n          tryCopyValues();\n          values[r][res.col] = {\n            ...curValue,\n            value: new Set([...curValue.value].filter(n => n !== res.n)),\n          };\n        }\n      }\n    }\n  }\n  console.groupEnd();\n  return values;\n};\n\n// row/col eliminate block\nexport const claiming = curValues => {\n  let copied = false;\n  let values = curValues;\n\n  const tryCopyValues = () => {\n    if (!copied) {\n      values = copyValues(values);\n      copied = true;\n    }\n  };\n\n  console.group('[claiming]');\n  // rows\n  for (let r = 0; r < 9; r++) {\n    // {block, n} / false\n    const results = {};\n    for (let c = 0; c < 9; c++) {\n      const { value } = values[r][c];\n      if (typeof value === 'number') {\n        continue;\n      }\n      for (const n of value) {\n        if (!results.hasOwnProperty(n)) {\n          results[n] = { block: getCellBlock(r, c), n };\n          continue;\n        }\n        if (results[n] === false) {\n          continue;\n        }\n        if (results[n].block !== getCellBlock(r, c)) {\n          results[n] = false;\n        }\n      }\n    }\n    // results\n    for (const res of Object.values(results)) {\n      if (res === false) {\n        continue;\n      }\n\n      for (const [row, col] of getBlockCells(res.block)) {\n        const curValue = values[row][col];\n        if (typeof curValue.value === 'number') {\n          continue;\n        }\n\n        if (r === row) {\n          continue;\n        }\n\n        if (!curValue.value.has(res.n)) {\n          continue;\n        }\n        console.log(`row:${r + 1}=>block:${res.block + 1}, n:${res.n}, row:${row + 1}, col:${col + 1}`);\n\n        tryCopyValues();\n        values[row][col] = {\n          ...curValue,\n          value: new Set([...curValue.value].filter(n => n !== res.n)),\n        };\n      }\n    }\n  }\n  // cols\n  for (let c = 0; c < 9; c++) {\n    // {block, n} / false\n    const results = {};\n    for (let r = 0; r < 9; r++) {\n      const { value } = values[r][c];\n      if (typeof value === 'number') {\n        continue;\n      }\n      for (const n of value) {\n        if (!results.hasOwnProperty(n)) {\n          results[n] = { block: getCellBlock(r, c), n };\n          continue;\n        }\n        if (results[n] === false) {\n          continue;\n        }\n        if (results[n].block !== getCellBlock(r, c)) {\n          results[n] = false;\n        }\n      }\n    }\n    // results\n    for (const res of Object.values(results)) {\n      if (res === false) {\n        continue;\n      }\n\n      for (const [row, col] of getBlockCells(res.block)) {\n        const curValue = values[row][col];\n        if (typeof curValue.value === 'number') {\n          continue;\n        }\n\n        if (c === col) {\n          continue;\n        }\n\n        if (!curValue.value.has(res.n)) {\n          continue;\n        }\n\n        console.log(`col:${c + 1}=>block:${res.block + 1}, n:${res.n}, row:${row + 1}, col:${col + 1}`);\n\n        tryCopyValues();\n        values[row][col] = {\n          ...curValue,\n          value: new Set([...curValue.value].filter(n => n !== res.n)),\n        };\n      }\n    }\n  }\n  console.groupEnd();\n  return values;\n};\n\nexport const encodePos = pos => `${pos[0]}${pos[1]}`;\nexport const decodePos = pos => [parseInt(pos[0]), parseInt(pos[1])];\n\nconst getCellsLinks = (values, cells) => {\n  const links = [];\n  for (const [r, c] of cells) {\n    const value = values[r][c];\n    if (typeof value.value === 'number') {\n      continue;\n    }\n    const pos = encodePos([r, c]);\n    for (const note of value.value) {\n      links.push([pos, note]);\n    }\n  }\n  return links;\n};\n\nfunction* findNGroup(values, n, cls) {\n  // rows\n  for (let r = 0; r < 9; r++) {\n    const links = getCellsLinks(values, getRowCells(r));\n    for (const group of findNGroupFromLinks(links, n, cls)) {\n      const poses = group[cls];\n      const notes = group[(cls + 1) % 2];\n      yield { cls, n, domain: 'row', row: r, poses, notes };\n    }\n  }\n  // cols\n  for (let c = 0; c < 9; c++) {\n    const links = getCellsLinks(values, getColCells(c));\n    for (const group of findNGroupFromLinks(links, n, cls)) {\n      const poses = group[cls];\n      const notes = group[(cls + 1) % 2];\n      yield { cls, n, domain: 'col', col: c, poses, notes };\n    }\n  }\n  // blocks\n  for (let b = 0; b < 9; b++) {\n    const links = getCellsLinks(values, getBlockCells(b));\n    for (const group of findNGroupFromLinks(links, n, cls)) {\n      const poses = group[cls];\n      const notes = group[(cls + 1) % 2];\n      yield { cls, n, domain: 'block', block: b, poses, notes };\n    }\n  }\n}\n\nexport const findGroup = values => {\n  for (let n = 1; n <= 8; n++) {\n    // 0:naked group, 1: hidden group\n    for (const cls of [0, 1]) {\n      for (const group of findNGroup(values, n, cls)) {\n        // only return the first group\n        group.type = 'group';\n        group.name = ['naked', 'hidden'][cls] + `-${n}-group`;\n        return group;\n      }\n    }\n  }\n};\n\nexport const eliminateGroup = group => curValues => {\n  const values = copyValues(curValues);\n  if (group.n === 1) {\n    // place value\n    const [row, col] = [...group.poses][0];\n    const value = values[row][col];\n    const d = [...group.notes][0];\n    values[row][col] = { ...value, value: d };\n    updateRelatedNotes(values, row, col);\n  } else if (group.cls === 0) {\n    // naked\n    // to eliminate other cells\n    let otherCells = [];\n    if (group.domain === 'row') {\n      otherCells = getRowCells(group.row);\n    } else if (group.domain === 'col') {\n      otherCells = getColCells(group.col);\n    } else if (group.domain === 'block') {\n      otherCells = getBlockCells(group.block);\n    }\n    otherCells = otherCells.filter(([row, col]) => {\n      const value = values[row][col];\n      return !(typeof value.value === 'number' || group.poses.has(encodePos([row, col])));\n    });\n    otherCells.forEach(([row, col]) => {\n      const value = values[row][col];\n      values[row][col] = {\n        ...value,\n        value: new Set([...value.value].filter(n => !group.notes.has(n))),\n      };\n    });\n  } else if (group.cls === 1) {\n    // hidden\n    // to eliminate other notes\n    const cells = [...group.poses].map(pos => decodePos(pos));\n    cells.forEach(([row, col]) => {\n      const value = values[row][col];\n      values[row][col] = {\n        ...value,\n        value: new Set([...value.value].filter(n => group.notes.has(n))),\n      };\n    });\n  }\n\n  return values;\n};\n\nfunction* scanNXwing(values, d, getCells, getOtherCells, yi) {\n  const dist = {};\n  for (let x = 0; x < 9; x++) {\n    const ys = [];\n    getCells(x).forEach(pos => {\n      const y = pos[yi];\n      const { value } = values[pos[0]][pos[1]];\n      if (typeof value === 'number') {\n        return;\n      }\n      if (value.has(d)) {\n        ys.push(y);\n      }\n    });\n    if (ys.length > 1) {\n      const key = ys.join('');\n      const res = dist[key] || { xs: [], ys };\n      dist[key] = res;\n      res.xs.push(x);\n    }\n  }\n  // handle dist\n  for (const res of Object.values(dist)) {\n    if (res.xs.length !== res.ys.length) {\n      continue;\n    }\n\n    const s = res.xs.length;\n    const poses = new Set();\n    for (const x of res.xs) {\n      for (const y of res.ys) {\n        if (yi === 1) {\n          poses.add(encodePos([x, y]));\n        } else {\n          poses.add(encodePos([y, x]));\n        }\n      }\n    }\n\n    let cleared = true;\n    // check if x-wing is cleared\n    const otherCells = [];\n    for (const y of res.ys) {\n      otherCells.push(...getOtherCells(y));\n    }\n    for (const [x, y] of otherCells.filter(([x, y]) => {\n      const { value } = values[x][y];\n      return !(typeof value === 'number' || poses.has(encodePos([x, y])));\n    })) {\n      const { value } = values[x][y];\n      if (value.has(d)) {\n        // need clear\n        cleared = false;\n        break;\n      }\n    }\n\n    if (!cleared) {\n      yield {\n        name: `${s}-X-Wing`,\n        domain: ['col', 'row'][yi],\n        [['cols', 'rows'][yi]]: new Set(res.xs),\n        [['rows', 'cols'][yi]]: new Set(res.ys),\n        poses,\n        d,\n      };\n    }\n  }\n}\n\nfunction* searchNXWing(values, d) {\n  // rows\n  yield* scanNXwing(values, d, getRowCells, getColCells, 1);\n\n  // cols\n  yield* scanNXwing(values, d, getColCells, getRowCells, 0);\n}\n\nfunction* searchXWing(values) {\n  for (let d = 1; d <= 9; d++) {\n    yield* searchNXWing(values, d);\n  }\n}\n\nexport const findXWing = values => {\n  for (const res of searchXWing(values)) {\n    res.type = 'X-Wing';\n    return res;\n  }\n};\n\nexport const eliminateXWing = tip => curValues => {\n  const values = copyValues(curValues);\n  const otherCells = [];\n  if (tip.domain === 'row') {\n    for (const col of tip.cols) {\n      otherCells.push(...getColCells(col));\n    }\n  } else if (tip.domain === 'col') {\n    for (const row of tip.rows) {\n      otherCells.push(...getRowCells(row));\n    }\n  }\n  otherCells\n    .filter(([row, col]) => {\n      const value = values[row][col];\n      return !(typeof value.value === 'number' || tip.poses.has(encodePos([row, col])));\n    })\n    .forEach(([row, col]) => {\n      const value = values[row][col];\n      values[row][col] = {\n        ...value,\n        value: new Set([...value.value].filter(n => n !== tip.d)),\n      };\n    });\n\n  return values;\n};\n\nconst getAToBLinks = (getCells, getEnd) => (values, d) => {\n  const links = [];\n  for (let a = 0; a < 9; a++) {\n    for (const [r, c] of getCells(a)) {\n      const { value } = values[r][c];\n      if (typeof value === 'number') {\n        continue;\n      }\n      if (value.has(d)) {\n        links.push([a, getEnd(r, c)]);\n      }\n    }\n  }\n  return links;\n};\n\nconst getRowToColLinks = getAToBLinks(getRowCells, (r, c) => c);\nconst getRowToBlockLinks = getAToBLinks(getRowCells, (r, c) => getCellBlock(r, c));\nconst getColToBlockLinks = getAToBLinks(getColCells, (r, c) => getCellBlock(r, c));\n\nconst getEncodedPosesForDigit = (values, d, cells) => {\n  const poses = [];\n  for (const [r, c] of cells) {\n    const { value } = values[r][c];\n    if (typeof value !== 'number' && value.has(d)) {\n      poses.push(encodePos([r, c]));\n    }\n  }\n  return poses;\n};\n\nfunction* findNXGroup(values, n) {\n  for (let d = 1; d <= 9; d++) {\n    // row->col\n    const rcLinks = getRowToColLinks(values, d);\n    for (const group of findNGroupFromLinks(rcLinks, n, 0)) {\n      const [rows, cols] = group;\n      const poses = [];\n      rows.forEach(r => poses.push(...getEncodedPosesForDigit(values, d, getRowCells(r))));\n      yield { name: `${n}-XRC-Group`, domain: 'row', effect: 'col', rows, cols, poses: new Set(poses), d };\n    }\n    // col->row\n    for (const group of findNGroupFromLinks(rcLinks, n, 1)) {\n      const [cols, rows] = group;\n      const poses = [];\n      cols.forEach(c => poses.push(...getEncodedPosesForDigit(values, d, getColCells(c))));\n      yield { name: `${n}-XCR-Group`, domain: 'col', effect: 'row', rows, cols, poses: new Set(poses), d };\n    }\n    // row->block, 1-xrb-group is claiming\n    const rbLinks = getRowToBlockLinks(values, d);\n    for (const group of findNGroupFromLinks(rbLinks, n, 0)) {\n      const [rows, blocks] = group;\n      const poses = [];\n      rows.forEach(c => poses.push(...getEncodedPosesForDigit(values, d, getRowCells(c))));\n      const name = n === 1 ? 'claiming' : `${n}-XRB-Group`;\n      yield { name, domain: 'row', effect: 'block', rows, blocks, poses: new Set(poses), d };\n    }\n    // block-row, 1-xbr-group is pointing\n    for (const group of findNGroupFromLinks(rbLinks, n, 1)) {\n      const [blocks, rows] = group;\n      const poses = [];\n      blocks.forEach(b => poses.push(...getEncodedPosesForDigit(values, d, getBlockCells(b))));\n      const name = n === 1 ? 'pointing' : `${n}-XBR-Group`;\n      yield { name, domain: 'block', effect: 'row', rows, blocks, poses: new Set(poses), d };\n    }\n\n    // col->block, 1-xcb-group is claiming\n    const cbLinks = getColToBlockLinks(values, d);\n    for (const group of findNGroupFromLinks(cbLinks, n, 0)) {\n      const [cols, blocks] = group;\n      const poses = [];\n      cols.forEach(c => poses.push(...getEncodedPosesForDigit(values, d, getColCells(c))));\n      const name = n === 1 ? 'claiming' : `${n}-XCB-Group`;\n      yield { name, domain: 'col', effect: 'block', cols, blocks, poses: new Set(poses), d };\n    }\n\n    console.log(cbLinks);\n    // block-col, 1-xbc-group is pointing\n    for (const group of findNGroupFromLinks(cbLinks, n, 1)) {\n      const [blocks, cols] = group;\n      const poses = [];\n      blocks.forEach(b => poses.push(...getEncodedPosesForDigit(values, d, getBlockCells(b))));\n      const name = n === 1 ? 'pointing' : `${n}-XBC-Group`;\n      yield { name, domain: 'block', effect: 'row', cols, blocks, poses: new Set(poses), d };\n    }\n  }\n}\n\nexport const findXGroup = values => {\n  for (let n = 1; n <= 8; n++) {\n    for (const group of findNXGroup(values, n)) {\n      group.type = 'X-Group';\n      return group;\n    }\n  }\n};\n\nconst eliminateXGroup = tip => curValues => {\n  const values = copyValues(curValues);\n  const otherCells = [];\n  if (tip.effect === 'row') {\n    for (const row of tip.rows) {\n      otherCells.push(...getRowCells(row));\n    }\n  } else if (tip.effect === 'col') {\n    for (const col of tip.cols) {\n      otherCells.push(...getColCells(col));\n    }\n  } else if (tip.effect === 'block') {\n    for (const block of tip.blocks) {\n      otherCells.push(...getBlockCells(block));\n    }\n  }\n\n  otherCells\n    .filter(([row, col]) => {\n      const value = values[row][col];\n      return !(typeof value.value === 'number' || tip.poses.has(encodePos([row, col])));\n    })\n    .forEach(([row, col]) => {\n      const value = values[row][col];\n      values[row][col] = {\n        ...value,\n        value: new Set([...value.value].filter(n => n !== tip.d)),\n      };\n    });\n\n  return values;\n};\n\nexport const findTip = values => {\n  // return findGroup(values) || findXWing(values) || findXGroup(values);\n  return findGroup(values) || findXGroup(values);\n};\n\nexport const handleTip = tip => curValues => {\n  if (tip.type === 'group') {\n    return eliminateGroup(tip)(curValues);\n  } else if (tip.type === 'X-Wing') {\n    return eliminateXWing(tip)(curValues);\n  } else if (tip.type === 'X-Group') {\n    return eliminateXGroup(tip)(curValues);\n  }\n};\n","import React from 'react';\nimport styles from './Cell.module.scss';\nimport digits from '../../../../UI/Digits/Digits';\nimport * as sudoku from '../../../../../libs/sudoku';\n\nconst noteClassName = (n, activeVal, notes) => {\n  const classes = [styles.Note];\n  if (n === activeVal) {\n    classes.push(styles.ActiveValue);\n  }\n  if (notes && notes.has(n)) {\n    classes.push(styles.MarkedValue);\n  }\n  return classes.join(' ');\n};\n\nconst Cell = React.memo(\n  ({ value, origin, row, col, activePos, activeVal, available, showAvail, isNoting, onClick, marks }) => {\n    const block = sudoku.getCellBlock(row, col);\n    const classes = [];\n    let content = null;\n    let isSelected = false;\n\n    if (activePos) {\n      const [activeRow, activeCol] = activePos;\n      const activeBlock = sudoku.getCellBlock(activeRow, activeCol);\n      if (row === activeRow && col === activeCol) {\n        // active\n        isSelected = true;\n        classes.push(styles.Selected);\n      } else if (row === activeRow || col === activeCol || block === activeBlock) {\n        // related area\n        classes.push(styles.Related);\n      }\n    }\n\n    let clickable = available;\n    if (available) {\n      classes.push(styles.Available);\n      if (showAvail) {\n        // show background\n        classes.push(isNoting ? styles.Note : styles.Place);\n      }\n    } else if (available === null) {\n      // deselected\n      classes.push(styles.Available);\n      clickable = true;\n    } else if (!isNoting && !origin && value === activeVal) {\n      // place mode, placed value === activeVal\n      classes.push(styles.Available);\n      clickable = true;\n    }\n\n    // marks\n    let highlighted = false;\n    let domainMarked = false;\n    let effectMarked = false;\n    if (marks) {\n      const { domain, effect, highlights } = marks;\n      if (domain) {\n        const { rows, cols, blocks } = domain;\n        if (rows && rows.has(row)) {\n          domainMarked = true;\n        }\n        if (cols && cols.has(col)) {\n          domainMarked = true;\n        }\n        if (blocks && blocks.has(block)) {\n          domainMarked = true;\n        }\n      }\n      if (effect) {\n        const { rows, cols, blocks } = effect;\n        if (rows && rows.has(row)) {\n          effectMarked = true;\n        }\n        if (cols && cols.has(col)) {\n          effectMarked = true;\n        }\n        if (blocks && blocks.has(block)) {\n          effectMarked = true;\n        }\n      }\n      if (highlights && highlights.poses.has(sudoku.encodePos([row, col]))) {\n        highlighted = true;\n      }\n    }\n    if (highlighted) {\n      classes.push(styles.MarkedHighlight);\n    } else if (domainMarked) {\n      classes.push(styles.MarkedDomain);\n    } else if (effectMarked) {\n      classes.push(styles.MarkedEffect);\n    }\n\n    const valueMarked = highlighted || effectMarked;\n\n    if (typeof value === 'number') {\n      classes.push(styles.Value);\n      // it's placed value\n      !origin && classes.push(styles.Placed);\n      // it's active value\n      if (value === activeVal && !isSelected) {\n        classes.push(styles.ActiveValue);\n      }\n      // it's marked value\n      if (valueMarked && marks.highlights.values && marks.highlights.values.has(value)) {\n        classes.push(styles.MarkedValue);\n      }\n\n      content = digits[value];\n    } else {\n      classes.push(styles.Notes);\n      // Set: [1-9]\n      const notes = value;\n      if (notes.size > 0) {\n        content = (\n          <>\n            <div className={styles.RowNotes}>\n              <div className={noteClassName(1, activeVal, valueMarked && marks.highlights.notes)}>\n                {notes.has(1) ? digits[1] : null}\n              </div>\n              <div className={noteClassName(2, activeVal, valueMarked && marks.highlights.notes)}>\n                {notes.has(2) ? digits[2] : null}\n              </div>\n              <div className={noteClassName(3, activeVal, valueMarked && marks.highlights.notes)}>\n                {notes.has(3) ? digits[3] : null}\n              </div>\n            </div>\n            <div className={styles.RowNotes}>\n              <div className={noteClassName(4, activeVal, valueMarked && marks.highlights.notes)}>\n                {notes.has(4) ? digits[4] : null}\n              </div>\n              <div className={noteClassName(5, activeVal, valueMarked && marks.highlights.notes)}>\n                {notes.has(5) ? digits[5] : null}\n              </div>\n              <div className={noteClassName(6, activeVal, valueMarked && marks.highlights.notes)}>\n                {notes.has(6) ? digits[6] : null}\n              </div>\n            </div>\n            <div className={styles.RowNotes}>\n              <div className={noteClassName(7, activeVal, valueMarked && marks.highlights.notes)}>\n                {notes.has(7) ? digits[7] : null}\n              </div>\n              <div className={noteClassName(8, activeVal, valueMarked && marks.highlights.notes)}>\n                {notes.has(8) ? digits[8] : null}\n              </div>\n              <div className={noteClassName(9, activeVal, valueMarked && marks.highlights.notes)}>\n                {notes.has(9) ? digits[9] : null}\n              </div>\n            </div>\n          </>\n        );\n      }\n    }\n    return (\n      <div className={classes.join(' ')} onClick={clickable ? () => onClick(row, col) : undefined}>\n        {content}\n      </div>\n    );\n  }\n);\n\nexport default Cell;\n","import React from 'react';\nimport Cell from './Cell/Cell';\nimport styles from './Block.module.scss';\n\nconst Block = ({\n  rowStart,\n  colStart,\n  activePos,\n  activeVal,\n  values,\n  availableCells,\n  cellClickedHandler,\n  showAvail,\n  isNoting,\n  marks,\n}) => {\n  const isOdd = (rowStart + colStart) % 2 === 1;\n  return (\n    <div className={`${styles.Block} ${isOdd ? styles.Odd : ''}`}>\n      <div className={styles.Row}>\n        <Cell\n          {...values[rowStart][colStart]}\n          row={rowStart}\n          col={colStart}\n          activePos={activePos}\n          activeVal={activeVal}\n          available={availableCells && availableCells[rowStart][colStart]}\n          onClick={cellClickedHandler}\n          showAvail={showAvail}\n          isNoting={isNoting}\n          marks={marks}\n        />\n        <Cell\n          {...values[rowStart][colStart + 1]}\n          row={rowStart}\n          col={colStart + 1}\n          activePos={activePos}\n          activeVal={activeVal}\n          available={availableCells && availableCells[rowStart][colStart + 1]}\n          onClick={cellClickedHandler}\n          showAvail={showAvail}\n          isNoting={isNoting}\n          marks={marks}\n        />\n        <Cell\n          {...values[rowStart][colStart + 2]}\n          row={rowStart}\n          col={colStart + 2}\n          activePos={activePos}\n          activeVal={activeVal}\n          available={availableCells && availableCells[rowStart][colStart + 2]}\n          onClick={cellClickedHandler}\n          showAvail={showAvail}\n          isNoting={isNoting}\n          marks={marks}\n        />\n      </div>\n      <div className={styles.Row}>\n        <Cell\n          {...values[rowStart + 1][colStart]}\n          row={rowStart + 1}\n          col={colStart}\n          activePos={activePos}\n          activeVal={activeVal}\n          available={availableCells && availableCells[rowStart + 1][colStart]}\n          onClick={cellClickedHandler}\n          showAvail={showAvail}\n          isNoting={isNoting}\n          marks={marks}\n        />\n        <Cell\n          {...values[rowStart + 1][colStart + 1]}\n          row={rowStart + 1}\n          col={colStart + 1}\n          activePos={activePos}\n          activeVal={activeVal}\n          available={\n            availableCells && availableCells[rowStart + 1][colStart + 1]\n          }\n          onClick={cellClickedHandler}\n          showAvail={showAvail}\n          isNoting={isNoting}\n          marks={marks}\n        />\n        <Cell\n          {...values[rowStart + 1][colStart + 2]}\n          row={rowStart + 1}\n          col={colStart + 2}\n          activePos={activePos}\n          activeVal={activeVal}\n          available={\n            availableCells && availableCells[rowStart + 1][colStart + 2]\n          }\n          onClick={cellClickedHandler}\n          showAvail={showAvail}\n          isNoting={isNoting}\n          marks={marks}\n        />\n      </div>\n      <div className={styles.Row}>\n        <Cell\n          {...values[rowStart + 2][colStart]}\n          row={rowStart + 2}\n          col={colStart}\n          activePos={activePos}\n          activeVal={activeVal}\n          available={availableCells && availableCells[rowStart + 2][colStart]}\n          onClick={cellClickedHandler}\n          showAvail={showAvail}\n          isNoting={isNoting}\n          marks={marks}\n        />\n        <Cell\n          {...values[rowStart + 2][colStart + 1]}\n          row={rowStart + 2}\n          col={colStart + 1}\n          activePos={activePos}\n          activeVal={activeVal}\n          available={\n            availableCells && availableCells[rowStart + 2][colStart + 1]\n          }\n          onClick={cellClickedHandler}\n          showAvail={showAvail}\n          isNoting={isNoting}\n          marks={marks}\n        />\n        <Cell\n          {...values[rowStart + 2][colStart + 2]}\n          row={rowStart + 2}\n          col={colStart + 2}\n          activePos={activePos}\n          activeVal={activeVal}\n          available={\n            availableCells && availableCells[rowStart + 2][colStart + 2]\n          }\n          onClick={cellClickedHandler}\n          showAvail={showAvail}\n          isNoting={isNoting}\n          marks={marks}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Block;\n","import React from 'react';\nimport styled from 'styled-components';\n\n/*\n  make sure the width is the same with a parent's,\n  because padding refer to parent's width.\n*/\nconst Box = styled.div`\n  width: ${({ width }) => (width !== undefined ? width : 'auto')};\n  height: 0;\n  padding-top: ${({ ratio }) => 100 / ratio}%;\n  position: relative;\n`;\n\nconst Content = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  ${({ fixed, scroll }) =>\n    fixed\n      ? `\n    height: 100%;\n    overflow: ${scroll ? `scroll` : 'hidden'};\n  `\n      : `\n  min-height: 100%;\n  `}\n`;\n\nexport default ({ ratio = 1.0, fixed = true, scroll = false, children }) => {\n  return (\n    <Box ratio={ratio}>\n      <Content fixed={fixed} scroll={scroll}>\n        {children}\n      </Content>\n    </Box>\n  );\n};\n","import React, { useMemo } from 'react';\nimport Block from './Block/Block';\nimport AspectRatioBox from '../../UI/AspectRatio/AspectRatioBox';\nimport styles from './Board.module.scss';\nimport * as sudoku from '../../../libs/sudoku';\n\nconst Board = ({\n  values,\n  activeVal,\n  activePos,\n  cellClickedHandler,\n  showAvail,\n  isNoting,\n  marks,\n}) => {\n  // calculated states\n  const availableCells = useMemo(\n    () => sudoku.calcAvailableCells(values, activeVal),\n    [activeVal, values]\n  );\n\n  // active value\n  if (activePos) {\n    // no active value, then selected value is active value for board\n    const [row, col] = activePos;\n    activeVal = values[row][col].value;\n  }\n\n  return (\n    <AspectRatioBox ratio={1.0}>\n      <div className={styles.SudokuBoard}>\n        <div className={styles.Row}>\n          <Block\n            rowStart={0}\n            colStart={0}\n            activePos={activePos}\n            activeVal={activeVal}\n            values={values}\n            availableCells={availableCells}\n            cellClickedHandler={cellClickedHandler}\n            showAvail={showAvail}\n            isNoting={isNoting}\n            marks={marks}\n          />\n          <Block\n            rowStart={0}\n            colStart={3}\n            activePos={activePos}\n            activeVal={activeVal}\n            values={values}\n            availableCells={availableCells}\n            cellClickedHandler={cellClickedHandler}\n            showAvail={showAvail}\n            isNoting={isNoting}\n            marks={marks}\n          />\n          <Block\n            rowStart={0}\n            colStart={6}\n            activePos={activePos}\n            activeVal={activeVal}\n            values={values}\n            availableCells={availableCells}\n            cellClickedHandler={cellClickedHandler}\n            showAvail={showAvail}\n            isNoting={isNoting}\n            marks={marks}\n          />\n        </div>\n        <div className={styles.Row}>\n          <Block\n            rowStart={3}\n            colStart={0}\n            activePos={activePos}\n            activeVal={activeVal}\n            values={values}\n            availableCells={availableCells}\n            cellClickedHandler={cellClickedHandler}\n            showAvail={showAvail}\n            isNoting={isNoting}\n            marks={marks}\n          />\n          <Block\n            rowStart={3}\n            colStart={3}\n            activePos={activePos}\n            activeVal={activeVal}\n            values={values}\n            availableCells={availableCells}\n            cellClickedHandler={cellClickedHandler}\n            showAvail={showAvail}\n            isNoting={isNoting}\n            marks={marks}\n          />\n          <Block\n            rowStart={3}\n            colStart={6}\n            activePos={activePos}\n            activeVal={activeVal}\n            values={values}\n            availableCells={availableCells}\n            cellClickedHandler={cellClickedHandler}\n            showAvail={showAvail}\n            isNoting={isNoting}\n            marks={marks}\n          />\n        </div>\n        <div className={styles.Row}>\n          <Block\n            rowStart={6}\n            colStart={0}\n            activePos={activePos}\n            activeVal={activeVal}\n            values={values}\n            availableCells={availableCells}\n            cellClickedHandler={cellClickedHandler}\n            showAvail={showAvail}\n            isNoting={isNoting}\n            marks={marks}\n          />\n          <Block\n            rowStart={6}\n            colStart={3}\n            activePos={activePos}\n            activeVal={activeVal}\n            values={values}\n            availableCells={availableCells}\n            cellClickedHandler={cellClickedHandler}\n            showAvail={showAvail}\n            isNoting={isNoting}\n            marks={marks}\n          />\n          <Block\n            rowStart={6}\n            colStart={6}\n            activePos={activePos}\n            activeVal={activeVal}\n            values={values}\n            availableCells={availableCells}\n            cellClickedHandler={cellClickedHandler}\n            showAvail={showAvail}\n            isNoting={isNoting}\n            marks={marks}\n          />\n        </div>\n      </div>\n    </AspectRatioBox>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  &::before {\n    content: '';\n    width: 1px;\n    margin-left: -1px;\n    float: left;\n    height: 0;\n    padding-top: ${({ ratio }) => 100 / ratio}%;\n  }\n  &::after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n`;\n\nexport default ({ ratio = 1.0, children, ...props }) => {\n  return (\n    <Wrapper ratio={ratio} {...props}>\n      {children}\n    </Wrapper>\n  );\n};\n","import React, { useCallback } from 'react';\nimport AspectRatioWrapper from '../../../UI/AspectRatio/AspectRatioWrapper';\nimport digits from '../../../UI/Digits/Digits';\nimport styles from './Digits.module.scss';\n\nconst Digits = React.memo(\n  ({\n    isNoting,\n    activeVal,\n    availableDigits,\n    remainingDigits,\n    digitClickedHandler,\n  }) => {\n    const genClassName = useCallback(\n      d => {\n        const classes = [styles.Digit];\n        if (d === activeVal) {\n          classes.push(styles.active);\n        }\n        if (!availableDigits.has(d)) {\n          classes.push(styles.Disabled);\n        }\n        return classes.join(' ');\n      },\n      [activeVal, availableDigits]\n    );\n\n    return (\n      <div className={`${styles.Digits} ${isNoting ? styles.isNoting : ''}`}>\n        <AspectRatioWrapper\n          className={genClassName(1)}\n          onClick={\n            availableDigits.has(1) ? () => digitClickedHandler(1) : undefined\n          }\n        >\n          {digits[1]}\n          <div className={styles.Count}>{digits[remainingDigits[1]]}</div>\n        </AspectRatioWrapper>\n        {[2, 3, 4, 5, 6, 7, 8, 9].map(d => (\n          <div\n            key={d}\n            className={genClassName(d)}\n            onClick={\n              availableDigits.has(d) ? () => digitClickedHandler(d) : undefined\n            }\n          >\n            {digits[d]}\n            <div className={styles.Count}>{digits[remainingDigits[d]]}</div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n);\n\nexport default Digits;\n","import React, { useMemo } from 'react';\nimport Digits from './Digits/Digits';\nimport Button from '../../UI/Button/Button';\nimport styles from './Controls.module.scss';\nimport * as sudoku from '../../../libs/sudoku';\n\nconst Controls = ({\n  values,\n  activeVal,\n  availableDigits,\n  digitClickedHandler,\n  showAvail,\n  isNoting,\n  deselectHandler,\n  toggleShowAvailHandler,\n  toggleIsNotingHandler,\n  resetHandler,\n  eraseValueHandler,\n  autoNoteHandler,\n  autoPlaceHandler,\n  pointingHandler,\n  claimingHandler,\n  tip,\n  tipHandler,\n}) => {\n  // calculated states\n  const remainingDigits = useMemo(() => sudoku.calcRemainingDigits(values), [values]);\n  return (\n    <div className={styles.Controls}>\n      <div className={styles.Panel}>\n        <Button onClick={resetHandler}>Reset</Button>\n        <Button onClick={eraseValueHandler}>Erase</Button>\n        <Button onClick={deselectHandler}>Deselect</Button>\n        <Button type={showAvail ? 'On' : 'Off'} onClick={toggleShowAvailHandler}>\n          Avail\n        </Button>\n        <Button type={isNoting ? 'On' : 'Off'} onClick={toggleIsNotingHandler}>\n          Note\n        </Button>\n      </div>\n      <Digits\n        isNoting={isNoting}\n        activeVal={activeVal}\n        availableDigits={availableDigits}\n        remainingDigits={remainingDigits}\n        digitClickedHandler={digitClickedHandler}\n      />\n      <div className={styles.Tools}>\n        <Button onClick={autoNoteHandler}>note</Button>\n        <Button onClick={pointingHandler}>point</Button>\n        <Button onClick={claimingHandler}>claim</Button>\n        <Button onClick={autoPlaceHandler}>place</Button>\n        <div className={styles.Tip}>\n          <Button type={tip && 'On'} onClick={tipHandler}>\n            {tip ? tip.name : 'tip'}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Controls;\n","import React from 'react';\nimport styles from './Backdrop.module.css';\n\nconst Backdrop = ({ show, onClick }) =>\n  show ? <div className={styles.Backdrop} onClick={onClick} /> : null;\n\nexport default Backdrop;\n","import React from 'react';\nimport Backdrop from '../Backdrop/Backdrop';\nimport styles from './Modal.module.scss';\n\nconst Modal = ({ show = false, close, children }) => {\n  const classes = [styles.Modal];\n  if (show) {\n    classes.push(styles.Show);\n  }\n  return (\n    <>\n      <Backdrop show={show} onClick={close} />\n      <div className={classes.join(' ')}>\n        <div className={styles.Close} onClick={close}>\n          X\n        </div>\n        {children}\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(React.memo(Modal), (prevProps, nextProps) => {\n  return !prevProps.show && !nextProps.show;\n});\n","import React, { useState, useEffect, useCallback } from 'react';\nimport Button from '../../components/UI/Button/Button';\nimport Board from '../../components/Sudoku/Board/Board';\nimport Controls from '../../components/Sudoku/Controls/Controls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport QRCode from 'qrcode.react';\nimport styles from './Main.module.scss';\nimport * as sudoku from '../../libs/sudoku';\nimport { useMemo } from 'react';\n\nconst Sudoku = ({ puzzle, startNewGameHandler, emptyHandler }) => {\n  const [showShare, setShowShare] = useState(false);\n  const [values, setValues] = useState(() => sudoku.parsePuzzle(puzzle));\n  const [initialPuzzle, setInitialPuzzle] = useState(() => sudoku.stringify(values));\n  // {pos:[row, col], val:0}\n  const [activeState, setActiveState] = useState({ pos: null, val: 0 });\n  const { pos: activePos, val: activeVal } = activeState;\n  const [showAvail, setShowAvail] = useState(false);\n  const [isNoting, setIsNoting] = useState(true);\n  const [tip, setTip] = useState(null);\n\n  // calculated states\n  const availableDigits = useMemo(() => sudoku.calcAvailableDigits(values, activePos), [activePos, values]);\n\n  // handlers\n  const cellClickedHandler = useCallback(\n    (row, col) => {\n      if (activeVal !== 0) {\n        // place or note\n        setValues(sudoku.updateValues(isNoting, row, col, activeVal));\n      } else {\n        // select position\n        setActiveState(({ pos: curActivePos }) => {\n          let pos = [row, col];\n          if (curActivePos) {\n            const [curRow, curCol] = curActivePos;\n            if (row === curRow && col === curCol) {\n              // cancel current selected\n              pos = null;\n            }\n          }\n          return { pos, val: 0 };\n        });\n      }\n    },\n    [activeVal, isNoting, setActiveState, setValues]\n  );\n\n  const digitClickedHandler = useCallback(\n    (d, force = false) => {\n      // force active specified digit\n      if (!force) {\n        if (!availableDigits.has(d)) {\n          return;\n        }\n\n        if (activePos) {\n          // place or note\n          const [activeRow, activeCol] = activePos;\n          setValues(sudoku.updateValues(isNoting, activeRow, activeCol, d));\n        } else {\n          // active a value\n          setActiveState(({ val: curActiveVal }) => {\n            let val = d;\n            if (curActiveVal === d) {\n              // cancel active\n              val = 0;\n            }\n            return { pos: null, val };\n          });\n        }\n      } else {\n        // active a value\n        setActiveState({ pos: null, val: d });\n      }\n    },\n    [activePos, availableDigits, isNoting]\n  );\n\n  const deselectHandler = useCallback(() => {\n    setActiveState({ pos: null, val: 0 });\n  }, []);\n\n  const resetHandler = useCallback(() => {\n    if (!window.confirm || window.confirm('Are you sure to reset?')) {\n      setValues(sudoku.parsePuzzle(initialPuzzle));\n      deselectHandler();\n    }\n  }, [deselectHandler, initialPuzzle]);\n\n  const eraseValueHandler = useCallback(() => {\n    if (activePos) {\n      const [activeRow, activeCol] = activePos;\n      setValues(sudoku.updateValues(isNoting, activeRow, activeCol, new Set()));\n    }\n  }, [activePos, isNoting]);\n\n  const toggleShowAvailHandler = useCallback(() => {\n    setShowAvail(showAvail => !showAvail);\n  }, []);\n\n  const toggleIsNotingHandler = useCallback(() => {\n    setIsNoting(isNoting => !isNoting);\n  }, []);\n\n  const autoNoteHandler = useCallback(() => {\n    setValues(sudoku.autoNote);\n  }, []);\n\n  const autoPlaceHandler = useCallback(() => {\n    setValues(sudoku.autoPlace);\n  }, []);\n\n  const pointingHandler = useCallback(() => {\n    setValues(sudoku.pointing);\n  }, []);\n\n  const claimingHandler = useCallback(() => {\n    setValues(sudoku.claiming);\n  }, [setValues]);\n\n  const tipHandler = useCallback(() => {\n    if (tip) {\n      // clear\n      setTip(null);\n\n      // handle tip\n      setValues(sudoku.handleTip(tip));\n    } else {\n      // find tip\n      const t = sudoku.findTip(values);\n      if (t) {\n        console.group('[tip]');\n        setTip(t);\n        if (t.type === 'X-Wing') {\n          console.log(t);\n          digitClickedHandler(t.d, true);\n        } else if (t.type === 'X-Group') {\n          console.log(t);\n        } else if (t.type === 'group') {\n          console.log(\n            `group:${['naked', 'hidden'][t.cls]}-${t.n}:${t.domain}-${t[t.domain]}: [${[...t.poses]}],[${[...t.notes]}]`\n          );\n          // deselect\n          deselectHandler();\n        }\n        console.groupEnd();\n      }\n    }\n  }, [deselectHandler, digitClickedHandler, tip, values]);\n\n  const moveActivePos = useCallback(\n    (dRow, dCol) => {\n      if (activePos) {\n        setActiveState(({ pos: [curRow, curCol] }) => {\n          const pos = [(curRow + 9 + dRow) % 9, (curCol + 9 + dCol) % 9];\n          return { val: 0, pos };\n        });\n      }\n    },\n    [activePos]\n  );\n\n  const marks = useMemo(() => {\n    if (tip) {\n      if (tip.type === 'group') {\n        const { cls, domain, poses, notes } = tip;\n        if (cls === 0) {\n          // naked\n          return { effect: { [domain + 's']: new Set([tip[domain]]) }, highlights: { poses, notes } };\n        } else if (cls === 1) {\n          // hidden\n          return { domain: { [domain + 's']: new Set([tip[domain]]) }, highlights: { poses, notes } };\n        }\n      } else if (tip.type === 'X-Wing') {\n        const { domain, rows, cols, poses, d } = tip;\n        if (domain === 'row') {\n          return { domain: { rows }, effect: { cols }, highlights: { poses, notes: new Set([d]) } };\n        } else if (domain === 'col') {\n          return { domain: { cols }, effect: { rows }, highlights: { poses, notes: new Set([d]) } };\n        }\n      } else if (tip.type === 'X-Group') {\n        const { domain, rows, cols, blocks, poses, d } = tip;\n        if (domain === 'row') {\n          return { domain: { rows }, effect: { cols, blocks }, highlights: { poses, notes: new Set([d]) } };\n        } else if (domain === 'col') {\n          return { domain: { cols }, effect: { rows, blocks }, highlights: { poses, notes: new Set([d]) } };\n        } else if (domain === 'block') {\n          return { domain: { blocks }, effect: { rows, cols }, highlights: { poses, notes: new Set([d]) } };\n        }\n      }\n    }\n  }, [tip]);\n\n  // event listeners\n  useEffect(() => {\n    const keydownHandler = e => {\n      console.log(e);\n      // TODO: handler other shortcut keys\n      if (e.code.startsWith('Digit')) {\n        const d = parseInt(e.key);\n        digitClickedHandler(d);\n      } else if (e.key === 'N') {\n        startNewGameHandler();\n      } else if (e.key === 'n') {\n        if (e.ctrlKey) {\n          autoNoteHandler();\n        } else {\n          toggleIsNotingHandler();\n        }\n      } else if (e.key === 'd') {\n        deselectHandler();\n      } else if (e.key === 't') {\n        tipHandler();\n      } else if (e.key === 'p') {\n        autoPlaceHandler();\n      } else if (e.key === 'h' || e.key === 'ArrowLeft') {\n        moveActivePos(0, -1);\n      } else if (e.key === 'l' || e.key === 'ArrowRight') {\n        moveActivePos(0, 1);\n      } else if (e.key === 'j' || e.key === 'ArrowDown') {\n        moveActivePos(1, 0);\n      } else if (e.key === 'k' || e.key === 'ArrowUp') {\n        moveActivePos(-1, 0);\n      } else {\n        return;\n      }\n      e.preventDefault();\n    };\n    document.addEventListener('keydown', keydownHandler);\n\n    return () => {\n      document.removeEventListener('keydown', keydownHandler);\n    };\n  }, [\n    autoNoteHandler,\n    autoPlaceHandler,\n    deselectHandler,\n    digitClickedHandler,\n    moveActivePos,\n    startNewGameHandler,\n    tipHandler,\n    toggleIsNotingHandler,\n  ]);\n\n  useEffect(() => {\n    // start new puzzle if receiving puzzle\n    if (puzzle !== initialPuzzle) {\n      const values = sudoku.parsePuzzle(puzzle);\n      setInitialPuzzle(sudoku.stringify(values));\n      setValues(values);\n    }\n  }, [initialPuzzle, puzzle]);\n\n  useEffect(() => {\n    // clear tip if values changed\n    setTip(null);\n  }, [values]);\n\n  let shareContent = null;\n  if (showShare) {\n    const url = new URL(window.location);\n    const curPuzzle = sudoku.stringify(values);\n    url.search = '?puzzle=' + curPuzzle;\n    shareContent = (\n      <div className={styles.QRCode}>\n        <QRCode size={256} value={url.toString()} />\n        <p>{initialPuzzle}</p>\n        <p>{curPuzzle}</p>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Modal show={showShare} close={() => setShowShare(false)}>\n        {shareContent}\n      </Modal>\n      <div className={styles.Menu}>\n        <Button onClick={startNewGameHandler}>New</Button>\n        <Button onClick={emptyHandler}>Empty</Button>\n        <Button onClick={() => setShowShare(true)}>Share</Button>\n      </div>\n      <div className={styles.Board}>\n        <Board\n          values={values}\n          activeVal={activeVal}\n          activePos={activePos}\n          cellClickedHandler={cellClickedHandler}\n          showAvail={showAvail}\n          isNoting={isNoting}\n          marks={marks}\n        />\n      </div>\n      <div className={styles.Controls}>\n        <Controls\n          values={values}\n          activeVal={activeVal}\n          availableDigits={availableDigits}\n          digitClickedHandler={digitClickedHandler}\n          showAvail={showAvail}\n          isNoting={isNoting}\n          resetHandler={resetHandler}\n          eraseValueHandler={eraseValueHandler}\n          deselectHandler={deselectHandler}\n          toggleShowAvailHandler={toggleShowAvailHandler}\n          toggleIsNotingHandler={toggleIsNotingHandler}\n          autoNoteHandler={autoNoteHandler}\n          autoPlaceHandler={autoPlaceHandler}\n          pointingHandler={pointingHandler}\n          claimingHandler={claimingHandler}\n          tip={tip}\n          tipHandler={tipHandler}\n        />\n      </div>\n      <div className={styles.Info}></div>\n    </>\n  );\n};\n\nexport default Sudoku;\n","import React, { useState, useCallback, useRef } from 'react';\nimport Button from '../../components/UI/Button/Button';\nimport styles from './NewGame.module.scss';\nimport { useEffect } from 'react';\n\nconst samplePuzzle = `901002708\n570060000\n000000004\n000000000\n700421900\n000098030\n300506070\n009003000\n000080051`;\n\nconst NewGame = ({ cancelNewGameHandler, newGameHandler, error }) => {\n  const [puzzle, setPuzzle] = useState('');\n  const puzzleChangedHandler = useCallback(event => {\n    setPuzzle(event.target.value);\n  }, []);\n\n  const textareaRef = useRef();\n  useEffect(() => {\n    textareaRef.current.focus();\n  }, []);\n\n  // event listeners\n  useEffect(() => {\n    const keydownHandler = e => {\n      // console.log(e);\n      if (e.key === 'Escape') {\n        cancelNewGameHandler();\n      } else if (e.key === 'Enter' && e.shiftKey) {\n        newGameHandler(puzzle);\n      } else {\n        return;\n      }\n      e.preventDefault();\n    };\n    document.addEventListener('keydown', keydownHandler);\n\n    return () => {\n      document.removeEventListener('keydown', keydownHandler);\n    };\n  }, [cancelNewGameHandler, newGameHandler, puzzle]);\n\n  return (\n    <div className={styles.NewGame}>\n      <h1>input a new puzzle</h1>\n      {error && <div className={styles.Error}>{error.message}</div>}\n      <textarea\n        ref={textareaRef}\n        id=\"puzzle\"\n        name=\"puzzle\"\n        inputMode=\"numeric\"\n        onChange={puzzleChangedHandler}\n        value={puzzle}\n        placeholder={samplePuzzle}\n      />\n      <Button onClick={cancelNewGameHandler}>Cancel</Button>\n      <Button onClick={() => newGameHandler(puzzle)}>Done</Button>\n    </div>\n  );\n};\n\nexport default NewGame;\n","import React, { useState, useCallback } from 'react';\nimport Main from './Main';\nimport NewGame from './NewGame';\nimport styles from './Sudoku.module.scss';\nimport * as sudoku from '../../libs/sudoku';\n\nconst defaultPuzzle = `\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n000000000\n`;\n\nconst Sudoku = () => {\n  const [puzzle, setPuzzle] = useState(() => {\n    // get puzzle from url search parameter: puzzle\n    const puzzle = new URLSearchParams(window.location.search).get('puzzle');\n    try {\n      sudoku.simpleCheckPuzzle(puzzle);\n      return puzzle;\n    } catch (error) {\n      return defaultPuzzle;\n    }\n  });\n  const [isNewGame, setIsNewGame] = useState(false);\n  const [puzzleError, setPuzzleError] = useState(null);\n\n  // handlers\n  const startNewGameHandler = useCallback(() => {\n    setIsNewGame(true);\n  }, []);\n  const emptyHandler = useCallback(() => {\n    setPuzzle(defaultPuzzle);\n  }, []);\n\n  const cancelNewGameHandler = useCallback(() => {\n    setIsNewGame(false);\n  }, []);\n\n  const newGameHandler = useCallback(puzzle => {\n    try {\n      sudoku.simpleCheckPuzzle(puzzle);\n      setPuzzle(puzzle);\n      setIsNewGame(false);\n    } catch (error) {\n      setPuzzleError(error);\n    }\n  }, []);\n\n  let content = null;\n  if (isNewGame) {\n    content = (\n      <NewGame\n        cancelNewGameHandler={cancelNewGameHandler}\n        newGameHandler={newGameHandler}\n        error={puzzleError}\n      />\n    );\n  } else {\n    content = (\n      <Main\n        puzzle={puzzle}\n        startNewGameHandler={startNewGameHandler}\n        emptyHandler={emptyHandler}\n      />\n    );\n  }\n\n  return <div className={styles.Sudoku}>{content}</div>;\n};\n\nexport default Sudoku;\n","import React from 'react';\nimport Sudoku from './containers/Sudodu/Sudoku';\n\nexport default function App() {\n  return <Sudoku />;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}