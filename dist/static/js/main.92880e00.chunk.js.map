{"version":3,"sources":["libs/utils.js","components/Sudoku/Board/Block/Cell/Cell.module.scss","components/UI/Digits/Digits.module.scss","components/Sudoku/Controls/Digits/Digits.module.scss","components/Sudoku/Controls/Controls.module.scss","containers/Sudodu/Main.module.scss","components/Sudoku/Board/Block/Block.module.scss","components/UI/Modal/Modal.module.scss","components/UI/Button/Button.module.scss","components/Sudoku/Board/Board.module.scss","components/UI/Backdrop/Backdrop.module.scss","containers/Sudodu/NewGame.module.scss","components/Sudoku/Board/Arrow.module.scss","components/UI/Loading/Loading.module.scss","components/UI/Spinner/Spinner.module.css","containers/Sudodu/Sudoku.module.scss","components/UI/Button/Button.js","components/UI/Digits/Digits.js","libs/position.js","libs/sudoku.js","components/Sudoku/Board/Block/Cell/Cell.js","components/Sudoku/Board/Block/Block.js","components/UI/AspectRatio/AspectRatioBox.js","components/Sudoku/Board/calc.js","components/Sudoku/Board/Arrow.js","components/Sudoku/Board/Frame.js","components/Sudoku/Board/Board.js","components/UI/AspectRatio/AspectRatioWrapper.js","components/Sudoku/Controls/Digits/Digits.js","components/Sudoku/Controls/Controls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Spinner/Spinner.js","components/UI/Loading/Loading.js","containers/Sudodu/Main.js","containers/Sudodu/NewGame.js","containers/Sudodu/Sudoku.js","App.js","serviceWorker.js","index.js"],"names":["combx","comb","findNGroupFromLinks","nilFunc","d","n","k","i","res","push","f","links","order","options","checkClear","s","link","start","end","v","ends","Set","add","points","Object","values","xpoints","filter","p","size","length","idxes","starts","idx","point","forEach","cleared","has","e","window","global","console","group","groupEnd","log","error","getAttrDefault","obj","name","defVal","undefined","module","exports","Button","type","onClick","disabled","children","classes","styles","className","join","generateDigit","digitClass","c","color","digitClassName","style","backgroundColor","Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine","getDigitLocalPos","Math","floor","_baseArray","blockShape","blocks","rows","cols","rowColToBlock","row","col","blockRowColIndex","blockRows","block","blockCols","_rowPositions","map","key","toString","this","rowPositions","_rowRelatedPositions","r","pos","_colPositions","colPositions","_colRelatedPositions","_blockPositions","b","_blocFlattenkPositions","blockPoses","_blockRelatedPositions","_","_relatedPositions","getPosition","getPosBlock","getBlockPositions","getBlockFlattenPositions","getRowPositions","getColPositions","getRelatedBlockPositions","getRelatedRowPositions","getRelatedColPositions","getRelatedPositions","flattenPositions","flat","_keyPositionMapping","getPositionByKey","mapPositionsTo","getCell","cells","_intersection","a","sb","getCommonRelatedPositions","poses","rposes","calcPosDistance","aPos","bPos","dRow","dCol","findClosedPosPair","aPoses","bPoses","minDistance","Number","MAX_VALUE","searchChain","findNGroup","findNXGroup","Notes","value","notes","_base","is","ns","Sudoku","puzzle","jump","steps","_curCellsIdx","_cellsHistory","_notify","jumpToFirst","jumpToLast","subscribers","_setPuzzle","defaultPuzzle","_ops","_setCells","parse","stringify","desc","slice","origin","isEmpty","entries","rpos","delete","1","2","3","4","5","6","7","8","9","curCells","getCurCells","cell","_txSetCellValue","_txCells","_startTx","action","payload","actions","RESET","NOTE","_note","AUTO_NOTE","_autoNote","AUTO_PLACE","_autoPlace","AUTO_POINTING","_autoPointing","AUTO_CLAIMING","_autoClaiming","AUTO_PLACE_POINTING_CLAIMING","_autoPlacePointingClaiming","UPDATE_CELL_VALUE","_updateCellValue","ELIMINATE_GROUP","_eliminateGroup","ELIMINATE_XGROUP","_eliminateXGroup","ELIMINATE_CHAIN","_eliminateChain","HANDLE_TIP","_handleTip","commit","_handlActions","_commit","dispatch","isNoting","tip","setCellValue","new","calcAvailableDigits","count","placed","cls","br","bc","rb","cb","_noteCellValue","_placeCellValue","oldCell","otherPoses","domain","positions","otherPositions","effect","findGroup","findXGroup","findChain","eliminateGroup","eliminateXGroup","eliminateChain","dGroupPoses","xPositions","xPoses","blockDigitPoses","val","digitPoses","sblock","digitGroups","sd","parseInt","groupPoses","newGroupPos","groupPos","gp","getDigitGroupPoses","dLinks","dPoses","ds","getPosLink","getGroupPosLink","otherDs","false","true","isGroup","getDigitPosesAndLinks","maxLen","tryCellLinks","tryGroupLinks","getPoses","dRes","maxLength","startNode","extraData","td","chain","hasMulti","hasGroup","node","parts","effectedPoses","newValue","keep","keepDs","Error","flattenCells","match","cellPattern","flattenCellValues","startsWith","endsWith","split","valuePattern","test","Array","from","j","checkExistAndEqual","startPos","cpos","effectedDs","hasCommon","targets","tpos","chainHasNode","nextNode","cd","getRealPoses","getOtherRowGroupPositions","getOtherColGroupPositions","getOtherBlockGroupPositions","filteredGroupPoses","ok","strongTargets","weakTargets","getOtherGroupPositions","strongPos","opos","spos","filterPoses","getPositionsLinks","note","getAToBLinks","getPositions","getEnd","getRowToColLinks","getRowToBlockLinks","getColToBlockLinks","getPositionsForDigit","types","rc","cr","rcLinks","isXWing","rbLinks","cbLinks","noteClassName","activeVal","highlighted","effectMarked","marks","Note","ActiveValue","src","highlights","posNotes","posSubNotes","subNotes","MarkedNoteValue","MarkedValue","Effected","Cell","React","memo","activePos","available","showAvail","content","isSelected","activeRow","activeCol","activeBlock","Selected","Related","clickable","Available","Place","domainMarked","MarkedHighlight","withoutOutlinePoses","WithoutOutline","MarkedDomain","MarkedEffect","RowNotes","digits","Value","Placed","Block","availableCells","cellClickedHandler","isOdd","Odd","Row","Box","styled","div","width","ratio","Content","fixed","scroll","getCoord","localRow","Arrow","distance","x","y","deg","dd","startDigit","endPos","endDigit","sc","calc","ec","sx","sy","dx","dy","sqrt","acos","PI","Pointer","Frame","ex","ey","startRow","startCol","endRow","endCol","Board","availablePositions","AspectRatioBox","SudokuBoard","frames","frame","arrows","arrow","Wrapper","props","Digits","availableDigits","remainingDigits","digitClickedHandler","genClassName","useCallback","Digit","active","Disabled","AspectRatioWrapper","Count","Controls","cellsRecord","hasPrev","hasNext","deselectHandler","toggleShowAvailHandler","toggleIsNotingHandler","resetHandler","eraseValueHandler","autoNoteHandler","autoPlacePointingClaimingHandler","tipHandler","changeChainStepHandler","History","Panel","Tools","Tip","ChainSteper","Backdrop","show","absolute","Absolute","close","Modal","Show","Close","prevProps","nextProps","Spinner","Loader","sudoku","sudokus","startNewGameHandler","emptyHandler","useState","isLoading","setIsLoading","showShare","setShowShare","setChanged","useEffect","subscribe","unsubscribe","activeState","setActiveState","setShowAvail","setIsNoting","setTip","chainStep","setChainStep","useMemo","calcAvailablePositions","calcRemainingDigits","updateCellValue","curActivePos","force","curActiveVal","confirm","reset","autoNote","autoPlacePointingClaiming","handleTip","setTimeout","t","findTip","moveActivePos","curRow","curCol","moveActiveVal","curChain","allPoses","effectedNotes","_posNotes","endNode","len","keydownHandler","code","ctrlKey","preventDefault","document","addEventListener","removeEventListener","shareContent","url","URL","location","initialPuzzle","curPuzzle","search","QRCode","Loading","Menu","Info","NewGame","cancelNewGameHandler","newGameHandler","setPuzzle","puzzleChangedHandler","event","target","textareaRef","useRef","current","focus","shiftKey","message","ref","id","inputMode","onChange","placeholder","URLSearchParams","get","setSudoku","isNewGame","setIsNewGame","puzzleError","setPuzzleError","Main","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","process","href","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.92880e00.chunk.js","sourcesContent":["const debug = process.env.NODE_ENV !== 'production';\nconst nilFunc = () => {};\n\nfunction* combx(d, n, k) {\n  if (n < k) {\n  } else if (k === 1) {\n    for (let i = d; i < n + d; i++) {\n      yield [i];\n    }\n  } else if (n === k) {\n    const res = [];\n    for (let i = d; i < n + d; i++) {\n      res.push(i);\n    }\n    yield res;\n  } else {\n    // with 0\n    for (const res of combx(d + 1, n - 1, k - 1)) {\n      yield [d, ...res];\n    }\n    // without 0\n    yield* combx(d + 1, n - 1, k);\n  }\n}\n\nexport function* comb(n, k) {\n  yield* combx(0, n, k);\n}\n\nexport function* findNGroupFromLinks(links, n, order = 0, options = { checkClear: true }) {\n  const s = {};\n  for (const link of links) {\n    const start = link[order];\n    const end = link[(order + 1) % 2];\n    const v = s[start] || { start, ends: new Set() };\n    v.ends.add(end);\n    s[start] = v;\n  }\n  const points = Object.values(s);\n  const xpoints = points.filter(p => p.ends.size <= n);\n  if (options.checkClear && points.length <= n) {\n    // only return group if count(starts) > n\n    return;\n  }\n\n  for (const idxes of comb(xpoints.length, n)) {\n    // check\n    const starts = new Set();\n    const ends = new Set();\n    for (const idx of idxes) {\n      const point = xpoints[idx];\n      starts.add(point.start);\n      point.ends.forEach(ends.add, ends);\n      if (ends.size > n) {\n        break;\n      }\n    }\n    if (ends.size === n) {\n      let cleared = options.checkClear;\n      if (cleared) {\n        // n is 1, no need to check.\n        // check if group is cleared\n        for (const p of points.filter(p => !starts.has(p.start))) {\n          if ([...p.ends].filter(e => !ends.has(e)).length < p.ends.size) {\n            // other starts has end in ends\n            // need clear\n            cleared = false;\n            break;\n          }\n        }\n      }\n\n      if (!cleared) {\n        yield [starts, ends];\n      }\n    }\n  }\n}\n\nconst _store = {};\nexport const memorize = f => (...args) => {\n  if (_store[f]) {\n    _store[f] = { args: [], res: undefined };\n  }\n  const data = _store[f];\n  if (!(data.args.length === args.length && data.args.reduce((r, arg, idx) => r && Object.is(arg, args[idx]), true))) {\n    data.args = args;\n    data.res = f(...args);\n  }\n  return data.res;\n};\n\nconst _console = (window || global || {}).console || {};\n\nexport const console = {\n  group: (debug && _console.group) || nilFunc,\n  groupEnd: (debug && _console.groupEnd) || nilFunc,\n  log: (debug && _console.log) || nilFunc,\n  error: (debug && _console.error) || nilFunc,\n};\n\nexport const getAttrDefault = (obj, name, defVal) => {\n  if (obj[name] === undefined) {\n    obj[name] = defVal;\n  }\n  return obj[name];\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Value\":\"Cell_Value__1lDbW\",\"Notes\":\"Cell_Notes__10ap7\",\"Related\":\"Cell_Related__ET6Lg\",\"Available\":\"Cell_Available__3vvqK\",\"Place\":\"Cell_Place__3TPHN\",\"Note\":\"Cell_Note__2U2fC\",\"MarkedDomain\":\"Cell_MarkedDomain__31hFJ\",\"MarkedEffect\":\"Cell_MarkedEffect___usON\",\"MarkedHighlight\":\"Cell_MarkedHighlight__2O1xC\",\"WithoutOutline\":\"Cell_WithoutOutline__35g8t\",\"ActiveValue\":\"Cell_ActiveValue__3McOV\",\"Placed\":\"Cell_Placed__3HOvj\",\"Selected\":\"Cell_Selected__2LsAU\",\"MarkedValue\":\"Cell_MarkedValue__dMEee\",\"MarkedNoteValue\":\"Cell_MarkedNoteValue__24o3W\",\"Effected\":\"Cell_Effected__HnLYk\",\"RowNotes\":\"Cell_RowNotes__1QNhn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Zero\":\"Digits_Zero__2W6xd\",\"One\":\"Digits_One__-wXsd\",\"Two\":\"Digits_Two__5WRCG\",\"Three\":\"Digits_Three__1GKk-\",\"Four\":\"Digits_Four__1ahFU\",\"Five\":\"Digits_Five__3m1dx\",\"Six\":\"Digits_Six__kvriF\",\"Seven\":\"Digits_Seven__2_nmU\",\"Eight\":\"Digits_Eight__GNMw3\",\"Nine\":\"Digits_Nine__3u9wd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Digits\":\"Digits_Digits__3-KZF\",\"Digit\":\"Digits_Digit__1MXW9\",\"digit\":\"Digits_digit__3Mpxe\",\"Disabled\":\"Digits_Disabled__1N4Jw\",\"active\":\"Digits_active__2AexO\",\"Count\":\"Digits_Count__Eq4Q5\",\"isNoting\":\"Digits_isNoting__-OBTK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Controls\":\"Controls_Controls__1Accx\",\"History\":\"Controls_History__2GRXF\",\"Panel\":\"Controls_Panel__1AK4m\",\"Tools\":\"Controls_Tools__1-fbY\",\"Tip\":\"Controls_Tip__2IHiE\",\"ChainSteper\":\"Controls_ChainSteper__RRrIh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Main_Menu__3YGZL\",\"Board\":\"Main_Board__3XJet\",\"Controls\":\"Main_Controls__1MSdo\",\"Info\":\"Main_Info__2888w\",\"QRCode\":\"Main_QRCode__1jj5B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Block\":\"Block_Block__1kJyh\",\"Odd\":\"Block_Odd__2xFZf\",\"Row\":\"Block_Row__11Olq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__31OI7\",\"Show\":\"Modal_Show__d05bc\",\"Close\":\"Modal_Close__IQjCe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"On\":\"Button_On__3d77T\",\"Off\":\"Button_Off__R9f9J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SudokuBoard\":\"Board_SudokuBoard__3cPYp\",\"Row\":\"Board_Row__2r5V5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__Vem4f\",\"Absolute\":\"Backdrop_Absolute__Z8lxG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewGame\":\"NewGame_NewGame__2hKIv\",\"Error\":\"NewGame_Error__mao55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pointer\":\"Arrow_Pointer__1rYd7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Loading_Spinner__1CFco\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load2\":\"Spinner_load2__2gkgc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sudoku\":\"Sudoku_Sudoku__3acWS\",\"Menu\":\"Sudoku_Menu__1l9tJ\",\"Board\":\"Sudoku_Board__rWs6R\",\"Controls\":\"Sudoku_Controls__2JIvy\",\"Info\":\"Sudoku_Info__2OByE\"};","import React from 'react';\nimport styles from './Button.module.scss';\n\nconst Button = ({ type, onClick, disabled = false, children }) => {\n  const classes = [styles.Button];\n  if (type) {\n    classes.push(styles[type]);\n  }\n  return (\n    <button className={classes.join(' ')} disabled={disabled} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport styles from './Digits.module.scss';\n\nconst styleColor = c => (c ? { backgroundColor: c } : {});\n\nconst generateDigit = digitClass => ({\n  color,\n  digitClassName = 'digit',\n  className = '',\n  children,\n}) => (\n  <div\n    className={`${digitClass} ${digitClassName} ${className}`}\n    style={styleColor(color)}\n  >\n    {children}\n  </div>\n);\n\nexport const Zero = generateDigit(styles.Zero);\nexport const One = generateDigit(styles.One);\nexport const Two = generateDigit(styles.Two);\nexport const Three = generateDigit(styles.Three);\nexport const Four = generateDigit(styles.Four);\nexport const Five = generateDigit(styles.Five);\nexport const Six = generateDigit(styles.Six);\nexport const Seven = generateDigit(styles.Seven);\nexport const Eight = generateDigit(styles.Eight);\nexport const Nine = generateDigit(styles.Nine);\n\nexport default [\n  <Zero />,\n  <One />,\n  <Two />,\n  <Three />,\n  <Four />,\n  <Five />,\n  <Six />,\n  <Seven />,\n  <Eight />,\n  <Nine />,\n];\n","export const getDigitLocalPos = d => [Math.floor((d - 1) / 3), (d - 1) % 3];\nconst _baseArray = [0, 1, 2, 3, 4, 5, 6, 7, 8];\nexport const blockShape = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n];\n\nexport const blocks = _baseArray;\nexport const rows = _baseArray;\nexport const cols = _baseArray;\n\n// (row, col)->block\nexport const rowColToBlock = (row, col) => Math.floor(row / 3) * 3 + Math.floor(col / 3);\n// (row, col)-> index in block\nexport const blockRowColIndex = (row, col) => (row % 3) * 3 + (col % 3);\n// rows of block\nexport const blockRows = block => {\n  const start = Math.floor(block / 3) * 3;\n  return [start, start + 1, start + 2];\n};\n// cols of block\nexport const blockCols = block => {\n  const start = (block % 3) * 3;\n  return [start, start + 1, start + 2];\n};\n\nconst _rowPositions = _baseArray.map(row =>\n  _baseArray.map(col => ({\n    key: `r${row}c${col}`,\n    idx: row * 9 + col,\n    row,\n    col,\n    block: rowColToBlock(row, col),\n    toString() {\n      return this.key;\n    },\n  }))\n);\nexport const rowPositions = _rowPositions;\n\n// row positions without col\nconst _rowRelatedPositions = _baseArray.map(r => _baseArray.map(c => _rowPositions[r].filter(pos => pos.col !== c)));\nconst _colPositions = _baseArray.map(c => _baseArray.map(r => _rowPositions[r][c]));\nexport const colPositions = _colPositions;\n// col positions without row\nconst _colRelatedPositions = _baseArray.map(c => _baseArray.map(r => _colPositions[c].filter(pos => pos.row !== r)));\n\n// block positions 3x3\nconst _blockPositions = _baseArray.map(b => blockRows(b).map(row => _rowPositions[row].filter(pos => pos.block === b)));\n\nconst _blocFlattenkPositions = _baseArray.map(b => {\n  const blockPoses = _blockPositions[b];\n  return [...blockPoses[0], ...blockPoses[1], ...blockPoses[2]];\n});\n// block positions without it's row/col index\nconst _blockRelatedPositions = _baseArray.map(b =>\n  _baseArray.map(i => _blocFlattenkPositions[b].filter((_, idx) => idx !== i))\n);\n\n// positions without row/col\nconst _relatedPositions = _baseArray.map(r =>\n  _baseArray.map(c => {\n    const b = rowColToBlock(r, c);\n    const res = [];\n    _rowPositions.forEach(rows =>\n      rows.forEach(pos => {\n        const { row, col, block } = pos;\n        if (r === row && c === col && b === block) {\n          return;\n        }\n        if (r === row || c === col || b === block) {\n          res.push(pos);\n        }\n      })\n    );\n    return res;\n  })\n);\n\nexport const getPosition = (row, col) => _rowPositions[row][col];\n\nexport const getPosBlock = (row, col) => _rowPositions[row][col].block;\n\nexport const getBlockPositions = block => _blockPositions[block];\nexport const getBlockFlattenPositions = block => _blocFlattenkPositions[block];\nexport const getRowPositions = row => _rowPositions[row];\nexport const getColPositions = col => _colPositions[col];\n\nexport const getRelatedBlockPositions = ({ row, col, block }) =>\n  _blockRelatedPositions[block === undefined ? rowColToBlock(row, col) : block][blockRowColIndex(row, col)];\nexport const getRelatedRowPositions = ({ row, col }) => _rowRelatedPositions[row][col];\nexport const getRelatedColPositions = ({ row, col }) => _colRelatedPositions[col][row];\nexport const getRelatedPositions = ({ row, col }) => _relatedPositions[row][col];\n\n// all positions from left to right, top to bottom.\n// used to iterate all positions\nexport const flattenPositions = _rowPositions.flat();\n\nconst _keyPositionMapping = {};\nflattenPositions.forEach(pos => {\n  _keyPositionMapping[pos.key] = pos;\n});\n\nexport const getPositionByKey = key => _keyPositionMapping[key];\n\nexport const mapPositionsTo = f => _baseArray.map(row => _baseArray.map(col => f(row, col)));\n\nexport const getCell = (cells, pos) => cells[pos.row][pos.col];\n\nconst _intersection = (a, b) => {\n  const sb = new Set(b);\n  return a.filter(v => sb.has(v));\n};\n\nexport const getCommonRelatedPositions = (...poses) => {\n  switch (poses.length) {\n    case 0:\n      return [];\n    case 1:\n      return getRelatedPositions(poses[0]);\n    default:\n      const [pos, ...rposes] = poses;\n      return _intersection(getRelatedPositions(pos), getCommonRelatedPositions(...rposes));\n  }\n};\n\nconst calcPosDistance = (aPos, bPos) => {\n  const dRow = aPos.row - bPos.row;\n  const dCol = aPos.col - bPos.col;\n  return dRow * dRow + dCol * dCol;\n};\n\nexport const findClosedPosPair = (aPoses, bPoses) => {\n  if (aPoses.length === 1 && bPoses === 1) {\n    return [aPoses[0], bPoses[0]];\n  }\n\n  let minDistance = Number.MAX_VALUE;\n  let a = null;\n  let b = null;\n  for (const aPos of aPoses) {\n    for (const bPos of bPoses) {\n      const d = calcPosDistance(aPos, bPos);\n      if (d < minDistance) {\n        minDistance = d;\n        a = aPos;\n        b = bPos;\n      }\n    }\n  }\n\n  return [a, b];\n};\n","import {\n  flattenPositions,\n  getRelatedPositions,\n  mapPositionsTo,\n  rowColToBlock,\n  getRelatedRowPositions,\n  getRelatedColPositions,\n  getRelatedBlockPositions,\n} from './position';\nimport * as positions from './position';\nimport { findNGroupFromLinks, console, getAttrDefault } from './utils';\n\nexport class Notes {\n  static _base = 1 << 16;\n  static new(...notes) {\n    let value = 1 << 16;\n    for (const n of notes) {\n      value |= 1 << n;\n    }\n    return value;\n  }\n\n  static isEmpty(value) {\n    return value === this._base;\n  }\n\n  static size(value) {\n    let s = 0;\n    for (let n = 1; n <= 9; n++) {\n      value = value >> 1;\n      if ((value & 1) === 1) {\n        s++;\n      }\n    }\n    return s;\n  }\n\n  static first(value) {\n    for (let n = 1; n <= 9; n++) {\n      if (Notes.has(value, n)) {\n        return n;\n      }\n    }\n  }\n\n  static entries(value) {\n    const res = [];\n    for (let n = 1; n <= 9; n++) {\n      if (Notes.has(value, n)) {\n        res.push(n);\n      }\n    }\n    return res;\n  }\n\n  static is(value) {\n    return (value & this._base) !== 0;\n  }\n\n  static has(value, n) {\n    return Notes.is(value) && (value & (1 << n)) !== 0;\n  }\n\n  static add(value, n) {\n    return value | (1 << n);\n  }\n\n  static delete(value, ...ns) {\n    for (const n of ns) {\n      value &= ~(1 << n);\n    }\n    return value;\n  }\n}\n\nexport class Sudoku {\n  static defaultPuzzle = `\n  000000000 000000000 000000000\n  000000000 000000000 000000000\n  000000000 000000000 000000000\n`;\n  constructor(puzzle) {\n    this.subscribers = [];\n    this._setPuzzle(puzzle || Sudoku.defaultPuzzle);\n  }\n\n  _setPuzzle(puzzle) {\n    // clear history\n    this._cellsHistory = [];\n    this._curCellsIdx = -1;\n    this._ops = 0;\n    this._setCells(Sudoku.parse(puzzle), 'init');\n    this.puzzle = this.stringify();\n  }\n\n  get initialPuzzle() {\n    return this.puzzle;\n  }\n\n  get cells() {\n    return this._cellsHistory[this._curCellsIdx].cells;\n  }\n\n  get cellsRecord() {\n    return this._cellsHistory[this._curCellsIdx];\n  }\n\n  _setCells(cells, desc = '') {\n    if (this._curCellsIdx + 1 < this._cellsHistory.length) {\n      this._cellsHistory = this._cellsHistory.slice(0, this._curCellsIdx + 1);\n    }\n    this._cellsHistory.push({ idx: this._ops, cells, desc });\n    this._curCellsIdx++;\n    this._ops++;\n  }\n\n  get hasPrev() {\n    return this._curCellsIdx > 0;\n  }\n\n  get hasNext() {\n    return this._curCellsIdx < this._cellsHistory.length - 1;\n  }\n\n  jump = steps => {\n    this._curCellsIdx += steps;\n    if (this._curCellsIdx < 0) {\n      this._curCellsIdx = 0;\n    } else if (this._curCellsIdx >= this._cellsHistory.length) {\n      this._curCellsIdx = this._cellsHistory.length - 1;\n    }\n\n    this._notify();\n  };\n\n  jumpToFirst = () => {\n    this.jump(this._curCellsIdx);\n  };\n\n  jumpToLast = () => {\n    this.jump(this._cellsHistory.length);\n  };\n\n  subscribe(f) {\n    this.subscribers.push(f);\n  }\n\n  unsubscribe(f) {\n    this.subscribers = this.subscribers.filter(s => s !== f);\n  }\n\n  _notify() {\n    for (const f of this.subscribers) {\n      f(n => n + 1);\n    }\n  }\n\n  static cellPattern = /(\\d)|(p\\d)|(n[1-9]*N)/g;\n  static valuePattern = /^[1-9]$/;\n\n  static parse(puzzle) {\n    if (!puzzle || puzzle.length < 81) {\n      throw new Error(`bad sudoku puzzle format [${puzzle}]`);\n    }\n    // split cell\n    const flattenCells = puzzle.match(Sudoku.cellPattern);\n    if (flattenCells.length !== 81) {\n      throw new Error(`bad sudoku puzzle format [${puzzle}]`);\n    }\n\n    // parse values\n    const flattenCellValues = flattenCells.map(cell => {\n      if (cell.startsWith('n') && cell.endsWith('N')) {\n        // it's note\n        const notes = cell\n          .slice(1, -1)\n          .split('')\n          .map(s => parseInt(s));\n        return { value: Notes.new(...notes) };\n      } else if (cell.startsWith('p')) {\n        // it's placed value\n        return { value: parseInt(cell[1]) };\n      } else if (Sudoku.valuePattern.test(cell)) {\n        // it's value\n        return {\n          value: parseInt(cell),\n          // puzzle origin value\n          origin: true,\n        };\n      } else if (cell === '0') {\n        // it's empty\n        return { value: Notes.new() };\n      }\n      throw new Error('impossible');\n    });\n\n    // organize the values\n    const cells = Array.from(new Array(9)).map(() => new Array(9));\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        cells[i][j] = flattenCellValues[9 * i + j];\n      }\n    }\n    // TODO: check board integrity, no duplicated digit in any row, col, block.\n    return cells;\n  }\n\n  stringify() {\n    const res = [];\n    for (const pos of flattenPositions) {\n      const { origin, value } = this.getCell(pos);\n      if (Notes.is(value)) {\n        // notes\n        if (Notes.isEmpty(value)) {\n          res.push('0');\n        } else {\n          res.push('n', ...Notes.entries(value), 'N');\n        }\n      } else if (origin) {\n        // origin\n        res.push(value);\n      } else {\n        // placed\n        res.push('p', value);\n      }\n    }\n    return res.join('');\n  }\n\n  // calcuate available digits for cell at postion <pos>.\n  calcAvailableDigits(pos) {\n    const res = new Set([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    if (!pos) {\n      return res;\n    }\n\n    const cell = this.getCell(pos);\n    if (cell.origin) {\n      // origin can't be changed\n      return new Set();\n    }\n\n    for (const rpos of getRelatedPositions(pos)) {\n      const { value } = this.getCell(rpos);\n      if (!Notes.is(value)) {\n        res.delete(value);\n      }\n    }\n    return res;\n  }\n\n  calcRemainingDigits() {\n    const res = { 1: 9, 2: 9, 3: 9, 4: 9, 5: 9, 6: 9, 7: 9, 8: 9, 9: 9 };\n    for (const pos of flattenPositions) {\n      const { value } = this.getCell(pos);\n      if (!Notes.is(value)) {\n        res[value]--;\n      }\n    }\n    return res;\n  }\n\n  calcAvailablePositions(d) {\n    if (!(d >= 1 && d <= 9)) {\n      return null;\n    }\n\n    const res = mapPositionsTo(() => true);\n    for (const pos of flattenPositions) {\n      const { value } = this.getCell(pos);\n      if (!Notes.is(value)) {\n        res[pos.row][pos.col] = false;\n        if (value === d) {\n          // clear\n          for (const { row, col } of getRelatedPositions(pos)) {\n            res[row][col] = false;\n          }\n        }\n      }\n    }\n    return res;\n  }\n\n  _txSetCellValue(cells, pos, value) {\n    const { row, col } = pos;\n    const { value: oldValue } = this.getCell(pos);\n    if (value === oldValue) {\n      return cells;\n    }\n\n    const curCells = this.getCurCells();\n    if (cells === curCells) {\n      cells = [...curCells];\n    }\n    if (cells[row] === curCells[row]) {\n      cells[row] = [...curCells[row]];\n    }\n    if (cells[row][col] === curCells[row][col]) {\n      cells[row][col] = { ...curCells[row][col] };\n    }\n    cells[row][col].value = value;\n    if (!Notes.is(value)) {\n      // updated related notes\n      for (const rpos of getRelatedPositions(pos)) {\n        const cell = this.getCell(rpos);\n        if (!Notes.is(cell.value)) {\n          // is not notes\n          continue;\n        }\n        cells = this._txSetCellValue(cells, rpos, Notes.delete(cell.value, value));\n      }\n    }\n    return cells;\n  }\n\n  getCurCells() {\n    if (this._txCells) {\n      // in transaction\n      return this._txCells;\n    }\n    return this.cells;\n  }\n\n  getCell({ row, col }) {\n    return this.getCurCells()[row][col];\n  }\n\n  _startTx() {\n    if (!this._txCells) {\n      this._txCells = this.getCurCells();\n    }\n  }\n\n  _commit(desc = '') {\n    if (this._txCells && this._txCells !== this.cells) {\n      this._setCells(this._txCells, desc);\n      this._txCells = null;\n      this._notify();\n    }\n  }\n\n  setCellValue(pos, value) {\n    this._startTx();\n    this._txCells = this._txSetCellValue(this._txCells, pos, value);\n  }\n\n  // actions\n  static actions = {\n    RESET: 'RESET',\n    NOTE: 'NOTE',\n    UPDATE_CELL_VALUE: 'UPDATE_CELL_VALUE',\n    AUTO_NOTE: 'AUTO_NOTE',\n    AUTO_POINTING: 'AUTO_POINTING',\n    AUTO_CLAIMING: 'AUTO_CLAIMING',\n    AUTO_PLACE: 'AUTO_PLACE',\n    AUTO_PLACE_POINTING_CLAIMING: 'AUTO_PLACE_POINTING_CLAIMING',\n    ELIMINATE_GROUP: 'ELIMINATE_GROUP',\n    ELIMINATE_XGROUP: 'ELIMINATE_XGROUP',\n    ELIMINATE_CHAIN: 'ELIMINATE_CHAIN',\n    HANDLE_TIP: 'HANDLE_TIP',\n  };\n\n  _handlActions(action, payload = {}) {\n    switch (action) {\n      case Sudoku.actions.RESET:\n        this._setPuzzle(this.puzzle);\n        break;\n      case Sudoku.actions.NOTE:\n        this._note(payload);\n        break;\n      case Sudoku.actions.AUTO_NOTE:\n        this._autoNote();\n        break;\n      case Sudoku.actions.AUTO_PLACE:\n        this._autoPlace();\n        break;\n      case Sudoku.actions.AUTO_POINTING:\n        this._autoPointing();\n        break;\n      case Sudoku.actions.AUTO_CLAIMING:\n        this._autoClaiming();\n        break;\n      case Sudoku.actions.AUTO_PLACE_POINTING_CLAIMING:\n        this._autoPlacePointingClaiming();\n        break;\n      case Sudoku.actions.UPDATE_CELL_VALUE:\n        this._updateCellValue(payload);\n        break;\n      case Sudoku.actions.ELIMINATE_GROUP:\n        this._eliminateGroup(payload);\n        break;\n      case Sudoku.actions.ELIMINATE_XGROUP:\n        this._eliminateXGroup(payload);\n        break;\n      case Sudoku.actions.ELIMINATE_CHAIN:\n        this._eliminateChain(payload);\n        break;\n      case Sudoku.actions.HANDLE_TIP:\n        this._handleTip(payload);\n        break;\n      default:\n        break;\n    }\n  }\n\n  dispatch(action, payload, options) {\n    options = { commit: true, log: true, ...(options || {}) };\n    if (options.log) {\n      console.group(`[${action}]`);\n      payload && console.log('->payload:', payload);\n      options && console.log('->options:', options);\n    }\n\n    this._startTx();\n    this._handlActions(action, payload, options);\n\n    if (options.log) {\n      console.groupEnd();\n    }\n\n    if (options.commit) {\n      this._commit(action);\n    }\n  }\n\n  reset() {\n    this.dispatch(Sudoku.actions.RESET);\n  }\n\n  note(pos) {\n    this.dispatch(Sudoku.actions.NOTE, { pos });\n  }\n\n  updateCellValue(isNoting, pos, value) {\n    this.dispatch(Sudoku.actions.UPDATE_CELL_VALUE, { isNoting, pos, value });\n  }\n\n  autoNote() {\n    this.dispatch(Sudoku.actions.AUTO_NOTE);\n  }\n\n  autoPlacePointingClaiming() {\n    this.dispatch(Sudoku.actions.AUTO_PLACE_POINTING_CLAIMING);\n  }\n\n  autoPlace() {\n    this.dispatch(Sudoku.actions.AUTO_PLACE);\n  }\n\n  autoPointing() {\n    this.dispatch(Sudoku.actions.AUTO_POINTING);\n  }\n\n  autoClaiming() {\n    this.dispatch(Sudoku.actions.AUTO_CLAIMING);\n  }\n\n  eliminateGroup(group) {\n    this.dispatch(Sudoku.actions.ELIMINATE_GROUP, { group });\n  }\n\n  eliminateXGroup(tip) {\n    this.dispatch(Sudoku.actions.ELIMINATE_XGROUP, { tip });\n  }\n\n  eliminateChain(tip) {\n    this.dispatch(Sudoku.actions.ELIMINATE_CHAIN, { tip });\n  }\n\n  handleTip(tip) {\n    this.dispatch(Sudoku.actions.HANDLE_TIP, { tip });\n  }\n\n  _note({ pos }) {\n    const { value } = this.getCell(pos);\n    if (!Notes.is(value)) {\n      return;\n    }\n    this.setCellValue(pos, Notes.new(...this.calcAvailableDigits(pos)));\n  }\n\n  _autoNote() {\n    for (const pos of flattenPositions) {\n      this.dispatch(Sudoku.actions.NOTE, { pos }, { commit: false, log: false });\n    }\n  }\n\n  _autoPlacePointingClaiming() {\n    try {\n      let count = 0;\n      do {\n        count = 0;\n        count += this._autoPlace();\n        this._commit(Sudoku.actions.AUTO_PLACE);\n        count += this._autoPointing();\n        this._commit(Sudoku.actions.AUTO_POINTING);\n        count += this._autoClaiming();\n        this._commit(Sudoku.actions.AUTO_CLAIMING);\n      } while (count > 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // auto place naked/hidden single value\n  _autoPlace() {\n    let count = 0;\n    let placed = false;\n\n    console.group('[auto place]');\n    do {\n      placed = false;\n      // 0:naked, 1:hidden\n      for (const cls of [0, 1]) {\n        for (const group of findNGroup(this.getCurCells(), 1, cls)) {\n          this.dispatch(Sudoku.actions.ELIMINATE_GROUP, { group }, { commit: false });\n          count++;\n          placed = true;\n          break;\n        }\n        /* use current cells for every find */\n        if (placed) {\n          continue;\n        }\n      }\n    } while (placed);\n    console.groupEnd();\n\n    return count;\n  }\n\n  // block eliminate row/col\n  _autoPointing() {\n    let count = 0;\n    console.group('[auto pointing]');\n    for (const tip of findNXGroup(this.getCurCells(), 1, { br: true, bc: true })) {\n      console.log(tip);\n      this.dispatch(Sudoku.actions.ELIMINATE_XGROUP, { tip }, { commit: false });\n      count++;\n    }\n    console.groupEnd();\n    return count;\n  }\n\n  // row/col eliminate block\n  _autoClaiming() {\n    let count = 0;\n    console.group('[auto claiming]');\n    for (const tip of findNXGroup(this.getCurCells(), 1, { rb: true, cb: true })) {\n      this.dispatch(Sudoku.actions.ELIMINATE_XGROUP, { tip }, { commit: false });\n      count++;\n    }\n    console.groupEnd();\n    return count;\n  }\n\n  _updateCellValue({ isNoting, pos, value }) {\n    if (isNoting) {\n      this._noteCellValue(pos, value);\n    } else {\n      this._placeCellValue(pos, value);\n    }\n  }\n\n  _placeCellValue(pos, value) {\n    const oldCell = this.getCell(pos);\n    if (oldCell.origin) {\n      // can't place origin value\n      return;\n    }\n\n    if (oldCell.value === value) {\n      // cancel current value\n      value = Notes.new();\n    }\n\n    this.setCellValue(pos, value);\n  }\n\n  _noteCellValue(pos, n) {\n    const { value } = this.getCell(pos);\n    if (!Notes.is(value)) {\n      // can't note cell with value.\n      return;\n    }\n\n    // note\n    let notes = value;\n    if (Notes.has(notes, n)) {\n      notes = Notes.delete(notes, n);\n    } else {\n      notes = Notes.add(notes, n);\n    }\n\n    this.setCellValue(pos, notes);\n  }\n\n  findGroup() {\n    for (let n = 1; n <= 8; n++) {\n      // 0:naked group, 1: hidden group\n      for (const cls of [0, 1]) {\n        for (const group of findNGroup(this.getCurCells(), n, cls)) {\n          // only return the first group\n          group.type = 'group';\n          return group;\n        }\n      }\n    }\n  }\n\n  _eliminateGroup({ group }) {\n    if (group.n === 1) {\n      // place value\n      const pos = [...group.poses][0];\n      const d = [...group.notes][0];\n\n      this.setCellValue(pos, d);\n    } else if (group.cls === 0) {\n      // naked\n      // to eliminate other cells\n      let otherPoses = [];\n      if (group.domain === 'row') {\n        otherPoses = positions.getRowPositions(group.row);\n      } else if (group.domain === 'col') {\n        otherPoses = positions.getColPositions(group.col);\n      } else if (group.domain === 'block') {\n        otherPoses = positions.getBlockFlattenPositions(group.block);\n      }\n      otherPoses = otherPoses.filter(pos => {\n        const { value } = this.getCell(pos);\n        return !(!Notes.is(value) || group.poses.has(pos));\n      });\n      for (const pos of otherPoses) {\n        const { value } = this.getCell(pos);\n        this.setCellValue(pos, Notes.delete(value, ...group.notes));\n      }\n    } else if (group.cls === 1) {\n      // hidden\n      // to eliminate other notes\n      for (const pos of group.poses) {\n        const { value } = this.getCell(pos);\n        this.setCellValue(pos, Notes.new(...Notes.entries(value).filter(n => group.notes.has(n))));\n      }\n    }\n  }\n\n  findXGroup() {\n    for (let n = 1; n <= 8; n++) {\n      for (const group of findNXGroup(this.getCurCells(), n)) {\n        group.type = 'X-Group';\n        return group;\n      }\n    }\n  }\n\n  _eliminateXGroup({ tip }) {\n    const otherPositions = [];\n    if (tip.effect === 'row') {\n      for (const row of tip.rows) {\n        otherPositions.push(...positions.getRowPositions(row));\n      }\n    } else if (tip.effect === 'col') {\n      for (const col of tip.cols) {\n        otherPositions.push(...positions.getColPositions(col));\n      }\n    } else if (tip.effect === 'block') {\n      for (const block of tip.blocks) {\n        otherPositions.push(...positions.getBlockFlattenPositions(block));\n      }\n    }\n\n    for (const pos of otherPositions) {\n      const { value } = this.getCell(pos);\n      if (!Notes.is(value) || tip.poses.has(pos)) {\n        continue;\n      }\n\n      this.setCellValue(pos, Notes.delete(value, tip.d));\n    }\n  }\n\n  findTip() {\n    const cells = this.getCurCells();\n    return this.findGroup(cells) || this.findXGroup(cells) || this.findChain(cells);\n  }\n\n  _handleTip({ tip }) {\n    if (tip.type === 'group') {\n      this.eliminateGroup(tip);\n    } else if (tip.type === 'X-Group') {\n      this.eliminateXGroup(tip);\n    } else if (tip.type === 'chain') {\n      this.eliminateChain(tip);\n    }\n  }\n\n  findChain() {\n    const cells = this.getCurCells();\n    const [dPoses, dGroupPoses, dLinks] = getDigitPosesAndLinks(cells);\n    console.log('chain info:', dGroupPoses, dLinks);\n    for (const maxLen of [20, Number.MAX_VALUE]) {\n      for (const tryCellLinks of [false, true]) {\n        for (const tryGroupLinks of [false, true]) {\n          //for (const getPoses of [d => dPoses[d] || [] /*, d => (dGroupPoses[d] || []).filter(p => p.isGroup)*/]) {\n          for (const getPoses of [d => dPoses[d] || [], d => (dGroupPoses[d] || []).filter(p => p.isGroup)]) {\n            let dRes = null;\n            let maxLength = maxLen;\n            for (let d = 1; d <= 9; d++) {\n              for (const pos of getPoses(d)) {\n                const val = false;\n                const startNode = { pos, d, val };\n                const extraData = {\n                  dLinks,\n                  cells,\n                  td: d,\n                  tryGroupLinks,\n                  tryCellLinks,\n                  maxLength,\n                };\n                for (const chain of searchChain([], startNode, extraData)) {\n                  if (chain.chain.length < maxLength) {\n                    dRes = chain;\n                    maxLength = dRes.chain.length;\n                    extraData.maxLength = maxLength;\n                  }\n                }\n              }\n            }\n            if (dRes) {\n              dRes.type = 'chain';\n              const d = dRes.d;\n              let hasMulti = false;\n              let hasGroup = false;\n              for (const node of dRes.chain) {\n                if (node.d !== d) {\n                  hasMulti = true;\n                }\n                if (node.pos.isGroup) {\n                  hasGroup = true;\n                }\n                if (hasMulti && hasGroup) {\n                  break;\n                }\n              }\n              const parts = [dRes.chain.length - 1];\n              if (hasGroup) {\n                parts.push('Group');\n              }\n              parts.push(hasMulti ? 'XY' : 'X', 'Chain');\n              dRes.name = parts.join('-');\n              return dRes;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  _eliminateChain({ tip }) {\n    for (const pos of tip.effectedPoses) {\n      const { value } = this.getCell(pos);\n      if (!Notes.is(value)) {\n        continue;\n      }\n      let newValue = value;\n      if (tip.keep) {\n        newValue = Notes.new(...tip.keepDs);\n      } else {\n        newValue = Notes.delete(value, tip.d);\n      }\n      this.setCellValue(pos, newValue);\n    }\n  }\n}\n\nconst checkExistAndEqual = (a, b) => a !== undefined && a === b;\n\nfunction* searchChain(chain, node, extraData) {\n  // optimize\n  if (chain.length + 1 >= extraData.maxLength) {\n    return;\n  }\n\n  const { pos, d, val } = node;\n  const { dLinks, cells, td } = extraData;\n\n  if (val === true) {\n    // strong target\n    if (d === td) {\n      // check if intersection related positions has d\n      const effectedPoses = new Set();\n      const startPos = chain[0].pos;\n      const poses = [];\n      if (startPos.isGroup) {\n        poses.push(...startPos.poses);\n      } else {\n        poses.push(startPos);\n      }\n      if (pos.isGroup) {\n        poses.push(...pos.poses);\n      } else {\n        poses.push(pos);\n      }\n      for (const cpos of positions.getCommonRelatedPositions(...poses)) {\n        const { value } = positions.getCell(cells, cpos);\n        if (Notes.has(value, d)) {\n          effectedPoses.add(cpos);\n        }\n      }\n      if (effectedPoses.size > 0) {\n        yield { chain: [...chain, node], effectedPoses, d: td };\n      }\n    } else {\n      // xy-chain\n      const { pos: startPos } = chain[0];\n      if (startPos.key === pos.key) {\n        const poses = pos.isGroup ? [...pos.poses, ...startPos.poses] : [pos];\n        const ds = new Set();\n        for (const p of poses) {\n          const { value } = positions.getCell(cells, p);\n          Notes.entries(value).forEach(d => ds.add(d));\n        }\n        if (ds.size > 2) {\n          // eliminate other digits of this position\n          ds.delete(d);\n          ds.delete(td);\n          yield {\n            chain: [...chain, node],\n            effectedPoses: new Set(poses),\n            d: td,\n            effectedDs: ds,\n            keep: true,\n            keepDs: [d, td],\n          };\n        }\n      } else {\n        if (!pos.isGroup) {\n          if (!(startPos.isGroup && new Set(startPos.poses).has(pos))) {\n            if (\n              checkExistAndEqual(pos.row, startPos.row) ||\n              checkExistAndEqual(pos.col, startPos.col) ||\n              checkExistAndEqual(pos.block, startPos.block)\n            ) {\n              const { value } = positions.getCell(cells, pos);\n              if (Notes.has(value, td)) {\n                yield { chain: [...chain, node], effectedPoses: new Set([pos]), d: td };\n              }\n            }\n          }\n        } else {\n          // group\n          if (!hasCommon(pos.poses, startPos.isGroup ? startPos.poses : [startPos])) {\n            if (\n              checkExistAndEqual(pos.row, startPos.row) ||\n              checkExistAndEqual(pos.col, startPos.col) ||\n              checkExistAndEqual(pos.block, startPos.block)\n            ) {\n              const ds = new Set();\n              for (const p of pos.poses) {\n                const { value } = positions.getCell(cells, p);\n                Notes.entries(value).forEach(d => ds.add(d));\n              }\n              if (ds.has(td)) {\n                yield { chain: [...chain, node], effectedPoses: new Set(pos.poses), d: td };\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  // try related links or group links\n  for (const targets of [dLinks[d][pos][val], extraData.tryGroupLinks ? dLinks[d][pos].group[val] : []]) {\n    for (const tpos of targets) {\n      const nextNode = { pos: tpos, val: !val, d };\n\n      if (chainHasNode(chain, nextNode)) {\n        continue;\n      }\n\n      yield* searchChain([...chain, node], nextNode, extraData);\n    }\n  }\n\n  if (extraData.tryCellLinks) {\n    // try cell links\n    for (const cd of dLinks[d][pos].cell[val]) {\n      const nextNode = { pos, val: !val, d: cd };\n\n      if (chainHasNode(chain, nextNode)) {\n        continue;\n      }\n\n      yield* searchChain([...chain, node], nextNode, extraData);\n    }\n  }\n}\n\nconst chainHasNode = (chain, node) => {\n  for (const n of chain) {\n    if (n.val === node.val && n.d === node.d) {\n      if (n.pos === node.pos) {\n        return true;\n      }\n      if (n.pos.isGroup && new Set(n.pos.poses).has(node.pos)) {\n        return true;\n      }\n      if (node.pos.isGroup && new Set(node.pos.poses).has(n.pos)) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nconst newGroupPos = (domain, val, block, poses, d) => {\n  if (poses.length > 1) {\n    return {\n      key: `${d}@${domain}${val}block${block}`,\n      d,\n      isGroup: true,\n      domain: new Set([domain]),\n      [domain]: val,\n      block,\n      poses,\n      toString() {\n        return this.key;\n      },\n    };\n  }\n  const pos = poses[0];\n  return {\n    key: pos.key,\n    d,\n    isGroup: false,\n    domain: new Set([domain]),\n    [domain]: val,\n    block,\n    pos,\n    poses,\n    toString() {\n      return this.key;\n    },\n  };\n};\n\nexport const getRealPoses = pos => (pos.isGroup ? pos.poses : [pos]);\n\n// for row/col in block, like claiming.\nfunction getDigitGroupPoses(cells) {\n  const dGroupPoses = {};\n  for (const [domain, xPositions] of [\n    ['row', positions.rowPositions],\n    ['col', positions.colPositions],\n  ]) {\n    for (const xPoses of xPositions) {\n      const blockDigitPoses = {};\n      let val = 0;\n      for (const pos of xPoses) {\n        val = pos[domain];\n        const { value } = positions.getCell(cells, pos);\n        if (!Notes.is(value)) {\n          continue;\n        }\n        const digitPoses = getAttrDefault(blockDigitPoses, pos.block, {});\n        for (const d of Notes.entries(value)) {\n          const poses = getAttrDefault(digitPoses, d, []);\n          poses.push(pos);\n        }\n      }\n      for (const [sblock, digitGroups] of Object.entries(blockDigitPoses)) {\n        for (const [sd, poses] of Object.entries(digitGroups)) {\n          const block = parseInt(sblock);\n          const d = parseInt(sd);\n          const groupPoses = getAttrDefault(dGroupPoses, d, []);\n          if (poses.length > 1) {\n            groupPoses.push(newGroupPos(domain, val, block, poses, d));\n          } else {\n            const pos = poses[0];\n            let groupPos = groupPoses.filter(gp => gp.pos === pos)[0];\n            if (!groupPos) {\n              groupPos = newGroupPos(domain, val, block, poses, d);\n              groupPoses.push(groupPos);\n            }\n            groupPos.domain.add(domain);\n            groupPos[domain] = val;\n          }\n        }\n      }\n    }\n  }\n  return dGroupPoses;\n}\n\nconst hasCommon = (a, b) => {\n  const sb = new Set(b);\n  return a.filter(v => sb.has(v)).length > 0;\n};\n\nconst getOtherRowGroupPositions = (groupPoses = [], pos) => {\n  return groupPoses.filter(p => pos.row !== undefined && p.row === pos.row && p.key !== pos.key);\n};\n\nconst getOtherColGroupPositions = (groupPoses = [], pos) => {\n  return groupPoses.filter(p => pos.col !== undefined && p.col === pos.col && p.key !== pos.key);\n};\n\nconst getOtherBlockGroupPositions = (groupPoses = [], pos) => {\n  const filteredGroupPoses = groupPoses.filter(\n    p => p.block === pos.block && p.key !== pos.key && !hasCommon(p.poses, pos.isGroup ? pos.poses : [pos])\n  );\n  const res = filteredGroupPoses.filter(p => p.isGroup);\n  for (const p of filteredGroupPoses.filter(p => !p.isGroup)) {\n    let ok = true;\n    for (const rpos of res) {\n      if (hasCommon(rpos.poses, p.poses)) {\n        ok = false;\n        break;\n      }\n    }\n    if (ok) {\n      res.push(p);\n    }\n  }\n  return res;\n};\n\nfunction getGroupPosLink(groupPoses, pos, d) {\n  // strong: false->true, weak: true->false\n  const strongTargets = new Set();\n  const weakTargets = new Set();\n  for (const [domain, getOtherGroupPositions] of [\n    ['row', getOtherRowGroupPositions],\n    ['col', getOtherColGroupPositions],\n    ['block', getOtherBlockGroupPositions],\n  ]) {\n    if (pos.isGroup && domain !== 'block' && !pos.domain.has(domain)) {\n      continue;\n    }\n\n    let count = 0;\n    let strongPos = null;\n    for (const opos of getOtherGroupPositions(groupPoses, pos)) {\n      count++;\n      if (opos.isGroup) {\n        if (pos.isGroup) {\n          // group pos\n          weakTargets.add(opos);\n          strongPos = opos;\n        } else if (!new Set(opos.poses).has(pos)) {\n          // pos\n          weakTargets.add(opos);\n          strongPos = opos;\n        }\n      }\n    }\n    if (count === 1 && strongPos) {\n      strongTargets.add(strongPos);\n    }\n  }\n  return { false: [...strongTargets], true: [...weakTargets] };\n}\n\nfunction getPosLink(cells, d, pos) {\n  // strong: false->true, weak: true->false\n  const strongTargets = new Set();\n  const weakTargets = new Set();\n  for (const [domain, getRelatedPositions] of [\n    ['row', getRelatedRowPositions],\n    ['col', getRelatedColPositions],\n    ['block', getRelatedBlockPositions],\n  ]) {\n    let spos = pos;\n    let filterPoses = new Set();\n    if (pos.isGroup) {\n      if (domain !== 'block' && !pos.domain.has(domain)) {\n        continue;\n      }\n      spos = pos.poses[0];\n      filterPoses = new Set(pos.poses);\n    }\n\n    let count = 0;\n    let strongPos = null;\n    for (const rpos of getRelatedPositions(spos).filter(p => !filterPoses.has(p))) {\n      const { value } = positions.getCell(cells, rpos);\n      if (!Notes.has(value, d)) {\n        continue;\n      }\n      weakTargets.add(rpos);\n      count++;\n      strongPos = rpos;\n    }\n    if (count === 1) {\n      strongTargets.add(strongPos);\n    }\n  }\n  return { false: [...strongTargets], true: [...weakTargets] };\n}\n\nfunction getDigitPosesAndLinks(cells) {\n  const dGroupPoses = getDigitGroupPoses(cells);\n  const dLinks = {};\n  const dPoses = {};\n  for (const pos of positions.flattenPositions) {\n    const { value } = positions.getCell(cells, pos);\n    if (!Notes.is(value)) {\n      continue;\n    }\n    const ds = Notes.entries(value);\n    for (const d of ds) {\n      const poses = getAttrDefault(dPoses, d, []);\n      poses.push(pos);\n\n      const links = getAttrDefault(dLinks, d, {});\n      const link = getPosLink(cells, d, pos);\n      links[pos] = link;\n      link.group = getGroupPosLink(dGroupPoses[d], pos, d);\n\n      const otherDs = ds.filter(v => v !== d);\n      link.cell = { false: ds.length === 2 ? otherDs : [], true: otherDs };\n    }\n  }\n  // group position links\n  for (const [sd, groupPoses] of Object.entries(dGroupPoses)) {\n    const d = parseInt(sd);\n    const links = getAttrDefault(dLinks, d, {});\n    for (const pos of groupPoses.filter(p => p.isGroup)) {\n      const link = getPosLink(cells, d, pos);\n      links[pos] = link;\n      link.group = getGroupPosLink(dGroupPoses[d], pos);\n      link.cell = { false: [], true: [] };\n    }\n  }\n\n  return [dPoses, dGroupPoses, dLinks];\n}\n\nfunction getPositionsLinks(cells, positions) {\n  const links = [];\n  for (const pos of positions) {\n    const { value } = cells[pos.row][pos.col];\n    if (!Notes.is(value)) {\n      continue;\n    }\n\n    for (const note of Notes.entries(value)) {\n      links.push([pos, note]);\n    }\n  }\n  return links;\n}\n\nfunction* findNGroup(cells, n, cls) {\n  // rows\n  for (const row of positions.rows) {\n    const links = getPositionsLinks(cells, positions.getRowPositions(row));\n    for (const group of findNGroupFromLinks(links, n, cls, { checkClear: n > 1 })) {\n      const poses = group[cls];\n      const notes = group[(cls + 1) % 2];\n      yield { cls, n, domain: 'row', row: row, poses, notes, name: ['naked', 'hidden'][cls] + `-${n}-group` };\n    }\n  }\n  // cols\n  for (const col of positions.cols) {\n    const links = getPositionsLinks(cells, positions.getColPositions(col));\n    for (const group of findNGroupFromLinks(links, n, cls, { checkClear: n > 1 })) {\n      const poses = group[cls];\n      const notes = group[(cls + 1) % 2];\n      yield { cls, n, domain: 'col', col: col, poses, notes, name: ['naked', 'hidden'][cls] + `-${n}-group` };\n    }\n  }\n  // blocks\n  for (const block of positions.blocks) {\n    const links = getPositionsLinks(cells, positions.getBlockFlattenPositions(block));\n    for (const group of findNGroupFromLinks(links, n, cls, { checkClear: n > 1 })) {\n      const poses = group[cls];\n      const notes = group[(cls + 1) % 2];\n      yield { cls, n, domain: 'block', block: block, poses, notes, name: ['naked', 'hidden'][cls] + `-${n}-group` };\n    }\n  }\n}\n\nconst getAToBLinks = (getPositions, getEnd) => (cells, d) => {\n  const links = [];\n  for (let a = 0; a < 9; a++) {\n    for (const pos of getPositions(a)) {\n      const { value } = cells[pos.row][pos.col];\n      if (!Notes.is(value)) {\n        continue;\n      }\n      if (Notes.has(value, d)) {\n        links.push([a, getEnd(pos)]);\n      }\n    }\n  }\n  return links;\n};\n\nconst getRowToColLinks = getAToBLinks(positions.getRowPositions, pos => pos.col);\nconst getRowToBlockLinks = getAToBLinks(positions.getRowPositions, pos => rowColToBlock(pos.row, pos.col));\nconst getColToBlockLinks = getAToBLinks(positions.getColPositions, pos => rowColToBlock(pos.row, pos.col));\n\nconst getPositionsForDigit = (cells, d, positions) => {\n  const poses = [];\n  for (const pos of positions) {\n    const { value } = cells[pos.row][pos.col];\n    if (Notes.is(value) && Notes.has(value, d)) {\n      poses.push(pos);\n    }\n  }\n  return poses;\n};\n\nfunction* findNXGroup(cells, n, types = { rc: true, cr: true, rb: true, br: true, cb: true, bc: true }) {\n  for (let d = 1; d <= 9; d++) {\n    if (types.rc || types.cr) {\n      // row->col\n      const rcLinks = getRowToColLinks(cells, d);\n      if (types.rc) {\n        for (const group of findNGroupFromLinks(rcLinks, n, 0)) {\n          const [rows, cols] = group;\n          const poses = [];\n          let isXWing = true;\n          for (const row of rows) {\n            const rowPositions = getPositionsForDigit(cells, d, positions.getRowPositions(row));\n            if (rowPositions.length !== n) {\n              isXWing = false;\n            }\n            poses.push(...rowPositions);\n          }\n          const name = isXWing ? `${n}-X-Wing` : `${n}-XRC-Group`;\n          yield { name, domain: 'row', effect: 'col', rows, cols, poses: new Set(poses), d };\n        }\n      }\n      // col->row\n      if (types.cr) {\n        for (const group of findNGroupFromLinks(rcLinks, n, 1)) {\n          const [cols, rows] = group;\n          const poses = [];\n          let isXWing = true;\n          for (const col of cols) {\n            const colPositions = getPositionsForDigit(cells, d, positions.getColPositions(col));\n            if (colPositions.length !== n) {\n              isXWing = false;\n            }\n            poses.push(...getPositionsForDigit(cells, d, positions.getColPositions(col)));\n          }\n          const name = isXWing ? `${n}-X-Wing` : `${n}-XCR-Group`;\n          yield { name, domain: 'col', effect: 'row', rows, cols, poses: new Set(poses), d };\n        }\n      }\n    }\n\n    if (types.rb || types.br) {\n      // row->block, 1-xrb-group is claiming\n      const rbLinks = getRowToBlockLinks(cells, d);\n      if (types.rb) {\n        for (const group of findNGroupFromLinks(rbLinks, n, 0)) {\n          const [rows, blocks] = group;\n          const poses = [];\n          for (const row of rows) {\n            poses.push(...getPositionsForDigit(cells, d, positions.getRowPositions(row)));\n          }\n          const name = n === 1 ? 'claiming' : `${n}-XRB-Group`;\n          yield { name, domain: 'row', effect: 'block', rows, blocks, poses: new Set(poses), d };\n        }\n      }\n      // block-row, 1-xbr-group is pointing\n      if (types.br) {\n        for (const group of findNGroupFromLinks(rbLinks, n, 1)) {\n          const [blocks, rows] = group;\n          const poses = [];\n          for (const block of blocks) {\n            poses.push(...getPositionsForDigit(cells, d, positions.getBlockFlattenPositions(block)));\n          }\n          const name = n === 1 ? 'pointing' : `${n}-XBR-Group`;\n          yield { name, domain: 'block', effect: 'row', rows, blocks, poses: new Set(poses), d };\n        }\n      }\n    }\n\n    if (types.cb || types.bc) {\n      // col->block, 1-xcb-group is claiming\n      const cbLinks = getColToBlockLinks(cells, d);\n      if (types.cb) {\n        for (const group of findNGroupFromLinks(cbLinks, n, 0)) {\n          const [cols, blocks] = group;\n          const poses = [];\n          for (const col of cols) {\n            poses.push(...getPositionsForDigit(cells, d, positions.getColPositions(col)));\n          }\n          const name = n === 1 ? 'claiming' : `${n}-XCB-Group`;\n          yield { name, domain: 'col', effect: 'block', cols, blocks, poses: new Set(poses), d };\n        }\n      }\n\n      // block-col, 1-xbc-group is pointing\n      if (types.bc) {\n        for (const group of findNGroupFromLinks(cbLinks, n, 1)) {\n          const [blocks, cols] = group;\n          const poses = [];\n          for (const block of blocks) {\n            poses.push(...getPositionsForDigit(cells, d, positions.getBlockFlattenPositions(block)));\n          }\n          const name = n === 1 ? 'pointing' : `${n}-XBC-Group`;\n          yield { name, domain: 'block', effect: 'col', cols, blocks, poses: new Set(poses), d };\n        }\n      }\n    }\n  }\n}\n","import React from 'react';\nimport styles from './Cell.module.scss';\nimport digits from '../../../../UI/Digits/Digits';\nimport { Notes } from '../../../../../libs/sudoku';\nimport * as positions from '../../../../../libs/position';\n\nconst noteClassName = (n, activeVal, highlighted, effectMarked, marks, pos) => {\n  const classes = [styles.Note];\n  if (n === activeVal) {\n    classes.push(styles.ActiveValue);\n  }\n\n  if (marks) {\n    let src = null;\n    if (highlighted) {\n      src = marks.highlights;\n    } else if (effectMarked) {\n      src = marks.effect;\n    }\n\n    if (src) {\n      const { posNotes, posSubNotes } = src;\n      let { notes, subNotes } = src;\n      if (posNotes && posSubNotes) {\n        notes = posNotes[pos];\n        subNotes = posSubNotes[pos];\n      }\n      if (notes && notes.has(n)) {\n        classes.push(styles.MarkedNoteValue);\n      } else if (subNotes && subNotes.has(n)) {\n        classes.push(styles.MarkedValue);\n      }\n\n      if (highlighted && effectMarked) {\n        if (marks.effect.notes.has(n)) {\n          classes.push(styles.Effected);\n        }\n      }\n    }\n  }\n\n  return classes.join(' ');\n};\n\nconst Cell = React.memo(\n  ({ value, origin, pos, activePos, activeVal, available, showAvail, isNoting, onClick, marks }) => {\n    const { block, row, col } = pos;\n    const classes = [];\n    let content = null;\n    let isSelected = false;\n\n    if (activePos) {\n      const { row: activeRow, col: activeCol, block: activeBlock } = activePos;\n      if (row === activeRow && col === activeCol) {\n        // active\n        isSelected = true;\n        classes.push(styles.Selected);\n      } else if (row === activeRow || col === activeCol || block === activeBlock) {\n        // related area\n        classes.push(styles.Related);\n      }\n    }\n\n    let clickable = available;\n    if (available) {\n      classes.push(styles.Available);\n      if (showAvail) {\n        // show background\n        classes.push(isNoting ? styles.Note : styles.Place);\n      }\n    } else if (available === null) {\n      // deselected\n      classes.push(styles.Available);\n      clickable = true;\n    } else if (!isNoting && !origin && value === activeVal) {\n      // place mode, placed value === activeVal\n      classes.push(styles.Available);\n      clickable = true;\n    }\n\n    // marks\n    let highlighted = false;\n    let domainMarked = false;\n    let effectMarked = false;\n    if (marks) {\n      const { domain, effect, highlights } = marks;\n      if (domain) {\n        const { rows, cols, blocks } = domain;\n        if (rows && rows.has(row)) {\n          domainMarked = true;\n        }\n        if (cols && cols.has(col)) {\n          domainMarked = true;\n        }\n        if (blocks && blocks.has(block)) {\n          domainMarked = true;\n        }\n      }\n      if (effect) {\n        const { rows, cols, blocks, poses } = effect;\n        if (rows && rows.has(row)) {\n          effectMarked = true;\n        }\n        if (cols && cols.has(col)) {\n          effectMarked = true;\n        }\n        if (blocks && blocks.has(block)) {\n          effectMarked = true;\n        }\n        if (poses && poses.has(pos)) {\n          effectMarked = true;\n        }\n      }\n      if (highlights && highlights.poses.has(pos)) {\n        highlighted = true;\n      }\n    }\n    if (highlighted) {\n      classes.push(styles.MarkedHighlight);\n      if (marks.highlights.withoutOutlinePoses && marks.highlights.withoutOutlinePoses.has(pos)) {\n        classes.push(styles.WithoutOutline);\n      }\n    } else if (domainMarked) {\n      classes.push(styles.MarkedDomain);\n    }\n    if (effectMarked) {\n      classes.push(styles.MarkedEffect);\n    }\n\n    if (!Notes.is(value)) {\n      classes.push(styles.Value);\n      // it's placed value\n      !origin && classes.push(styles.Placed);\n      // it's active value\n      if (value === activeVal && !isSelected) {\n        classes.push(styles.ActiveValue);\n      }\n      // it's marked value\n      if (highlighted && marks.highlights.values && marks.highlights.values.has(value)) {\n        classes.push(styles.MarkedValue);\n      }\n\n      content = digits[value];\n    } else {\n      classes.push(styles.Notes);\n      // Set: [1-9]\n      const notes = value;\n      if (Notes.size(notes) > 0) {\n        content = positions.blockShape.map((rows, idx) => (\n          <div key={idx} className={styles.RowNotes}>\n            {rows.map(i => (\n              <div key={i} className={noteClassName(i + 1, activeVal, highlighted, effectMarked, marks, pos)}>\n                {Notes.has(notes, i + 1) ? digits[i + 1] : null}\n              </div>\n            ))}\n          </div>\n        ));\n      }\n    }\n    return (\n      <div className={classes.join(' ')} onClick={clickable ? () => onClick(pos) : undefined}>\n        {content}\n      </div>\n    );\n  }\n);\n\nexport default Cell;\n","import React from 'react';\nimport Cell from './Cell/Cell';\nimport styles from './Block.module.scss';\nimport * as positions from '../../../../libs/position';\n\nconst Block = ({\n  block,\n  activePos,\n  activeVal,\n  cells,\n  availableCells,\n  cellClickedHandler,\n  showAvail,\n  isNoting,\n  marks,\n}) => {\n  const isOdd = block % 2 === 1;\n  return (\n    <div className={`${styles.Block} ${isOdd ? styles.Odd : ''}`}>\n      {positions.getBlockPositions(block).map((rows, idx) => (\n        <div key={idx} className={styles.Row}>\n          {rows.map(pos => (\n            <Cell\n              key={pos.key}\n              {...cells[pos.row][pos.col]}\n              pos={pos}\n              activePos={activePos}\n              activeVal={activeVal}\n              available={availableCells && availableCells[pos.row][pos.col]}\n              onClick={cellClickedHandler}\n              showAvail={showAvail}\n              isNoting={isNoting}\n              marks={marks}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\nexport default Block;\n","import React from 'react';\nimport styled from 'styled-components';\n\n/*\n  make sure the width is the same with a parent's,\n  because padding refer to parent's width.\n*/\nconst Box = styled.div`\n  width: ${({ width }) => (width !== undefined ? width : 'auto')};\n  height: 0;\n  padding-top: ${({ ratio }) => 100 / ratio}%;\n  position: relative;\n`;\n\nconst Content = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  ${({ fixed, scroll }) =>\n    fixed\n      ? `\n    height: 100%;\n    overflow: ${scroll ? `scroll` : 'hidden'};\n  `\n      : `\n  min-height: 100%;\n  `}\n`;\n\nexport default ({ ratio = 1.0, fixed = true, scroll = false, children }) => {\n  return (\n    <Box ratio={ratio}>\n      <Content fixed={fixed} scroll={scroll}>\n        {children}\n      </Content>\n    </Box>\n  );\n};\n","import * as positions from '../../../libs/position';\n\n// percentage for a cell\nexport const perCell = (1 - 1.5 / 100) / 9;\n\nexport const getCoord = ({ row, col }, d) => {\n  const [localRow, localCol] = positions.getDigitLocalPos(d);\n\n  // block margin: 0.25%\n  // cell margin:1%, padding: 2.5% of block\n  const x = (col + (localCol + 0.5) / 3 + 0.35 / 100) * perCell + ((Math.floor(col / 3) + 1) * 0.5 - 0.25) / 100;\n  const y = (row + (localRow + 0.5) / 3 + 0.35 / 100) * perCell + ((Math.floor(row / 3) + 1) * 0.5 - 0.25) / 100;\n\n  return [x, y];\n};\n\nexport const calcDistance = ([sx, sy], [ex, ey]) => {\n  const [dx, dy] = [ex - sx, ey - sy];\n\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\nexport const calcDeg = ([sx, sy], [ex, ey], d) => {\n  const [dx, dy] = [ex - sx, ey - sy];\n  return ((Math.acos(dx / d) * (dy < 0 ? -1 : 1)) / Math.PI) * 180;\n};\n","import React from 'react';\nimport styles from './Arrow.module.scss';\nimport styled from 'styled-components';\nimport * as calc from './calc';\n\n// shortend arrow length, to avoid tail-head contact.\nconst dd = 0.02;\n\nconst Arrow = styled.div`\n  user-select: none;\n  pointer-events: none;\n  position: absolute;\n  border-top: 2px ${({ type }) => type} red;\n  width: ${({ distance }) => distance * 100}%;\n  height: ${({ distance }) => distance * 100}%;\n  transform-origin: top left;\n  transform: translate(${({ x, distance }) => (x / distance) * 100}%, ${({ y, distance }) => (y / distance) * 100}%)\n    rotate(${({ deg }) => deg}deg) translate(${({ distance }) => (dd / 2 / distance) * 100}%);\n`;\n\nexport default ({ type = 'solid', startPos, startDigit, endPos, endDigit }) => {\n  const sc = calc.getCoord(startPos, startDigit);\n  const ec = calc.getCoord(endPos, endDigit);\n  const distance = calc.calcDistance(sc, ec);\n  const deg = calc.calcDeg(sc, ec, distance);\n\n  return (\n    <Arrow x={sc[0]} y={sc[1]} distance={distance - dd} deg={deg} type={type}>\n      <div className={styles.Pointer}></div>\n    </Arrow>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as positions from '../../../libs/position';\nimport * as calc from './calc';\n\nconst dd = 0.8;\n\nconst Frame = styled.div`\n  user-select: none;\n  pointer-events: none;\n  position: absolute;\n  border: 1px solid red;\n  top: ${({ sy }) => sy * 100 - dd}%;\n  left: ${({ sx }) => sx * 100 - dd}%;\n  right: ${({ ex }) => (1 - ex) * 100 - dd}%;\n  bottom: ${({ ey }) => (1 - ey) * 100 - dd}%;\n`;\n\nexport default ({ domain, row, col, block }) => {\n  let startRow;\n  let startCol;\n  let endRow;\n  let endCol;\n\n  if (domain === 'row') {\n    startRow = endRow = row;\n\n    startCol = positions.blockCols(block)[0];\n    endCol = startCol + 2;\n  } else if (domain === 'col') {\n    startCol = endCol = col;\n\n    startRow = positions.blockRows(block)[0];\n    endRow = startRow + 2;\n  }\n\n  const [sx, sy] = calc.getCoord({ row: startRow, col: startCol }, 1);\n  const [ex, ey] = calc.getCoord({ row: endRow, col: endCol }, 9);\n  return <Frame sx={sx} sy={sy} ex={ex} ey={ey} />;\n};\n","import React from 'react';\nimport Block from './Block/Block';\nimport AspectRatioBox from '../../UI/AspectRatio/AspectRatioBox';\nimport Arrow from './Arrow';\nimport Frame from './Frame';\nimport styles from './Board.module.scss';\nimport * as positions from '../../../libs/position';\n\nconst Board = ({ availablePositions, cells, activeVal, activePos, cellClickedHandler, showAvail, isNoting, marks }) => {\n  // active value\n  if (activePos) {\n    // no active value, then selected value is active value for board\n    const { row, col } = activePos;\n    activeVal = cells[row][col].value;\n  }\n\n  return (\n    <AspectRatioBox ratio={1.0}>\n      <div className={styles.SudokuBoard}>\n        {marks && marks.frames && marks.frames.map(frame => <Frame {...frame} />)}\n        {marks &&\n          marks.arrows &&\n          marks.arrows.map(arrow => <Arrow key={`${arrow.startPos}-${arrow.endPos}`} {...arrow} />)}\n        {positions.blockShape.map((rows, idx) => (\n          <div key={idx} className={styles.Row}>\n            {rows.map(b => (\n              <Block\n                key={b}\n                block={b}\n                cells={cells}\n                activePos={activePos}\n                activeVal={activeVal}\n                availableCells={availablePositions}\n                cellClickedHandler={cellClickedHandler}\n                showAvail={showAvail}\n                isNoting={isNoting}\n                marks={marks}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n    </AspectRatioBox>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  &::before {\n    content: '';\n    width: 1px;\n    margin-left: -1px;\n    float: left;\n    height: 0;\n    padding-top: ${({ ratio }) => 100 / ratio}%;\n  }\n  &::after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n`;\n\nexport default ({ ratio = 1.0, children, ...props }) => {\n  return (\n    <Wrapper ratio={ratio} {...props}>\n      {children}\n    </Wrapper>\n  );\n};\n","import React, { useCallback } from 'react';\nimport AspectRatioWrapper from '../../../UI/AspectRatio/AspectRatioWrapper';\nimport digits from '../../../UI/Digits/Digits';\nimport styles from './Digits.module.scss';\n\nconst Digits = React.memo(\n  ({\n    isNoting,\n    activeVal,\n    availableDigits,\n    remainingDigits,\n    digitClickedHandler,\n  }) => {\n    const genClassName = useCallback(\n      d => {\n        const classes = [styles.Digit];\n        if (d === activeVal) {\n          classes.push(styles.active);\n        }\n        if (!availableDigits.has(d)) {\n          classes.push(styles.Disabled);\n        }\n        return classes.join(' ');\n      },\n      [activeVal, availableDigits]\n    );\n\n    return (\n      <div className={`${styles.Digits} ${isNoting ? styles.isNoting : ''}`}>\n        <AspectRatioWrapper\n          className={genClassName(1)}\n          onClick={\n            availableDigits.has(1) ? () => digitClickedHandler(1) : undefined\n          }\n        >\n          {digits[1]}\n          <div className={styles.Count}>{digits[remainingDigits[1]]}</div>\n        </AspectRatioWrapper>\n        {[2, 3, 4, 5, 6, 7, 8, 9].map(d => (\n          <div\n            key={d}\n            className={genClassName(d)}\n            onClick={\n              availableDigits.has(d) ? () => digitClickedHandler(d) : undefined\n            }\n          >\n            {digits[d]}\n            <div className={styles.Count}>{digits[remainingDigits[d]]}</div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n);\n\nexport default Digits;\n","import React from 'react';\nimport Digits from './Digits/Digits';\nimport Button from '../../UI/Button/Button';\nimport styles from './Controls.module.scss';\n\nconst Controls = ({\n  cellsRecord,\n  hasPrev,\n  hasNext,\n  jump,\n  jumpToFirst,\n  jumpToLast,\n  remainingDigits,\n  activeVal,\n  availableDigits,\n  digitClickedHandler,\n  showAvail,\n  isNoting,\n  deselectHandler,\n  toggleShowAvailHandler,\n  toggleIsNotingHandler,\n  resetHandler,\n  eraseValueHandler,\n  autoNoteHandler,\n  autoPlacePointingClaimingHandler,\n  tip,\n  tipHandler,\n  changeChainStepHandler,\n}) => {\n  return (\n    <div className={styles.Controls}>\n      <div className={styles.History}>\n        <Button disabled={!hasPrev} onClick={jumpToFirst}>\n          first\n        </Button>\n        <Button disabled={!hasPrev} onClick={() => jump(-1)}>\n          prev\n        </Button>\n        <span>#{cellsRecord.idx}</span>\n        <Button disabled={!hasNext} onClick={() => jump(1)}>\n          next\n        </Button>\n        <Button disabled={!hasNext} onClick={jumpToLast}>\n          last\n        </Button>\n        <span>{cellsRecord.desc}</span>\n      </div>\n      <div className={styles.Panel}>\n        <Button onClick={resetHandler}>Reset</Button>\n        <Button onClick={eraseValueHandler}>Erase</Button>\n        <Button onClick={deselectHandler}>Deselect</Button>\n        <Button type={showAvail ? 'On' : 'Off'} onClick={toggleShowAvailHandler}>\n          Avail\n        </Button>\n        <Button type={isNoting ? 'On' : 'Off'} onClick={toggleIsNotingHandler}>\n          Note\n        </Button>\n      </div>\n      <Digits\n        isNoting={isNoting}\n        activeVal={activeVal}\n        availableDigits={availableDigits}\n        remainingDigits={remainingDigits}\n        digitClickedHandler={digitClickedHandler}\n      />\n      <div className={styles.Tools}>\n        <Button onClick={autoNoteHandler}>note</Button>\n        <Button onClick={autoPlacePointingClaimingHandler}>place/point/claim</Button>\n        <div className={styles.Tip}>\n          <Button type={tip && 'On'} onClick={tipHandler}>\n            {tip ? tip.name : 'tip'}\n          </Button>\n          {tip && tip.type === 'chain' && (\n            <>\n              <span className={styles.ChainSteper} onClick={() => changeChainStepHandler(-1)}>\n                &lt;\n              </span>\n              <span className={styles.ChainSteper} onClick={() => changeChainStepHandler(1)}>\n                &gt;\n              </span>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Controls;\n","import React from 'react';\nimport styles from './Backdrop.module.scss';\n\nconst Backdrop = ({ show, onClick, absolute = false }) => {\n  if (!show) {\n    return null;\n  }\n  const classes = [styles.Backdrop];\n  if (absolute) {\n    classes.push(styles.Absolute);\n  }\n  return <div className={classes.join(' ')} onClick={onClick} />;\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport Backdrop from '../Backdrop/Backdrop';\nimport styles from './Modal.module.scss';\n\nconst Modal = ({ show = false, close, children }) => {\n  const classes = [styles.Modal];\n  if (show) {\n    classes.push(styles.Show);\n  }\n  return (\n    <>\n      <Backdrop show={show} onClick={close} />\n      <div className={classes.join(' ')}>\n        <div className={styles.Close} onClick={close}>\n          X\n        </div>\n        {children}\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(React.memo(Modal), (prevProps, nextProps) => {\n  return !prevProps.show && !nextProps.show;\n});\n","import React from 'react';\nimport styles from './Spinner.module.css';\n\nconst Spinner = () => {\n  return <div className={styles.Loader}>Loading...</div>;\n};\n\nexport default Spinner;\n","import React from 'react';\nimport styles from './Loading.module.scss';\nimport Backdrop from '../Backdrop/Backdrop';\nimport Spinner from '../Spinner/Spinner';\n\nexport default () => {\n  return (\n    <>\n      <Backdrop show absolute />\n      <div className={styles.Spinner}>\n        <Spinner />\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport Button from '../../components/UI/Button/Button';\nimport Board from '../../components/Sudoku/Board/Board';\nimport Controls from '../../components/Sudoku/Controls/Controls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Loading from '../../components/UI/Loading/Loading';\nimport QRCode from 'qrcode.react';\nimport styles from './Main.module.scss';\nimport * as sudokus from '../../libs/sudoku';\nimport { Notes } from '../../libs/sudoku';\nimport { getPosition, findClosedPosPair } from '../../libs/position';\nimport { console } from '../../libs/utils';\n\nconst Sudoku = ({ /** @type {sudokus.Sudoku} */ sudoku = new sudokus.Sudoku(), startNewGameHandler, emptyHandler }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [showShare, setShowShare] = useState(false);\n  const [, setChanged] = useState(0);\n  useEffect(() => {\n    sudoku.subscribe(setChanged);\n    return () => {\n      sudoku.unsubscribe(setChanged);\n    };\n  }, [sudoku]);\n\n  // {pos:[row, col], val:0}\n  const [activeState, setActiveState] = useState({ pos: null, val: 0 });\n  const { pos: activePos, val: activeVal } = activeState;\n  const [showAvail, setShowAvail] = useState(false);\n  const [isNoting, setIsNoting] = useState(true);\n  const [tip, setTip] = useState(null);\n  const [chainStep, setChainStep] = useState(2);\n\n  // calculated states\n  const cellsRecord = sudoku.cellsRecord;\n  const { cells } = cellsRecord;\n  // cells dependency is needed for memo check\n  const availableDigits = useMemo(() => sudoku.calcAvailableDigits(activePos, cells), [activePos, sudoku, cells]);\n  const availablePositions = useMemo(() => sudoku.calcAvailablePositions(activeVal, cells), [activeVal, sudoku, cells]);\n  const remainingDigits = useMemo(() => sudoku.calcRemainingDigits(cells), [sudoku, cells]);\n\n  // handlers\n  const cellClickedHandler = useCallback(\n    pos => {\n      if (activeVal !== 0) {\n        // place or note\n        sudoku.updateCellValue(isNoting, pos, activeVal);\n      } else {\n        // select position\n        setActiveState(({ pos: curActivePos }) => {\n          if (curActivePos) {\n            if (pos === curActivePos) {\n              // cancel current selected\n              pos = null;\n            }\n          }\n          return { pos, val: 0 };\n        });\n      }\n    },\n    [activeVal, isNoting, sudoku]\n  );\n\n  const digitClickedHandler = useCallback(\n    (d, force = false) => {\n      // force active specified digit\n      if (!force) {\n        if (!availableDigits.has(d)) {\n          return;\n        }\n\n        if (activePos) {\n          // place or note\n          sudoku.updateCellValue(isNoting, activePos, d);\n        } else {\n          // active a value\n          setActiveState(({ val: curActiveVal }) => {\n            let val = d;\n            if (curActiveVal === d) {\n              // cancel active\n              val = 0;\n            }\n            return { pos: null, val };\n          });\n        }\n      } else {\n        // active a value\n        setActiveState({ pos: null, val: d });\n      }\n    },\n    [activePos, availableDigits, isNoting, sudoku]\n  );\n\n  const deselectHandler = useCallback(() => {\n    setActiveState({ pos: null, val: 0 });\n  }, []);\n\n  const resetHandler = useCallback(() => {\n    if (!window.confirm || window.confirm('Are you sure to reset?')) {\n      sudoku.reset();\n      deselectHandler();\n    }\n  }, [deselectHandler, sudoku]);\n\n  const eraseValueHandler = useCallback(() => {\n    if (activePos) {\n      sudoku.updateCellValue(false, activePos, Notes.new());\n    }\n  }, [activePos, sudoku]);\n\n  const toggleShowAvailHandler = useCallback(() => {\n    setShowAvail(showAvail => !showAvail);\n  }, []);\n\n  const toggleIsNotingHandler = useCallback(() => {\n    setIsNoting(isNoting => !isNoting);\n  }, []);\n\n  const autoNoteHandler = useCallback(() => {\n    sudoku.autoNote();\n  }, [sudoku]);\n\n  const autoPlacePointingClaimingHandler = useCallback(() => {\n    sudoku.autoPlacePointingClaiming();\n  }, [sudoku]);\n\n  const tipHandler = useCallback(() => {\n    if (tip) {\n      // clear\n      setTip(null);\n\n      // handle tip\n      sudoku.handleTip(tip);\n    } else {\n      // find tip\n      setIsLoading(true);\n      setTimeout(() => {\n        const t = sudoku.findTip();\n        setIsLoading(false);\n        if (t) {\n          console.log('tip:', t);\n          setTip(t);\n          if (t.type === 'chain') {\n            setChainStep(t.chain.length);\n          }\n        }\n      }, 0);\n    }\n    // deselect\n    deselectHandler();\n  }, [deselectHandler, sudoku, tip]);\n\n  const moveActivePos = useCallback(\n    (dRow, dCol) => {\n      if (activePos) {\n        setActiveState(({ pos: { row: curRow, col: curCol } }) => {\n          const pos = getPosition((curRow + 9 + dRow) % 9, (curCol + 9 + dCol) % 9);\n          return { val: 0, pos };\n        });\n      }\n    },\n    [activePos]\n  );\n\n  const moveActiveVal = useCallback(\n    d => {\n      if (activeVal) {\n        setActiveState(({ val: curVal }) => {\n          const val = ((curVal - 1 + d + 9) % 9) + 1;\n          return { pos: null, val };\n        });\n      }\n    },\n    [activeVal]\n  );\n\n  const marks = useMemo(() => {\n    if (tip) {\n      if (tip.type === 'group') {\n        const { cls, domain, poses, notes } = tip;\n        if (cls === 0) {\n          // naked\n          return { effect: { [domain + 's']: new Set([tip[domain]]), notes }, highlights: { poses, notes } };\n        } else if (cls === 1) {\n          // hidden\n          return { domain: { [domain + 's']: new Set([tip[domain]]), notes }, highlights: { poses, notes } };\n        }\n      } else if (tip.type === 'X-Group') {\n        const { domain, rows, cols, blocks, poses, d } = tip;\n        const notes = new Set([d]);\n        if (domain === 'row') {\n          return { domain: { rows }, effect: { cols, blocks, notes }, highlights: { poses, notes } };\n        } else if (domain === 'col') {\n          return { domain: { cols }, effect: { rows, blocks, notes }, highlights: { poses, notes } };\n        } else if (domain === 'block') {\n          return { domain: { blocks }, effect: { rows, cols, notes }, highlights: { poses, notes } };\n        }\n      } else if (tip.type === 'chain') {\n        const { chain, effectedPoses, d, effectedDs } = tip;\n        const curChain = chain.slice(0, chainStep);\n        const allPoses = [];\n        curChain.forEach(({ pos }) => {\n          if (pos.isGroup) {\n            pos.poses.forEach(p => allPoses.push(p));\n          } else {\n            allPoses.push(pos);\n          }\n        });\n        const poses = new Set(allPoses);\n        const withoutOutlinePoses = new Set(allPoses);\n        // remove head and tail\n        sudokus.getRealPoses(chain[0].pos).forEach(p => withoutOutlinePoses.delete(p));\n        sudokus.getRealPoses(chain[chain.length - 1].pos).forEach(p => withoutOutlinePoses.delete(p));\n\n        const effectedNotes = effectedDs ? effectedDs : new Set([d]);\n        const posNotes = {};\n        const posSubNotes = {};\n        for (const n of curChain) {\n          let _posNotes = posNotes;\n          if (n.d !== d) {\n            _posNotes = posSubNotes;\n          }\n          const { pos } = n;\n          for (const p of sudokus.getRealPoses(pos)) {\n            const subNotes = _posNotes[p] || new Set();\n            _posNotes[p] = subNotes;\n            subNotes.add(n.d);\n          }\n        }\n\n        const frames = [];\n\n        // frames\n        curChain.forEach(({ pos }) => {\n          if (pos.isGroup) {\n            const { key, domain, block, row, col } = pos;\n            frames.push({ key, domain: [...domain][0], block, row, col });\n          }\n        });\n\n        // arrows\n        const arrows = [];\n        let startNode = curChain[0];\n        for (const endNode of curChain.slice(1)) {\n          const [startPos, endPos] = findClosedPosPair(\n            startNode.pos.isGroup ? startNode.pos.poses : [startNode.pos],\n            endNode.pos.isGroup ? endNode.pos.poses : [endNode.pos]\n          );\n\n          arrows.push({\n            startPos,\n            startDigit: startNode.d,\n            endPos,\n            endDigit: endNode.d,\n            type: endNode.val ? 'solid' : 'dashed',\n          });\n          startNode = endNode;\n        }\n        return {\n          frames,\n          arrows,\n          effect: { poses: effectedPoses, notes: effectedNotes },\n          highlights: { poses, posNotes, posSubNotes, withoutOutlinePoses },\n        };\n      }\n    }\n  }, [chainStep, tip]);\n\n  const changeChainStepHandler = useCallback(\n    d => {\n      if (tip && tip.type === 'chain') {\n        const len = tip.chain.length;\n        console.log(chainStep, len, ((chainStep - 1 + d + len) % len) + 1);\n        setChainStep(s => {\n          return ((s - 1 + d + len) % len) + 1;\n        });\n      }\n    },\n    [chainStep, tip]\n  );\n\n  // event listeners\n  useEffect(() => {\n    const keydownHandler = e => {\n      console.log(e);\n      // TODO: handler other shortcut keys\n      if (e.code.startsWith('Digit')) {\n        const d = parseInt(e.key);\n        digitClickedHandler(d);\n      } else if (e.key === 'N') {\n        startNewGameHandler();\n      } else if (e.key === 'n') {\n        if (e.ctrlKey) {\n          autoNoteHandler();\n        } else {\n          toggleIsNotingHandler();\n        }\n      } else if (e.key === 'b') {\n        if (!activeVal && !activePos) {\n          cellClickedHandler(getPosition(4, 4));\n        }\n      } else if (e.key === 'd' || e.key === 'Escape') {\n        deselectHandler();\n      } else if (e.key === 't') {\n        tipHandler();\n      } else if (e.key === 'p') {\n        autoPlacePointingClaimingHandler();\n      } else if (e.key === 'h' || e.key === 'ArrowLeft') {\n        if (activePos) {\n          moveActivePos(0, -1);\n        } else if (activeVal) {\n          moveActiveVal(-1);\n        } else {\n          sudoku.jumpToFirst();\n        }\n      } else if (e.key === 'l' || e.key === 'ArrowRight') {\n        if (activePos) {\n          moveActivePos(0, 1);\n        } else if (activeVal) {\n          moveActiveVal(1);\n        } else {\n          sudoku.jumpToLast();\n        }\n      } else if (e.key === 'j' || e.key === 'ArrowDown') {\n        if (activePos) {\n          moveActivePos(1, 0);\n        } else if (activeVal) {\n          moveActiveVal(-1);\n        } else {\n          sudoku.jump(-1);\n        }\n      } else if (e.key === 'k' || e.key === 'ArrowUp') {\n        if (activePos) {\n          moveActivePos(-1, 0);\n        } else if (activeVal) {\n          moveActiveVal(1);\n        } else {\n          sudoku.jump(1);\n        }\n      } else {\n        return;\n      }\n      e.preventDefault();\n    };\n    document.addEventListener('keydown', keydownHandler);\n\n    return () => {\n      document.removeEventListener('keydown', keydownHandler);\n    };\n  }, [\n    activePos,\n    activeVal,\n    autoNoteHandler,\n    autoPlacePointingClaimingHandler,\n    cellClickedHandler,\n    deselectHandler,\n    digitClickedHandler,\n    moveActivePos,\n    moveActiveVal,\n    startNewGameHandler,\n    sudoku,\n    tipHandler,\n    toggleIsNotingHandler,\n  ]);\n\n  useEffect(() => {\n    // clear tip if values changed\n    setTip(null);\n  }, [cells]);\n\n  let shareContent = null;\n  if (showShare) {\n    const url = new URL(window.location);\n    const initialPuzzle = sudoku.initialPuzzle;\n    const curPuzzle = sudoku.stringify();\n    url.search = '?puzzle=' + curPuzzle;\n    shareContent = (\n      <div className={styles.QRCode}>\n        <QRCode size={256} value={url.toString()} />\n        <p>{initialPuzzle}</p>\n        <p>{curPuzzle}</p>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {isLoading && <Loading />}\n      <Modal show={showShare} close={() => setShowShare(false)}>\n        {shareContent}\n      </Modal>\n      <div className={styles.Menu}>\n        <Button onClick={startNewGameHandler}>New</Button>\n        <Button onClick={emptyHandler}>Empty</Button>\n        <Button onClick={() => setShowShare(true)}>Share</Button>\n      </div>\n      <div className={styles.Board}>\n        <Board\n          cells={cells}\n          availablePositions={availablePositions}\n          activeVal={activeVal}\n          activePos={activePos}\n          cellClickedHandler={cellClickedHandler}\n          showAvail={showAvail}\n          isNoting={isNoting}\n          marks={marks}\n        />\n      </div>\n      <div className={styles.Controls}>\n        <Controls\n          cellsRecord={cellsRecord}\n          hasPrev={sudoku.hasPrev}\n          hasNext={sudoku.hasNext}\n          jump={sudoku.jump}\n          jumpToFirst={sudoku.jumpToFirst}\n          jumpToLast={sudoku.jumpToLast}\n          remainingDigits={remainingDigits}\n          activeVal={activeVal}\n          availableDigits={availableDigits}\n          digitClickedHandler={digitClickedHandler}\n          showAvail={showAvail}\n          isNoting={isNoting}\n          resetHandler={resetHandler}\n          eraseValueHandler={eraseValueHandler}\n          deselectHandler={deselectHandler}\n          toggleShowAvailHandler={toggleShowAvailHandler}\n          toggleIsNotingHandler={toggleIsNotingHandler}\n          autoNoteHandler={autoNoteHandler}\n          autoPlacePointingClaimingHandler={autoPlacePointingClaimingHandler}\n          tip={tip}\n          tipHandler={tipHandler}\n          changeChainStepHandler={changeChainStepHandler}\n        />\n      </div>\n      <div className={styles.Info}></div>\n    </>\n  );\n};\n\nexport default Sudoku;\n","import React, { useState, useCallback, useRef } from 'react';\nimport Button from '../../components/UI/Button/Button';\nimport styles from './NewGame.module.scss';\nimport { useEffect } from 'react';\n\nconst samplePuzzle = `901002708\n570060000\n000000004\n000000000\n700421900\n000098030\n300506070\n009003000\n000080051`;\n\nconst NewGame = ({ cancelNewGameHandler, newGameHandler, error }) => {\n  const [puzzle, setPuzzle] = useState('');\n  const puzzleChangedHandler = useCallback(event => {\n    setPuzzle(event.target.value);\n  }, []);\n\n  const textareaRef = useRef();\n  useEffect(() => {\n    textareaRef.current.focus();\n  }, []);\n\n  // event listeners\n  useEffect(() => {\n    const keydownHandler = e => {\n      // console.log(e);\n      if (e.key === 'Escape') {\n        cancelNewGameHandler();\n      } else if (e.key === 'Enter' && e.shiftKey) {\n        newGameHandler(puzzle);\n      } else {\n        return;\n      }\n      e.preventDefault();\n    };\n    document.addEventListener('keydown', keydownHandler);\n\n    return () => {\n      document.removeEventListener('keydown', keydownHandler);\n    };\n  }, [cancelNewGameHandler, newGameHandler, puzzle]);\n\n  return (\n    <div className={styles.NewGame}>\n      <h1>input a new puzzle</h1>\n      {error && <div className={styles.Error}>{error.message}</div>}\n      <textarea\n        ref={textareaRef}\n        id=\"puzzle\"\n        name=\"puzzle\"\n        inputMode=\"numeric\"\n        onChange={puzzleChangedHandler}\n        value={puzzle}\n        placeholder={samplePuzzle}\n      />\n      <Button onClick={cancelNewGameHandler}>Cancel</Button>\n      <Button onClick={() => newGameHandler(puzzle)}>Done</Button>\n    </div>\n  );\n};\n\nexport default NewGame;\n","import React, { useState, useCallback } from 'react';\nimport Main from './Main';\nimport NewGame from './NewGame';\nimport styles from './Sudoku.module.scss';\nimport * as sudokus from '../../libs/sudoku';\n\nconst Sudoku = () => {\n  const [sudoku, setSudoku] = useState(() => {\n    // get puzzle from url search parameter: puzzle\n    const puzzle = new URLSearchParams(window.location.search).get('puzzle');\n    try {\n      return new sudokus.Sudoku(puzzle);\n    } catch (error) {\n      return new sudokus.Sudoku();\n    }\n  });\n  const [isNewGame, setIsNewGame] = useState(false);\n  const [puzzleError, setPuzzleError] = useState(null);\n\n  // handlers\n  const startNewGameHandler = useCallback(() => {\n    setIsNewGame(true);\n  }, []);\n  const cancelNewGameHandler = useCallback(() => {\n    setIsNewGame(false);\n  }, []);\n\n  const newGameHandler = useCallback(puzzle => {\n    try {\n      setSudoku(new sudokus.Sudoku(puzzle));\n      setIsNewGame(false);\n    } catch (error) {\n      setPuzzleError(error);\n    }\n  }, []);\n\n  const emptyHandler = useCallback(() => {\n    newGameHandler();\n  }, [newGameHandler]);\n\n  let content = null;\n  if (isNewGame) {\n    content = (\n      <NewGame cancelNewGameHandler={cancelNewGameHandler} newGameHandler={newGameHandler} error={puzzleError} />\n    );\n  } else {\n    content = <Main sudoku={sudoku} startNewGameHandler={startNewGameHandler} emptyHandler={emptyHandler} />;\n  }\n\n  return <div className={styles.Sudoku}>{content}</div>;\n};\n\nexport default Sudoku;\n","import React from 'react';\nimport Sudoku from './containers/Sudodu/Sudoku';\n\nexport default function App() {\n  return <Sudoku />;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}