{"version":3,"sources":["libs/utils.js","components/Sudoku/Board/Block/Cell/Cell.module.scss","components/UI/Digits/Digits.module.scss","components/Sudoku/Controls/Controls.module.scss","components/Sudoku/Controls/Digits/Digits.module.scss","containers/Sudodu/Main.module.scss","components/Sudoku/Board/Block/Block.module.scss","components/Sudoku/Board/Board.module.scss","components/UI/Modal/Modal.module.scss","components/UI/Button/Button.module.scss","components/UI/Backdrop/Backdrop.module.scss","containers/Sudodu/NewGame.module.scss","components/Sudoku/Board/Arrow.module.scss","components/UI/Loading/Loading.module.scss","components/UI/Spinner/Spinner.module.css","containers/Sudodu/Sudoku.module.scss","components/UI/Button/Button.js","components/UI/Digits/Digits.js","libs/position.js","libs/sudoku.js","components/Sudoku/Board/Block/Cell/Cell.js","components/Sudoku/Board/Block/Block.js","components/UI/AspectRatio/AspectRatioBox.js","components/Sudoku/Board/calc.js","components/Sudoku/Board/Arrow.js","components/Sudoku/Board/Frame.js","components/Sudoku/Board/Board.js","components/UI/AspectRatio/AspectRatioWrapper.js","components/Sudoku/Controls/Digits/Digits.js","components/Sudoku/Controls/Controls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Spinner/Spinner.js","components/UI/Loading/Loading.js","containers/Sudodu/Main.js","containers/Sudodu/NewGame.js","containers/Sudodu/Sudoku.js","App.js","serviceWorker.js","index.js"],"names":["combx","comb","findNGroupFromLinks","nilFunc","d","n","k","i","res","push","f","links","order","options","checkClear","s","link","start","end","v","ends","Set","add","points","Object","values","xpoints","filter","p","size","length","idxes","starts","idx","point","forEach","cleared","has","e","window","global","console","group","groupEnd","log","error","getAttrDefault","obj","name","defVal","undefined","shuffleArray","array","j","Math","floor","random","module","exports","Button","type","onClick","disabled","children","classes","styles","className","join","generateDigit","digitClass","c","color","digitClassName","style","backgroundColor","Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine","getDigitLocalPos","_baseArray","blockShape","indices","blocks","rows","cols","rowColToBlock","row","col","blockRowColIndex","blockRows","block","blockCols","_rowPositions","map","key","toString","this","rowPositions","_rowRelatedPositions","r","pos","_colPositions","colPositions","_colRelatedPositions","_blockPositions","b","_blocFlattenkPositions","blockPoses","_blockRelatedPositions","_","_relatedPositions","getPosition","getPosBlock","getBlockPositions","getBlockFlattenPositions","getRowPositions","getColPositions","getRelatedBlockPositions","getRelatedRowPositions","getRelatedColPositions","getRelatedPositions","flattenPositions","flat","_keyPositionMapping","getPositionByKey","mapPositionsTo","getCell","cells","_intersection","a","sb","getCommonRelatedPositions","poses","rposes","calcPosDistance","aPos","bPos","dRow","dCol","findClosedPosPair","aPoses","bPoses","minDistance","Number","MAX_VALUE","searchChain","findNGroup","findNXGroup","digits","Notes","value","notes","_base","is","ns","Sudoku","puzzle","jumpTo","revert","_historyLowerBound","_curCellsIdx","_cellsHistory","_cut","_rollback","_notify","revertTo","jump","steps","curIdx","jumpToFirst","jumpToLast","lastIdx","_shouldNotify","subscribers","_setPuzzle","defaultPuzzle","_txCells","_setCells","parse","stringify","_checkComplete","slice","desc","placedAsOrigin","withNotes","originAsPlaced","origin","isEmpty","entries","rpos","delete","1","2","3","4","5","6","7","8","9","curCells","getCurCells","cell","_txSetCellValue","_startTx","action","payload","actions","RESET","NOTE","_note","AUTO_NOTE","_autoNote","AUTO_PLACE","_autoPlace","AUTO_POINTING","_autoPointing","AUTO_CLAIMING","_autoClaiming","AUTO_PLACE_POINTING_CLAIMING","_autoPlacePointingClaiming","UPDATE_CELL_VALUE","_updateCellValue","ELIMINATE_GROUP","_eliminateGroup","ELIMINATE_XGROUP","_eliminateXGroup","ELIMINATE_CHAIN","_eliminateChain","ELIMINATE_TRIAL_ERROR","_eliminateTrialError","HANDLE_TIP","_handleTip","commit","_handlActions","_commit","dispatch","isNoting","tip","domain","getPositions","positions","errDigits","_isComplete","_setCellValue","new","calcAvailableDigits","count","placed","cls","br","bc","rb","cb","_noteCellValue","_placeCellValue","oldCell","otherPoses","otherPositions","effect","trial","findGroup","findXGroup","findChain","findTrialError","eliminateGroup","eliminateXGroup","eliminateChain","eliminateTrialError","_disableNotify","startIdx","maxDepth","tryTip","deepTried","updateCellValue","autoPlacePointingClaiming","err","_checkValidity","findTip","handleTip","_enableNotify","endIdx","includedCells","h","dGroupPoses","xPositions","xPoses","blockDigitPoses","val","digitPoses","sblock","digitGroups","sd","parseInt","groupPoses","newGroupPos","groupPos","gp","getDigitGroupPoses","dLinks","dPoses","ds","getPosLink","getGroupPosLink","otherDs","false","true","isGroup","getDigitPosesAndLinks","maxLen","tryCellLinks","tryGroupLinks","getPoses","dRes","maxLength","startNode","extraData","td","chain","prepareChainResult","effectedPoses","newValue","keep","keepDs","Error","flattenCells","match","cellPattern","flattenCellValues","startsWith","endsWith","split","valuePattern","test","Array","from","startPos","endNode","endPos","hasMulti","hasGroup","node","parts","checkExistAndEqual","getRealPoses","cpos","effectedDs","targets","tpos","chainHasNode","nextNode","cd","hasCommon","getOtherRowGroupPositions","getOtherColGroupPositions","getOtherBlockGroupPositions","filteredGroupPoses","ok","strongTargets","weakTargets","getOtherGroupPositions","strongPos","opos","spos","filterPoses","getPositionsLinks","note","getAToBLinks","getEnd","getRowToColLinks","getRowToBlockLinks","getColToBlockLinks","getPositionsForDigit","types","rc","cr","rcLinks","isXWing","rbLinks","cbLinks","noteClassName","activeVal","highlighted","effectMarked","marks","Note","ActiveValue","src","highlights","posNotes","posSubNotes","subNotes","MarkedNoteValue","MarkedValue","Effected","Cell","React","memo","activePos","available","showAvail","content","isSelected","activeRow","activeCol","activeBlock","Selected","Related","clickable","Available","Place","domainMarked","MarkedHighlight","withoutOutlinePoses","WithoutOutline","MarkedDomain","MarkedEffect","RowNotes","Value","Placed","Block","availableCells","cellClickedHandler","isOdd","Odd","Row","Box","styled","div","width","ratio","Content","fixed","scroll","getCoord","localRow","Arrow","attrs","x","y","distance","deg","borderTop","height","transform","dd","startDigit","endDigit","sc","calc","ec","sx","sy","dx","dy","sqrt","acos","PI","Pointer","Frame","ex","ey","top","left","right","bottom","startRow","startCol","endRow","endCol","Board","isComplete","availablePositions","SudokuBoard","Complete","AspectRatioBox","frames","frame","arrows","arrow","Wrapper","props","Digits","availableDigits","remainingDigits","digitClickedHandler","genClassName","useCallback","Digit","active","Disabled","AspectRatioWrapper","Count","Controls","cellsRecord","hasPrev","hasNext","deselectHandler","toggleShowAvailHandler","toggleIsNotingHandler","resetHandler","eraseValueHandler","autoNoteHandler","autoPlacePointingClaimingHandler","tipHandler","cancelTipHandler","changeChainStepHandler","jumpToTrailStartHandler","History","Panel","Tools","Tip","ChainSteper","Backdrop","show","absolute","Absolute","close","Modal","Show","Close","prevProps","nextProps","Spinner","Loader","sudoku","sudokus","startNewGameHandler","newGameHandler","emptyHandler","useState","isLoading","setIsLoading","showShare","setShowShare","setChanged","useEffect","subscribe","unsubscribe","activeState","setActiveState","setShowAvail","setIsNoting","setTip","chainStep","setChainStep","useMemo","calcAvailablePositions","calcRemainingDigits","startGameHandler","editGameHandler","curActivePos","force","curActiveVal","confirm","reset","autoNote","clearHistoryLowerBound","setTimeout","t","setHistoryLowerBound","moveActivePos","curRow","curCol","moveActiveVal","curChain","allPoses","effectedNotes","_posNotes","len","keydownHandler","code","ctrlKey","document","addEventListener","removeEventListener","shareContent","url","URL","location","initialPuzzle","curPuzzle","search","QRCode","Loading","Menu","Info","NewGame","cancelNewGameHandler","setPuzzle","puzzleChangedHandler","event","target","textareaRef","useRef","current","focus","shiftKey","preventDefault","message","ref","id","inputMode","onChange","placeholder","URLSearchParams","get","setSudoku","isNewGame","setIsNewGame","puzzleError","setPuzzleError","Main","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","process","href","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ed59667c.chunk.js","sourcesContent":["const debug = process.env.NODE_ENV !== 'production';\nconst nilFunc = () => {};\n\nfunction* combx(d, n, k) {\n  if (n < k) {\n  } else if (k === 1) {\n    for (let i = d; i < n + d; i++) {\n      yield [i];\n    }\n  } else if (n === k) {\n    const res = [];\n    for (let i = d; i < n + d; i++) {\n      res.push(i);\n    }\n    yield res;\n  } else {\n    // with 0\n    for (const res of combx(d + 1, n - 1, k - 1)) {\n      yield [d, ...res];\n    }\n    // without 0\n    yield* combx(d + 1, n - 1, k);\n  }\n}\n\nexport function* comb(n, k) {\n  yield* combx(0, n, k);\n}\n\nexport function* findNGroupFromLinks(links, n, order = 0, options = { checkClear: true }) {\n  const s = {};\n  for (const link of links) {\n    const start = link[order];\n    const end = link[(order + 1) % 2];\n    const v = s[start] || { start, ends: new Set() };\n    v.ends.add(end);\n    s[start] = v;\n  }\n  const points = Object.values(s);\n  const xpoints = points.filter(p => p.ends.size <= n);\n  if (options.checkClear && points.length <= n) {\n    // only return group if count(starts) > n\n    return;\n  }\n\n  for (const idxes of comb(xpoints.length, n)) {\n    // check\n    const starts = new Set();\n    const ends = new Set();\n    for (const idx of idxes) {\n      const point = xpoints[idx];\n      starts.add(point.start);\n      point.ends.forEach(ends.add, ends);\n      if (ends.size > n) {\n        break;\n      }\n    }\n    if (ends.size === n) {\n      let cleared = options.checkClear;\n      if (cleared) {\n        // n is 1, no need to check.\n        // check if group is cleared\n        for (const p of points.filter(p => !starts.has(p.start))) {\n          if ([...p.ends].filter(e => !ends.has(e)).length < p.ends.size) {\n            // other starts has end in ends\n            // need clear\n            cleared = false;\n            break;\n          }\n        }\n      }\n\n      if (!cleared) {\n        yield [starts, ends];\n      }\n    }\n  }\n}\n\nconst _store = {};\nexport const memorize = f => (...args) => {\n  if (_store[f]) {\n    _store[f] = { args: [], res: undefined };\n  }\n  const data = _store[f];\n  if (!(data.args.length === args.length && data.args.reduce((r, arg, idx) => r && Object.is(arg, args[idx]), true))) {\n    data.args = args;\n    data.res = f(...args);\n  }\n  return data.res;\n};\n\nconst _console = (window || global || {}).console || {};\n\nexport const console = {\n  group: (debug && _console.group) || nilFunc,\n  groupEnd: (debug && _console.groupEnd) || nilFunc,\n  log: (debug && _console.log) || nilFunc,\n  error: (debug && _console.error) || nilFunc,\n};\n\nexport const getAttrDefault = (obj, name, defVal) => {\n  if (obj[name] === undefined) {\n    obj[name] = defVal;\n  }\n  return obj[name];\n};\nexport function shuffleArray(array) {\n  const res = [...array];\n  for (let i = res.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [res[i], res[j]] = [res[j], res[i]];\n  }\n  return res;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Value\":\"Cell_Value__1lDbW\",\"Notes\":\"Cell_Notes__10ap7\",\"Related\":\"Cell_Related__ET6Lg\",\"Available\":\"Cell_Available__3vvqK\",\"Place\":\"Cell_Place__3TPHN\",\"Note\":\"Cell_Note__2U2fC\",\"MarkedDomain\":\"Cell_MarkedDomain__31hFJ\",\"MarkedEffect\":\"Cell_MarkedEffect___usON\",\"MarkedHighlight\":\"Cell_MarkedHighlight__2O1xC\",\"WithoutOutline\":\"Cell_WithoutOutline__35g8t\",\"ActiveValue\":\"Cell_ActiveValue__3McOV\",\"Placed\":\"Cell_Placed__3HOvj\",\"Selected\":\"Cell_Selected__2LsAU\",\"MarkedValue\":\"Cell_MarkedValue__dMEee\",\"MarkedNoteValue\":\"Cell_MarkedNoteValue__24o3W\",\"Effected\":\"Cell_Effected__HnLYk\",\"RowNotes\":\"Cell_RowNotes__1QNhn\",\"PlacedValue\":\"Cell_PlacedValue__2vP-2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Zero\":\"Digits_Zero__2W6xd\",\"One\":\"Digits_One__-wXsd\",\"Two\":\"Digits_Two__5WRCG\",\"Three\":\"Digits_Three__1GKk-\",\"Four\":\"Digits_Four__1ahFU\",\"Five\":\"Digits_Five__3m1dx\",\"Six\":\"Digits_Six__kvriF\",\"Seven\":\"Digits_Seven__2_nmU\",\"Eight\":\"Digits_Eight__GNMw3\",\"Nine\":\"Digits_Nine__3u9wd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Controls\":\"Controls_Controls__1Accx\",\"History\":\"Controls_History__2GRXF\",\"Panel\":\"Controls_Panel__1AK4m\",\"Tools\":\"Controls_Tools__1-fbY\",\"Tip\":\"Controls_Tip__2IHiE\",\"ChainSteper\":\"Controls_ChainSteper__RRrIh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Digits\":\"Digits_Digits__3-KZF\",\"Digit\":\"Digits_Digit__1MXW9\",\"digit\":\"Digits_digit__3Mpxe\",\"Disabled\":\"Digits_Disabled__1N4Jw\",\"active\":\"Digits_active__2AexO\",\"Count\":\"Digits_Count__Eq4Q5\",\"isNoting\":\"Digits_isNoting__-OBTK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Main_Menu__3YGZL\",\"Board\":\"Main_Board__3XJet\",\"Controls\":\"Main_Controls__1MSdo\",\"Info\":\"Main_Info__2888w\",\"QRCode\":\"Main_QRCode__1jj5B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Block\":\"Block_Block__1kJyh\",\"Odd\":\"Block_Odd__2xFZf\",\"Row\":\"Block_Row__11Olq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SudokuBoard\":\"Board_SudokuBoard__3cPYp\",\"Row\":\"Board_Row__2r5V5\",\"Complete\":\"Board_Complete__UekFD\",\"SudokuComplete\":\"Board_SudokuComplete__13blN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__31OI7\",\"Show\":\"Modal_Show__d05bc\",\"Close\":\"Modal_Close__IQjCe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"Warn\":\"Button_Warn__1cddQ\",\"On\":\"Button_On__3d77T\",\"Off\":\"Button_Off__R9f9J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__Vem4f\",\"Absolute\":\"Backdrop_Absolute__Z8lxG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewGame\":\"NewGame_NewGame__2hKIv\",\"Error\":\"NewGame_Error__mao55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pointer\":\"Arrow_Pointer__1rYd7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Loading_Spinner__1CFco\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load2\":\"Spinner_load2__2gkgc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sudoku\":\"Sudoku_Sudoku__3acWS\"};","import React from 'react';\nimport styles from './Button.module.scss';\n\nconst Button = ({ type, onClick, disabled = false, children }) => {\n  const classes = [styles.Button];\n  if (type) {\n    classes.push(styles[type]);\n  }\n  return (\n    <button className={classes.join(' ')} disabled={disabled} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport styles from './Digits.module.scss';\n\nconst styleColor = c => (c ? { backgroundColor: c } : {});\n\nconst generateDigit = digitClass => ({\n  color,\n  digitClassName = 'digit',\n  className = '',\n  children,\n}) => (\n  <div\n    className={`${digitClass} ${digitClassName} ${className}`}\n    style={styleColor(color)}\n  >\n    {children}\n  </div>\n);\n\nexport const Zero = generateDigit(styles.Zero);\nexport const One = generateDigit(styles.One);\nexport const Two = generateDigit(styles.Two);\nexport const Three = generateDigit(styles.Three);\nexport const Four = generateDigit(styles.Four);\nexport const Five = generateDigit(styles.Five);\nexport const Six = generateDigit(styles.Six);\nexport const Seven = generateDigit(styles.Seven);\nexport const Eight = generateDigit(styles.Eight);\nexport const Nine = generateDigit(styles.Nine);\n\nexport default [\n  <Zero />,\n  <One />,\n  <Two />,\n  <Three />,\n  <Four />,\n  <Five />,\n  <Six />,\n  <Seven />,\n  <Eight />,\n  <Nine />,\n];\n","export const getDigitLocalPos = d => [Math.floor((d - 1) / 3), (d - 1) % 3];\nconst _baseArray = [0, 1, 2, 3, 4, 5, 6, 7, 8];\nexport const blockShape = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n];\n\nexport const indices = _baseArray;\nexport const blocks = _baseArray;\nexport const rows = _baseArray;\nexport const cols = _baseArray;\n\n// (row, col)->block\nexport const rowColToBlock = (row, col) => Math.floor(row / 3) * 3 + Math.floor(col / 3);\n// (row, col)-> index in block\nexport const blockRowColIndex = (row, col) => (row % 3) * 3 + (col % 3);\n// rows of block\nexport const blockRows = block => {\n  const start = Math.floor(block / 3) * 3;\n  return [start, start + 1, start + 2];\n};\n// cols of block\nexport const blockCols = block => {\n  const start = (block % 3) * 3;\n  return [start, start + 1, start + 2];\n};\n\nconst _rowPositions = _baseArray.map(row =>\n  _baseArray.map(col => ({\n    key: `r${row}c${col}`,\n    idx: row * 9 + col,\n    row,\n    col,\n    block: rowColToBlock(row, col),\n    toString() {\n      return this.key;\n    },\n  }))\n);\nexport const rowPositions = _rowPositions;\n\n// row positions without col\nconst _rowRelatedPositions = _baseArray.map(r => _baseArray.map(c => _rowPositions[r].filter(pos => pos.col !== c)));\nconst _colPositions = _baseArray.map(c => _baseArray.map(r => _rowPositions[r][c]));\nexport const colPositions = _colPositions;\n// col positions without row\nconst _colRelatedPositions = _baseArray.map(c => _baseArray.map(r => _colPositions[c].filter(pos => pos.row !== r)));\n\n// block positions 3x3\nconst _blockPositions = _baseArray.map(b => blockRows(b).map(row => _rowPositions[row].filter(pos => pos.block === b)));\n\nconst _blocFlattenkPositions = _baseArray.map(b => {\n  const blockPoses = _blockPositions[b];\n  return [...blockPoses[0], ...blockPoses[1], ...blockPoses[2]];\n});\n// block positions without it's row/col index\nconst _blockRelatedPositions = _baseArray.map(b =>\n  _baseArray.map(i => _blocFlattenkPositions[b].filter((_, idx) => idx !== i))\n);\n\n// positions without row/col\nconst _relatedPositions = _baseArray.map(r =>\n  _baseArray.map(c => {\n    const b = rowColToBlock(r, c);\n    const res = [];\n    _rowPositions.forEach(rows =>\n      rows.forEach(pos => {\n        const { row, col, block } = pos;\n        if (r === row && c === col && b === block) {\n          return;\n        }\n        if (r === row || c === col || b === block) {\n          res.push(pos);\n        }\n      })\n    );\n    return res;\n  })\n);\n\nexport const getPosition = (row, col) => _rowPositions[row][col];\n\nexport const getPosBlock = (row, col) => _rowPositions[row][col].block;\n\nexport const getBlockPositions = block => _blockPositions[block];\nexport const getBlockFlattenPositions = block => _blocFlattenkPositions[block];\nexport const getRowPositions = row => _rowPositions[row];\nexport const getColPositions = col => _colPositions[col];\n\nexport const getRelatedBlockPositions = ({ row, col, block }) =>\n  _blockRelatedPositions[block === undefined ? rowColToBlock(row, col) : block][blockRowColIndex(row, col)];\nexport const getRelatedRowPositions = ({ row, col }) => _rowRelatedPositions[row][col];\nexport const getRelatedColPositions = ({ row, col }) => _colRelatedPositions[col][row];\nexport const getRelatedPositions = ({ row, col }) => _relatedPositions[row][col];\n\n// all positions from left to right, top to bottom.\n// used to iterate all positions\nexport const flattenPositions = _rowPositions.flat();\n\nconst _keyPositionMapping = {};\nflattenPositions.forEach(pos => {\n  _keyPositionMapping[pos.key] = pos;\n});\n\nexport const getPositionByKey = key => _keyPositionMapping[key];\n\nexport const mapPositionsTo = f => _baseArray.map(row => _baseArray.map(col => f(row, col)));\n\nexport const getCell = (cells, pos) => cells[pos.row][pos.col];\n\nconst _intersection = (a, b) => {\n  const sb = new Set(b);\n  return a.filter(v => sb.has(v));\n};\n\nexport const getCommonRelatedPositions = (...poses) => {\n  switch (poses.length) {\n    case 0:\n      return [];\n    case 1:\n      return getRelatedPositions(poses[0]);\n    default:\n      const [pos, ...rposes] = poses;\n      return _intersection(getRelatedPositions(pos), getCommonRelatedPositions(...rposes));\n  }\n};\n\nconst calcPosDistance = (aPos, bPos) => {\n  const dRow = aPos.row - bPos.row;\n  const dCol = aPos.col - bPos.col;\n  return dRow * dRow + dCol * dCol;\n};\n\nexport const findClosedPosPair = (aPoses, bPoses) => {\n  if (aPoses.length === 1 && bPoses === 1) {\n    return [aPoses[0], bPoses[0]];\n  }\n\n  let minDistance = Number.MAX_VALUE;\n  let a = null;\n  let b = null;\n  for (const aPos of aPoses) {\n    for (const bPos of bPoses) {\n      const d = calcPosDistance(aPos, bPos);\n      if (d < minDistance) {\n        minDistance = d;\n        a = aPos;\n        b = bPos;\n      }\n    }\n  }\n\n  return [a, b];\n};\n","import {\n  flattenPositions,\n  getRelatedPositions,\n  mapPositionsTo,\n  rowColToBlock,\n  getRelatedRowPositions,\n  getRelatedColPositions,\n  getRelatedBlockPositions,\n  getRowPositions,\n  getColPositions,\n  getBlockFlattenPositions,\n} from './position';\nimport * as positions from './position';\nimport { findNGroupFromLinks, console, getAttrDefault, shuffleArray } from './utils';\n\nexport const digits = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nexport class Notes {\n  static _base = 1 << 16;\n  static new(...notes) {\n    let value = 1 << 16;\n    for (const n of notes) {\n      value |= 1 << n;\n    }\n    return value;\n  }\n\n  static isEmpty(value) {\n    return value === this._base;\n  }\n\n  static size(value) {\n    let s = 0;\n    for (let n = 1; n <= 9; n++) {\n      value = value >> 1;\n      if ((value & 1) === 1) {\n        s++;\n      }\n    }\n    return s;\n  }\n\n  static first(value) {\n    for (let n = 1; n <= 9; n++) {\n      if (Notes.has(value, n)) {\n        return n;\n      }\n    }\n  }\n\n  static entries(value) {\n    const res = [];\n    for (let n = 1; n <= 9; n++) {\n      if (Notes.has(value, n)) {\n        res.push(n);\n      }\n    }\n    return res;\n  }\n\n  static is(value) {\n    return (value & this._base) !== 0;\n  }\n\n  static has(value, n) {\n    return Notes.is(value) && (value & (1 << n)) !== 0;\n  }\n\n  static add(value, n) {\n    return value | (1 << n);\n  }\n\n  static delete(value, ...ns) {\n    for (const n of ns) {\n      value &= ~(1 << n);\n    }\n    return value;\n  }\n}\n\nexport class Sudoku {\n  static defaultPuzzle = `\n  000000000 000000000 000000000\n  000000000 000000000 000000000\n  000000000 000000000 000000000\n`;\n  constructor(puzzle) {\n    this._shouldNotify = true;\n    this.subscribers = [];\n    this._setPuzzle(puzzle || Sudoku.defaultPuzzle);\n  }\n\n  _setPuzzle(puzzle) {\n    // clear history\n    this._cellsHistory = [];\n    this._curCellsIdx = -1;\n    this._txCells = null;\n    this._historyLowerBound = 0;\n    this._setCells(Sudoku.parse(puzzle), 'init');\n    this.puzzle = this.stringify();\n    this._checkComplete();\n    // FIXME:\n    this._notify();\n  }\n\n  setHistoryLowerBound(n) {\n    this._historyLowerBound = n;\n  }\n\n  clearHistoryLowerBound() {\n    this._historyLowerBound = 0;\n  }\n\n  get isComplete() {\n    return this._isComplete;\n  }\n\n  get initialPuzzle() {\n    return this.puzzle;\n  }\n\n  get cells() {\n    return this._cellsHistory[this._curCellsIdx].cells;\n  }\n\n  get cellsRecord() {\n    return this._cellsHistory[this._curCellsIdx];\n  }\n\n  get curIdx() {\n    return this._curCellsIdx;\n  }\n\n  get lastIdx() {\n    return this._cellsHistory.length - 1;\n  }\n\n  _cut() {\n    if (this._curCellsIdx + 1 < this._cellsHistory.length) {\n      this._cellsHistory = this._cellsHistory.slice(0, this._curCellsIdx + 1);\n    }\n  }\n\n  _setCells(cells, desc = '') {\n    this._cut();\n    this._curCellsIdx++;\n    this._cellsHistory.push({ idx: this._curCellsIdx, cells, desc });\n  }\n\n  get hasPrev() {\n    return this._curCellsIdx > 0;\n  }\n\n  get hasNext() {\n    return this._curCellsIdx < this._cellsHistory.length - 1;\n  }\n\n  jumpTo = (idx, revert = false) => {\n    if (idx < this._historyLowerBound) {\n      // can't set lower than lower bound.\n      return;\n    }\n\n    this._curCellsIdx = idx;\n\n    if (this._curCellsIdx < 0) {\n      this._curCellsIdx = 0;\n    } else if (this._curCellsIdx >= this._cellsHistory.length) {\n      this._curCellsIdx = this._cellsHistory.length - 1;\n    }\n    if (revert) {\n      this._cut();\n    }\n\n    this._rollback();\n\n    this._notify();\n  };\n\n  revertTo = idx => {\n    this.jumpTo(idx, true);\n  };\n\n  jump = steps => {\n    this.jumpTo(this.curIdx + steps);\n  };\n\n  jumpToFirst = () => {\n    this.jumpTo(0);\n  };\n\n  jumpToLast = () => {\n    this.jumpTo(this.lastIdx);\n  };\n\n  subscribe(f) {\n    this.subscribers.push(f);\n  }\n\n  unsubscribe(f) {\n    this.subscribers = this.subscribers.filter(s => s !== f);\n  }\n\n  _disableNotify() {\n    this._shouldNotify = false;\n  }\n\n  _enableNotify() {\n    this._shouldNotify = true;\n  }\n\n  _notify() {\n    if (this._shouldNotify) {\n      this._checkComplete();\n      for (const f of this.subscribers) {\n        f(n => n + 1);\n      }\n    }\n  }\n\n  static cellPattern = /(\\d)|(p\\d)|(n[1-9]*N)/g;\n  static valuePattern = /^[1-9]$/;\n\n  static parse(puzzle) {\n    if (!puzzle || puzzle.length < 81) {\n      throw new Error(`bad sudoku puzzle format [${puzzle}]`);\n    }\n    // split cell\n    const flattenCells = puzzle.match(Sudoku.cellPattern);\n    if (flattenCells.length !== 81) {\n      throw new Error(`bad sudoku puzzle format [${puzzle}]`);\n    }\n\n    // parse values\n    const flattenCellValues = flattenCells.map(cell => {\n      if (cell.startsWith('n') && cell.endsWith('N')) {\n        // it's note\n        const notes = cell\n          .slice(1, -1)\n          .split('')\n          .map(s => parseInt(s));\n        return { value: Notes.new(...notes) };\n      } else if (cell.startsWith('p')) {\n        // it's placed value\n        return { value: parseInt(cell[1]) };\n      } else if (Sudoku.valuePattern.test(cell)) {\n        // it's value\n        return {\n          value: parseInt(cell),\n          // puzzle origin value\n          origin: true,\n        };\n      } else if (cell === '0') {\n        // it's empty\n        return { value: Notes.new() };\n      }\n      throw new Error('impossible');\n    });\n\n    // organize the values\n    const cells = Array.from(new Array(9)).map(() => new Array(9));\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        cells[i][j] = flattenCellValues[9 * i + j];\n      }\n    }\n    // TODO: check board integrity, no duplicated digit in any row, col, block.\n    return cells;\n  }\n\n  stringify(cells, options = {}) {\n    options = { placedAsOrigin: false, withNotes: true, originAsPlaced: false, ...options };\n    cells = cells || this.cells;\n    const res = [];\n    for (const pos of flattenPositions) {\n      const { origin, value } = cells[pos.row][pos.col];\n      if (Notes.is(value)) {\n        if (!options.withNotes) {\n          res.push('0');\n          continue;\n        }\n\n        // notes\n        if (Notes.isEmpty(value)) {\n          res.push('0');\n        } else {\n          res.push('n', ...Notes.entries(value), 'N');\n        }\n      } else if ((options.placedAsOrigin || origin) && !options.originAsPlaced) {\n        // origin\n        res.push(value);\n      } else {\n        // placed\n        res.push('p', value);\n      }\n    }\n    return res.join('');\n  }\n\n  // calcuate available digits for cell at postion <pos>.\n  calcAvailableDigits(pos) {\n    const res = new Set([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    if (!pos) {\n      return res;\n    }\n\n    const cell = this.getCell(pos);\n    if (cell.origin) {\n      // origin can't be changed\n      return new Set();\n    }\n\n    for (const rpos of getRelatedPositions(pos)) {\n      const { value } = this.getCell(rpos);\n      if (!Notes.is(value)) {\n        res.delete(value);\n      }\n    }\n    return res;\n  }\n\n  calcRemainingDigits() {\n    const res = { 1: 9, 2: 9, 3: 9, 4: 9, 5: 9, 6: 9, 7: 9, 8: 9, 9: 9 };\n    for (const pos of flattenPositions) {\n      const { value } = this.getCell(pos);\n      if (!Notes.is(value)) {\n        res[value]--;\n      }\n    }\n    return res;\n  }\n\n  calcAvailablePositions(d) {\n    if (!(d >= 1 && d <= 9)) {\n      return null;\n    }\n\n    const res = mapPositionsTo(() => true);\n    for (const pos of flattenPositions) {\n      const { value } = this.getCell(pos);\n      if (!Notes.is(value)) {\n        res[pos.row][pos.col] = false;\n        if (value === d) {\n          // clear\n          for (const { row, col } of getRelatedPositions(pos)) {\n            res[row][col] = false;\n          }\n        }\n      }\n    }\n    return res;\n  }\n\n  _txSetCellValue(cells, pos, value) {\n    const { row, col } = pos;\n    const { value: oldValue } = this.getCell(pos);\n    if (value === oldValue) {\n      return cells;\n    }\n\n    const curCells = this.getCurCells();\n    if (cells === curCells) {\n      cells = [...curCells];\n    }\n    if (cells[row] === curCells[row]) {\n      cells[row] = [...curCells[row]];\n    }\n    if (cells[row][col] === curCells[row][col]) {\n      cells[row][col] = { ...curCells[row][col] };\n    }\n    cells[row][col].value = value;\n    if (!Notes.is(value)) {\n      // updated related notes\n      for (const rpos of getRelatedPositions(pos)) {\n        const cell = this.getCell(rpos);\n        if (!Notes.is(cell.value)) {\n          // is not notes\n          continue;\n        }\n        cells = this._txSetCellValue(cells, rpos, Notes.delete(cell.value, value));\n      }\n    }\n    return cells;\n  }\n\n  getCurCells() {\n    if (this._txCells) {\n      // in transaction\n      return this._txCells;\n    }\n    return this.cells;\n  }\n\n  getCell({ row, col }) {\n    return this.getCurCells()[row][col];\n  }\n\n  _startTx() {\n    if (!this._txCells) {\n      this._txCells = this.getCurCells();\n    }\n  }\n\n  _commit(desc = '') {\n    if (this._txCells && this._txCells !== this.cells) {\n      this._setCells(this._txCells, desc);\n      this._txCells = null;\n      this._notify();\n    }\n  }\n\n  _rollback() {\n    this._txCells = null;\n  }\n\n  _setCellValue(pos, value) {\n    this._startTx();\n    this._txCells = this._txSetCellValue(this._txCells, pos, value);\n  }\n\n  // actions\n  static actions = {\n    RESET: 'RESET',\n    NOTE: 'NOTE',\n    UPDATE_CELL_VALUE: 'U CELL_VALUE',\n    AUTO_NOTE: 'A NOTE',\n    AUTO_POINTING: 'A POINTING',\n    AUTO_CLAIMING: 'A CLAIMING',\n    AUTO_PLACE: 'A PLACE',\n    AUTO_PLACE_POINTING_CLAIMING: 'A PLACE/POINTING/CLAIMING',\n    ELIMINATE_GROUP: '- GROUP',\n    ELIMINATE_XGROUP: '- XGROUP',\n    ELIMINATE_CHAIN: '- CHAIN',\n    ELIMINATE_TRIAL_ERROR: '- TRIAL_ERROR',\n    HANDLE_TIP: 'HANDLE_TIP',\n  };\n\n  _handlActions(action, payload = {}) {\n    switch (action) {\n      case Sudoku.actions.RESET:\n        this._setPuzzle(this.puzzle);\n        break;\n      case Sudoku.actions.NOTE:\n        this._note(payload);\n        break;\n      case Sudoku.actions.AUTO_NOTE:\n        this._autoNote();\n        break;\n      case Sudoku.actions.AUTO_PLACE:\n        this._autoPlace();\n        break;\n      case Sudoku.actions.AUTO_POINTING:\n        this._autoPointing();\n        break;\n      case Sudoku.actions.AUTO_CLAIMING:\n        this._autoClaiming();\n        break;\n      case Sudoku.actions.AUTO_PLACE_POINTING_CLAIMING:\n        this._autoPlacePointingClaiming();\n        break;\n      case Sudoku.actions.UPDATE_CELL_VALUE:\n        this._updateCellValue(payload);\n        break;\n      case Sudoku.actions.ELIMINATE_GROUP:\n        this._eliminateGroup(payload);\n        break;\n      case Sudoku.actions.ELIMINATE_XGROUP:\n        this._eliminateXGroup(payload);\n        break;\n      case Sudoku.actions.ELIMINATE_CHAIN:\n        this._eliminateChain(payload);\n        break;\n      case Sudoku.actions.ELIMINATE_TRIAL_ERROR:\n        this._eliminateTrialError(payload);\n        break;\n      case Sudoku.actions.HANDLE_TIP:\n        this._handleTip(payload);\n        break;\n      default:\n        break;\n    }\n  }\n\n  dispatch(action, payload, options) {\n    options = { commit: true, log: true, ...(options || {}) };\n    if (options.log) {\n      console.group(`[${action}]`);\n      payload && console.log('->payload:', payload);\n      options && console.log('->options:', options);\n    }\n\n    this._startTx();\n    this._handlActions(action, payload, options);\n\n    if (options.log) {\n      console.groupEnd();\n    }\n\n    if (options.commit) {\n      this._commit(action);\n    }\n  }\n\n  reset() {\n    this.dispatch(Sudoku.actions.RESET);\n  }\n\n  note(pos) {\n    this.dispatch(Sudoku.actions.NOTE, { pos });\n  }\n\n  updateCellValue(isNoting, pos, value) {\n    this.dispatch(Sudoku.actions.UPDATE_CELL_VALUE, { isNoting, pos, value });\n  }\n\n  autoNote() {\n    this.dispatch(Sudoku.actions.AUTO_NOTE);\n  }\n\n  autoPlacePointingClaiming() {\n    this.dispatch(Sudoku.actions.AUTO_PLACE_POINTING_CLAIMING);\n  }\n\n  autoPlace() {\n    this.dispatch(Sudoku.actions.AUTO_PLACE);\n  }\n\n  autoPointing() {\n    this.dispatch(Sudoku.actions.AUTO_POINTING);\n  }\n\n  autoClaiming() {\n    this.dispatch(Sudoku.actions.AUTO_CLAIMING);\n  }\n\n  eliminateGroup(group) {\n    this.dispatch(Sudoku.actions.ELIMINATE_GROUP, { group });\n  }\n\n  eliminateXGroup(tip) {\n    this.dispatch(Sudoku.actions.ELIMINATE_XGROUP, { tip });\n  }\n\n  eliminateChain(tip) {\n    this.dispatch(Sudoku.actions.ELIMINATE_CHAIN, { tip });\n  }\n\n  eliminateTrialError(tip) {\n    this.dispatch(Sudoku.actions.ELIMINATE_TRIAL_ERROR, { tip });\n  }\n\n  handleTip(tip) {\n    this.dispatch(Sudoku.actions.HANDLE_TIP, { tip });\n  }\n\n  _checkValidity() {\n    // check every house should has 9 digits\n    for (const [domain, getPositions] of [\n      ['row', getRowPositions],\n      ['col', getColPositions],\n      ['block', getBlockFlattenPositions],\n    ]) {\n      for (const idx of positions.indices) {\n        const errDigits = new Set(digits);\n        for (const pos of getPositions(idx)) {\n          const { value } = this.getCell(pos);\n          if (Notes.is(value)) {\n            Notes.entries(value).forEach(v => errDigits.delete(v));\n          } else {\n            errDigits.delete(value);\n          }\n        }\n        if (errDigits.size !== 0) {\n          return { domain, [domain]: idx, digits: errDigits };\n        }\n      }\n    }\n  }\n\n  _checkComplete() {\n    for (const pos of positions.flattenPositions) {\n      const { value } = this.getCell(pos);\n      if (Notes.is(value)) {\n        this._isComplete = false;\n        return false;\n      }\n    }\n    this._isComplete = true;\n    return true;\n  }\n\n  _note({ pos }) {\n    const { value } = this.getCell(pos);\n    if (!Notes.is(value)) {\n      return;\n    }\n    if (Notes.size(value) > 0) {\n      // only note empty cell. erase before re-note.\n      return;\n    }\n    this._setCellValue(pos, Notes.new(...this.calcAvailableDigits(pos)));\n  }\n\n  _autoNote() {\n    for (const pos of flattenPositions) {\n      this.dispatch(Sudoku.actions.NOTE, { pos }, { commit: false, log: false });\n    }\n  }\n\n  _autoPlacePointingClaiming() {\n    try {\n      let count = 0;\n      do {\n        count = 0;\n        count += this._autoPlace();\n        this._commit(Sudoku.actions.AUTO_PLACE);\n        count += this._autoPointing();\n        this._commit(Sudoku.actions.AUTO_POINTING);\n        count += this._autoClaiming();\n        this._commit(Sudoku.actions.AUTO_CLAIMING);\n      } while (count > 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // auto place naked/hidden single value\n  _autoPlace() {\n    let count = 0;\n    let placed = false;\n\n    console.group('[auto place]');\n    do {\n      placed = false;\n      // 0:naked, 1:hidden\n      for (const cls of [0, 1]) {\n        for (const group of findNGroup(this.getCurCells(), 1, cls)) {\n          this.dispatch(Sudoku.actions.ELIMINATE_GROUP, { group }, { commit: false });\n          count++;\n          placed = true;\n          break;\n        }\n        /* use current cells for every find */\n        if (placed) {\n          continue;\n        }\n      }\n    } while (placed);\n    console.groupEnd();\n\n    return count;\n  }\n\n  // block eliminate row/col\n  _autoPointing() {\n    let count = 0;\n    console.group('[auto pointing]');\n    for (const tip of findNXGroup(this.getCurCells(), 1, { br: true, bc: true })) {\n      console.log(tip);\n      this.dispatch(Sudoku.actions.ELIMINATE_XGROUP, { tip }, { commit: false });\n      count++;\n    }\n    console.groupEnd();\n    return count;\n  }\n\n  // row/col eliminate block\n  _autoClaiming() {\n    let count = 0;\n    console.group('[auto claiming]');\n    for (const tip of findNXGroup(this.getCurCells(), 1, { rb: true, cb: true })) {\n      this.dispatch(Sudoku.actions.ELIMINATE_XGROUP, { tip }, { commit: false });\n      count++;\n    }\n    console.groupEnd();\n    return count;\n  }\n\n  _updateCellValue({ isNoting, pos, value }) {\n    if (isNoting) {\n      this._noteCellValue(pos, value);\n    } else {\n      this._placeCellValue(pos, value);\n    }\n  }\n\n  _placeCellValue(pos, value) {\n    const oldCell = this.getCell(pos);\n    if (oldCell.origin) {\n      // can't place origin value\n      return;\n    }\n\n    if (oldCell.value === value) {\n      // cancel current value\n      value = Notes.new();\n    }\n\n    this._setCellValue(pos, value);\n  }\n\n  _noteCellValue(pos, n) {\n    const { value } = this.getCell(pos);\n    if (!Notes.is(value)) {\n      // can't note cell with value.\n      return;\n    }\n\n    // note\n    let notes = value;\n    if (Notes.has(notes, n)) {\n      notes = Notes.delete(notes, n);\n    } else {\n      notes = Notes.add(notes, n);\n    }\n\n    this._setCellValue(pos, notes);\n  }\n\n  findGroup(cells) {\n    for (let n = 1; n <= 8; n++) {\n      // 0:naked group, 1: hidden group\n      for (const cls of [0, 1]) {\n        for (const group of findNGroup(cells, n, cls)) {\n          // only return the first group\n          group.type = 'group';\n          return group;\n        }\n      }\n    }\n  }\n\n  _eliminateGroup({ group }) {\n    if (group.n === 1) {\n      // place value\n      const pos = [...group.poses][0];\n      const d = [...group.notes][0];\n\n      this._setCellValue(pos, d);\n    } else if (group.cls === 0) {\n      // naked\n      // to eliminate other cells\n      let otherPoses = [];\n      if (group.domain === 'row') {\n        otherPoses = positions.getRowPositions(group.row);\n      } else if (group.domain === 'col') {\n        otherPoses = positions.getColPositions(group.col);\n      } else if (group.domain === 'block') {\n        otherPoses = positions.getBlockFlattenPositions(group.block);\n      }\n      otherPoses = otherPoses.filter(pos => {\n        const { value } = this.getCell(pos);\n        return !(!Notes.is(value) || group.poses.has(pos));\n      });\n      for (const pos of otherPoses) {\n        const { value } = this.getCell(pos);\n        this._setCellValue(pos, Notes.delete(value, ...group.notes));\n      }\n    } else if (group.cls === 1) {\n      // hidden\n      // to eliminate other notes\n      for (const pos of group.poses) {\n        const { value } = this.getCell(pos);\n        this._setCellValue(pos, Notes.new(...Notes.entries(value).filter(n => group.notes.has(n))));\n      }\n    }\n  }\n\n  findXGroup(cells) {\n    for (let n = 1; n <= 8; n++) {\n      for (const group of findNXGroup(cells, n)) {\n        group.type = 'X-Group';\n        return group;\n      }\n    }\n  }\n\n  _eliminateXGroup({ tip }) {\n    const otherPositions = [];\n    if (tip.effect === 'row') {\n      for (const row of tip.rows) {\n        otherPositions.push(...positions.getRowPositions(row));\n      }\n    } else if (tip.effect === 'col') {\n      for (const col of tip.cols) {\n        otherPositions.push(...positions.getColPositions(col));\n      }\n    } else if (tip.effect === 'block') {\n      for (const block of tip.blocks) {\n        otherPositions.push(...positions.getBlockFlattenPositions(block));\n      }\n    }\n\n    for (const pos of otherPositions) {\n      const { value } = this.getCell(pos);\n      if (!Notes.is(value) || tip.poses.has(pos)) {\n        continue;\n      }\n\n      this._setCellValue(pos, Notes.delete(value, tip.d));\n    }\n  }\n\n  findTip(options = { trial: true }) {\n    const cells = this.getCurCells();\n    return (\n      this.findGroup(cells) ||\n      this.findXGroup(cells) ||\n      this.findChain(cells) ||\n      (options.trial && this.findTrialError())\n    );\n  }\n\n  _handleTip({ tip }) {\n    if (tip.type === 'group') {\n      this.eliminateGroup(tip);\n    } else if (tip.type === 'X-Group') {\n      this.eliminateXGroup(tip);\n    } else if (tip.type === 'chain') {\n      this.eliminateChain(tip);\n    } else if (tip.type === 'trial-error') {\n      this.eliminateTrialError(tip);\n    }\n  }\n\n  findTrialError() {\n    this._disableNotify();\n    const startIdx = this._curCellsIdx;\n    // randomize this pos choice\n    const poses = shuffleArray(positions.flattenPositions);\n    for (const tryTip of [false, { maxDepth: 15 }, {maxDepth: 25}, { maxDepth: Number.MAX_VALUE }]) {\n      for (const pos of poses) {\n        const { value } = this.getCell(pos);\n        if (!Notes.is(value)) {\n          continue;\n        }\n        for (const d of Notes.entries(value)) {\n          // start trial for d@pos\n          let deepTried = 0;\n          this.updateCellValue(false, pos, d);\n          this.autoPlacePointingClaiming();\n          let err = this._checkValidity();\n          if (!err && tryTip) {\n            let tip = this.findTip({ trial: false });\n            while (tip) {\n              deepTried++;\n              this.handleTip(tip);\n              this.autoPlacePointingClaiming();\n              err = this._checkValidity();\n              if (err) {\n                break;\n              }\n              if (deepTried > tryTip.maxDepth) {\n                break;\n              }\n              tip = this.findTip({ trial: false });\n            }\n            if (this._checkComplete()) {\n              err = true;\n            }\n          }\n          if (err) {\n            this._enableNotify();\n            const endIdx = this._curCellsIdx;\n            const includedCells = new Set(\n              this._cellsHistory.filter(({ idx }) => idx >= startIdx && idx <= endIdx).map(h => h.cells)\n            );\n            return {\n              startIdx,\n              endIdx,\n              includedCells,\n              pos,\n              d,\n              err,\n              type: 'trial-error',\n              name: `try${deepTried ? '*' + deepTried : ''} ${d}@${pos}`,\n            };\n          }\n          this.jumpTo(startIdx);\n        }\n      }\n    }\n    // revert\n    this.jumpTo(startIdx);\n    this._enableNotify();\n  }\n\n  _eliminateTrialError({ tip }) {\n    const { startIdx, pos, d, err } = tip;\n    if (err === true) {\n      // complete\n      return;\n    }\n    this.revertTo(startIdx);\n    const { value } = this.getCell(pos);\n    if (Notes.is(value)) {\n      this._setCellValue(pos, Notes.delete(value, d));\n    }\n  }\n\n  findChain(cells) {\n    const [dPoses, dGroupPoses, dLinks] = getDigitPosesAndLinks(cells);\n    console.log('chain info:', dGroupPoses, dLinks);\n    // randomize digits.\n    const ds = shuffleArray(digits);\n    for (const maxLen of [20, Number.MAX_VALUE]) {\n      for (const tryCellLinks of [false, true]) {\n        for (const tryGroupLinks of [false, true]) {\n          // for (const getPoses of [d => dPoses[d] || [] /*, d => (dGroupPoses[d] || []).filter(p => p.isGroup)*/]) {\n          for (const getPoses of [d => dPoses[d] || [], d => (dGroupPoses[d] || []).filter(p => p.isGroup)]) {\n            let dRes = null;\n            let maxLength = maxLen;\n            for (const d of ds) {\n              for (const pos of getPoses(d)) {\n                const val = false;\n                const startNode = { pos, d, val };\n                const extraData = {\n                  dLinks,\n                  val: false,\n                  cells,\n                  td: d,\n                  tryGroupLinks,\n                  tryCellLinks,\n                  maxLength,\n                };\n                for (const chain of searchChain([], startNode, extraData)) {\n                  if (chain.chain.length < maxLength) {\n                    dRes = chain;\n                    maxLength = dRes.chain.length;\n                    extraData.maxLength = maxLength;\n                    if (maxLength <= 10) {\n                      return prepareChainResult(dRes);\n                    }\n                  }\n                }\n              }\n            }\n            if (dRes) {\n              return prepareChainResult(dRes);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  _eliminateChain({ tip }) {\n    for (const pos of tip.effectedPoses) {\n      const { value } = this.getCell(pos);\n      if (!Notes.is(value)) {\n        continue;\n      }\n      let newValue = value;\n      if (tip.keep) {\n        newValue = Notes.new(...tip.keepDs);\n      } else {\n        newValue = Notes.delete(value, tip.d);\n      }\n      this._setCellValue(pos, newValue);\n    }\n  }\n}\n\nconst prepareChainResult = res => {\n  res.type = 'chain';\n  const startPos = res.chain[0].pos;\n  const endNode = res.chain[res.chain.length - 1];\n  const endPos = endNode.pos;\n  const d = res.d;\n  let hasMulti = false;\n  let hasGroup = false;\n  for (const node of res.chain) {\n    if (node.d !== d) {\n      hasMulti = true;\n    }\n    if (node.pos.isGroup) {\n      hasGroup = true;\n    }\n    if (hasMulti && hasGroup) {\n      break;\n    }\n  }\n  const parts = [res.chain.length - 1];\n  if (hasGroup) {\n    parts.push('G');\n  }\n  parts.push(hasMulti ? 'XY' : 'X', 'Chain');\n  parts.push([startPos.isGroup ? 'g' : 'd', endPos.isGroup ? 'g' : 'd', endNode.d === d ? '-x' : '-xy'].join(''));\n  res.name = parts.join('-');\n  return res;\n};\n\nconst checkExistAndEqual = (a, b) => a !== undefined && a === b;\n\nfunction* searchChain(chain, node, extraData) {\n  // optimize\n  if (chain.length + 1 >= extraData.maxLength) {\n    return;\n  }\n\n  const { pos, d, val } = node;\n  const { dLinks, cells, td } = extraData;\n\n  if (extraData.val === false && val === true) {\n    // strong link\n    const startPos = chain[0].pos;\n    // strong link is reversable.\n    // digit(startPos) -> group(endPos)\n    if (!(startPos.isGroup && !pos.isGroup)) {\n      if (d === td) {\n        // start and end shouldn't be the same position.\n        // check if intersection related positions has d\n        const effectedPoses = new Set();\n        const poses = [...getRealPoses(startPos), ...getRealPoses(pos)];\n\n        for (const cpos of positions.getCommonRelatedPositions(...poses)) {\n          const { value } = positions.getCell(cells, cpos);\n          if (Notes.has(value, d)) {\n            effectedPoses.add(cpos);\n          }\n        }\n        if (effectedPoses.size > 0) {\n          yield { chain: [...chain, node], effectedPoses, d: td };\n        }\n      } else {\n        // xy-chain\n        // two types:\n        // 1. same pos\n        if (startPos.key === pos.key) {\n          // pos and startPos are all groups of all not.\n          //\n          // but at this case, start and end poses must not be groups.\n          // diffrenet digits' group keys are all different.\n          const poses = pos.isGroup ? [...pos.poses] : [pos];\n          const ds = new Set();\n          for (const p of poses) {\n            const { value } = positions.getCell(cells, p);\n            Notes.entries(value).forEach(d => ds.add(d));\n          }\n          if (ds.size > 2) {\n            // eliminate other digits of this position\n            ds.delete(d);\n            ds.delete(td);\n            yield {\n              chain: [...chain, node],\n              effectedPoses: new Set(poses),\n              d: td,\n              effectedDs: ds,\n              keep: true,\n              keepDs: [d, td],\n            };\n          }\n          // 2. different poses\n        } else {\n          if (!pos.isGroup) {\n            // pos is cell then startPos should also be cell.\n            // pos is one of startPos's related positions.\n            if (\n              checkExistAndEqual(pos.row, startPos.row) ||\n              checkExistAndEqual(pos.col, startPos.col) ||\n              checkExistAndEqual(pos.block, startPos.block)\n            ) {\n              const { value } = positions.getCell(cells, pos);\n              if (Notes.has(value, td)) {\n                yield { chain: [...chain, node], effectedPoses: new Set([pos]), d: td };\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  // try related links or group links\n  for (const targets of [dLinks[d][pos][val], extraData.tryGroupLinks ? dLinks[d][pos].group[val] : []]) {\n    for (const tpos of targets) {\n      const nextNode = { pos: tpos, val: !val, d };\n\n      if (chainHasNode(chain, nextNode)) {\n        continue;\n      }\n\n      yield* searchChain([...chain, node], nextNode, extraData);\n    }\n  }\n\n  if (extraData.tryCellLinks) {\n    // try cell links\n    for (const cd of dLinks[d][pos].cell[val]) {\n      const nextNode = { pos, val: !val, d: cd };\n\n      if (chainHasNode(chain, nextNode)) {\n        continue;\n      }\n\n      yield* searchChain([...chain, node], nextNode, extraData);\n    }\n  }\n}\n\nconst chainHasNode = (chain, node) => {\n  const poses = node.pos.isGroup ? node.pos.poses : [node.pos];\n  for (const n of chain) {\n    if (n.val === node.val && n.d === node.d && n.pos === node.pos) {\n      return true;\n    }\n    if (n.pos.isGroup || node.pos.isGroup) {\n      if (hasCommon(poses, n.pos.isGroup ? n.pos.poses : [n.pos])) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nconst newGroupPos = (domain, val, block, poses, d) => {\n  if (poses.length > 1) {\n    return {\n      key: `${d}@${domain}${val}block${block}`,\n      d,\n      isGroup: true,\n      domain: new Set([domain]),\n      [domain]: val,\n      block,\n      poses,\n      toString() {\n        return this.key;\n      },\n    };\n  }\n  const pos = poses[0];\n  return {\n    key: pos.key,\n    d,\n    isGroup: false,\n    domain: new Set([domain]),\n    [domain]: val,\n    block,\n    pos,\n    poses,\n    toString() {\n      return this.key;\n    },\n  };\n};\n\nexport const getRealPoses = pos => (pos.isGroup ? pos.poses : [pos]);\n\n// for row/col in block, like claiming.\nfunction getDigitGroupPoses(cells) {\n  const dGroupPoses = {};\n  for (const [domain, xPositions] of [\n    ['row', positions.rowPositions],\n    ['col', positions.colPositions],\n  ]) {\n    for (const xPoses of xPositions) {\n      const blockDigitPoses = {};\n      let val = 0;\n      for (const pos of xPoses) {\n        val = pos[domain];\n        const { value } = positions.getCell(cells, pos);\n        if (!Notes.is(value)) {\n          continue;\n        }\n        const digitPoses = getAttrDefault(blockDigitPoses, pos.block, {});\n        for (const d of Notes.entries(value)) {\n          const poses = getAttrDefault(digitPoses, d, []);\n          poses.push(pos);\n        }\n      }\n      for (const [sblock, digitGroups] of Object.entries(blockDigitPoses)) {\n        for (const [sd, poses] of Object.entries(digitGroups)) {\n          const block = parseInt(sblock);\n          const d = parseInt(sd);\n          const groupPoses = getAttrDefault(dGroupPoses, d, []);\n          if (poses.length > 1) {\n            groupPoses.push(newGroupPos(domain, val, block, poses, d));\n          } else {\n            const pos = poses[0];\n            let groupPos = groupPoses.filter(gp => gp.pos === pos)[0];\n            if (!groupPos) {\n              groupPos = newGroupPos(domain, val, block, poses, d);\n              groupPoses.push(groupPos);\n            }\n            groupPos.domain.add(domain);\n            groupPos[domain] = val;\n          }\n        }\n      }\n    }\n  }\n  return dGroupPoses;\n}\n\nconst hasCommon = (a, b) => {\n  const sb = new Set(b);\n  return a.filter(v => sb.has(v)).length > 0;\n};\n\nconst getOtherRowGroupPositions = (groupPoses = [], pos) => {\n  return groupPoses.filter(p => pos.row !== undefined && p.row === pos.row && p.key !== pos.key);\n};\n\nconst getOtherColGroupPositions = (groupPoses = [], pos) => {\n  return groupPoses.filter(p => pos.col !== undefined && p.col === pos.col && p.key !== pos.key);\n};\n\nconst getOtherBlockGroupPositions = (groupPoses = [], pos) => {\n  const filteredGroupPoses = groupPoses.filter(\n    p => p.block === pos.block && p.key !== pos.key && !hasCommon(p.poses, pos.isGroup ? pos.poses : [pos])\n  );\n  const res = filteredGroupPoses.filter(p => p.isGroup);\n  for (const p of filteredGroupPoses.filter(p => !p.isGroup)) {\n    let ok = true;\n    for (const rpos of res) {\n      if (hasCommon(rpos.poses, p.poses)) {\n        ok = false;\n        break;\n      }\n    }\n    if (ok) {\n      res.push(p);\n    }\n  }\n  return res;\n};\n\nfunction getGroupPosLink(groupPoses, pos, d) {\n  // strong: false->true, weak: true->false\n  const strongTargets = new Set();\n  const weakTargets = new Set();\n  for (const [domain, getOtherGroupPositions] of [\n    ['row', getOtherRowGroupPositions],\n    ['col', getOtherColGroupPositions],\n    ['block', getOtherBlockGroupPositions],\n  ]) {\n    if (pos.isGroup && domain !== 'block' && !pos.domain.has(domain)) {\n      continue;\n    }\n\n    let count = 0;\n    let strongPos = null;\n    for (const opos of getOtherGroupPositions(groupPoses, pos)) {\n      count++;\n      if (opos.isGroup) {\n        if (pos.isGroup) {\n          // group pos\n          weakTargets.add(opos);\n          strongPos = opos;\n        } else if (!new Set(opos.poses).has(pos)) {\n          // pos\n          weakTargets.add(opos);\n          strongPos = opos;\n        }\n      }\n    }\n    if (count === 1 && strongPos) {\n      strongTargets.add(strongPos);\n    }\n  }\n  return { false: [...strongTargets], true: [...weakTargets] };\n}\n\nfunction getPosLink(cells, d, pos) {\n  // strong: false->true, weak: true->false\n  const strongTargets = new Set();\n  const weakTargets = new Set();\n  for (const [domain, getRelatedPositions] of [\n    ['row', getRelatedRowPositions],\n    ['col', getRelatedColPositions],\n    ['block', getRelatedBlockPositions],\n  ]) {\n    let spos = pos;\n    let filterPoses = new Set();\n    if (pos.isGroup) {\n      if (domain !== 'block' && !pos.domain.has(domain)) {\n        continue;\n      }\n      spos = pos.poses[0];\n      filterPoses = new Set(pos.poses);\n    }\n\n    let count = 0;\n    let strongPos = null;\n    for (const rpos of getRelatedPositions(spos).filter(p => !filterPoses.has(p))) {\n      const { value } = positions.getCell(cells, rpos);\n      if (!Notes.has(value, d)) {\n        continue;\n      }\n      weakTargets.add(rpos);\n      count++;\n      strongPos = rpos;\n    }\n    if (count === 1) {\n      strongTargets.add(strongPos);\n    }\n  }\n  return { false: [...strongTargets], true: [...weakTargets] };\n}\n\nfunction getDigitPosesAndLinks(cells) {\n  const dGroupPoses = getDigitGroupPoses(cells);\n  const dLinks = {};\n  const dPoses = {};\n  for (const pos of positions.flattenPositions) {\n    const { value } = positions.getCell(cells, pos);\n    if (!Notes.is(value)) {\n      continue;\n    }\n    const ds = Notes.entries(value);\n    for (const d of ds) {\n      const poses = getAttrDefault(dPoses, d, []);\n      poses.push(pos);\n\n      const links = getAttrDefault(dLinks, d, {});\n      const link = getPosLink(cells, d, pos);\n      links[pos] = link;\n      link.group = getGroupPosLink(dGroupPoses[d], pos, d);\n\n      const otherDs = ds.filter(v => v !== d);\n      link.cell = { false: ds.length === 2 ? otherDs : [], true: otherDs };\n    }\n  }\n  // group position links\n  for (const [sd, groupPoses] of Object.entries(dGroupPoses)) {\n    const d = parseInt(sd);\n    const links = getAttrDefault(dLinks, d, {});\n    for (const pos of groupPoses.filter(p => p.isGroup)) {\n      const link = getPosLink(cells, d, pos);\n      links[pos] = link;\n      link.group = getGroupPosLink(dGroupPoses[d], pos);\n      link.cell = { false: [], true: [] };\n    }\n  }\n\n  return [dPoses, dGroupPoses, dLinks];\n}\n\nfunction getPositionsLinks(cells, positions) {\n  const links = [];\n  for (const pos of positions) {\n    const { value } = cells[pos.row][pos.col];\n    if (!Notes.is(value)) {\n      continue;\n    }\n\n    for (const note of Notes.entries(value)) {\n      links.push([pos, note]);\n    }\n  }\n  return links;\n}\n\nfunction* findNGroup(cells, n, cls) {\n  // rows\n  for (const row of positions.rows) {\n    const links = getPositionsLinks(cells, positions.getRowPositions(row));\n    for (const group of findNGroupFromLinks(links, n, cls, { checkClear: n > 1 })) {\n      const poses = group[cls];\n      const notes = group[(cls + 1) % 2];\n      yield { cls, n, domain: 'row', row: row, poses, notes, name: ['naked', 'hidden'][cls] + `-${n}-group` };\n    }\n  }\n  // cols\n  for (const col of positions.cols) {\n    const links = getPositionsLinks(cells, positions.getColPositions(col));\n    for (const group of findNGroupFromLinks(links, n, cls, { checkClear: n > 1 })) {\n      const poses = group[cls];\n      const notes = group[(cls + 1) % 2];\n      yield { cls, n, domain: 'col', col: col, poses, notes, name: ['naked', 'hidden'][cls] + `-${n}-group` };\n    }\n  }\n  // blocks\n  for (const block of positions.blocks) {\n    const links = getPositionsLinks(cells, positions.getBlockFlattenPositions(block));\n    for (const group of findNGroupFromLinks(links, n, cls, { checkClear: n > 1 })) {\n      const poses = group[cls];\n      const notes = group[(cls + 1) % 2];\n      yield { cls, n, domain: 'block', block: block, poses, notes, name: ['naked', 'hidden'][cls] + `-${n}-group` };\n    }\n  }\n}\n\nconst getAToBLinks = (getPositions, getEnd) => (cells, d) => {\n  const links = [];\n  for (let a = 0; a < 9; a++) {\n    for (const pos of getPositions(a)) {\n      const { value } = cells[pos.row][pos.col];\n      if (!Notes.is(value)) {\n        continue;\n      }\n      if (Notes.has(value, d)) {\n        links.push([a, getEnd(pos)]);\n      }\n    }\n  }\n  return links;\n};\n\nconst getRowToColLinks = getAToBLinks(positions.getRowPositions, pos => pos.col);\nconst getRowToBlockLinks = getAToBLinks(positions.getRowPositions, pos => rowColToBlock(pos.row, pos.col));\nconst getColToBlockLinks = getAToBLinks(positions.getColPositions, pos => rowColToBlock(pos.row, pos.col));\n\nconst getPositionsForDigit = (cells, d, positions) => {\n  const poses = [];\n  for (const pos of positions) {\n    const { value } = cells[pos.row][pos.col];\n    if (Notes.is(value) && Notes.has(value, d)) {\n      poses.push(pos);\n    }\n  }\n  return poses;\n};\n\nfunction* findNXGroup(cells, n, types = { rc: true, cr: true, rb: true, br: true, cb: true, bc: true }) {\n  for (let d = 1; d <= 9; d++) {\n    if (types.rc || types.cr) {\n      // row->col\n      const rcLinks = getRowToColLinks(cells, d);\n      if (types.rc) {\n        for (const group of findNGroupFromLinks(rcLinks, n, 0)) {\n          const [rows, cols] = group;\n          const poses = [];\n          let isXWing = true;\n          for (const row of rows) {\n            const rowPositions = getPositionsForDigit(cells, d, positions.getRowPositions(row));\n            if (rowPositions.length !== n) {\n              isXWing = false;\n            }\n            poses.push(...rowPositions);\n          }\n          const name = isXWing ? `${n}-X-Wing` : `${n}-XRC-Group`;\n          yield { name, domain: 'row', effect: 'col', rows, cols, poses: new Set(poses), d };\n        }\n      }\n      // col->row\n      if (types.cr) {\n        for (const group of findNGroupFromLinks(rcLinks, n, 1)) {\n          const [cols, rows] = group;\n          const poses = [];\n          let isXWing = true;\n          for (const col of cols) {\n            const colPositions = getPositionsForDigit(cells, d, positions.getColPositions(col));\n            if (colPositions.length !== n) {\n              isXWing = false;\n            }\n            poses.push(...getPositionsForDigit(cells, d, positions.getColPositions(col)));\n          }\n          const name = isXWing ? `${n}-X-Wing` : `${n}-XCR-Group`;\n          yield { name, domain: 'col', effect: 'row', rows, cols, poses: new Set(poses), d };\n        }\n      }\n    }\n\n    if (types.rb || types.br) {\n      // row->block, 1-xrb-group is claiming\n      const rbLinks = getRowToBlockLinks(cells, d);\n      if (types.rb) {\n        for (const group of findNGroupFromLinks(rbLinks, n, 0)) {\n          const [rows, blocks] = group;\n          const poses = [];\n          for (const row of rows) {\n            poses.push(...getPositionsForDigit(cells, d, positions.getRowPositions(row)));\n          }\n          const name = n === 1 ? 'claiming' : `${n}-XRB-Group`;\n          yield { name, domain: 'row', effect: 'block', rows, blocks, poses: new Set(poses), d };\n        }\n      }\n      // block-row, 1-xbr-group is pointing\n      if (types.br) {\n        for (const group of findNGroupFromLinks(rbLinks, n, 1)) {\n          const [blocks, rows] = group;\n          const poses = [];\n          for (const block of blocks) {\n            poses.push(...getPositionsForDigit(cells, d, positions.getBlockFlattenPositions(block)));\n          }\n          const name = n === 1 ? 'pointing' : `${n}-XBR-Group`;\n          yield { name, domain: 'block', effect: 'row', rows, blocks, poses: new Set(poses), d };\n        }\n      }\n    }\n\n    if (types.cb || types.bc) {\n      // col->block, 1-xcb-group is claiming\n      const cbLinks = getColToBlockLinks(cells, d);\n      if (types.cb) {\n        for (const group of findNGroupFromLinks(cbLinks, n, 0)) {\n          const [cols, blocks] = group;\n          const poses = [];\n          for (const col of cols) {\n            poses.push(...getPositionsForDigit(cells, d, positions.getColPositions(col)));\n          }\n          const name = n === 1 ? 'claiming' : `${n}-XCB-Group`;\n          yield { name, domain: 'col', effect: 'block', cols, blocks, poses: new Set(poses), d };\n        }\n      }\n\n      // block-col, 1-xbc-group is pointing\n      if (types.bc) {\n        for (const group of findNGroupFromLinks(cbLinks, n, 1)) {\n          const [blocks, cols] = group;\n          const poses = [];\n          for (const block of blocks) {\n            poses.push(...getPositionsForDigit(cells, d, positions.getBlockFlattenPositions(block)));\n          }\n          const name = n === 1 ? 'pointing' : `${n}-XBC-Group`;\n          yield { name, domain: 'block', effect: 'col', cols, blocks, poses: new Set(poses), d };\n        }\n      }\n    }\n  }\n}\n","import React from 'react';\nimport styles from './Cell.module.scss';\nimport digits from '../../../../UI/Digits/Digits';\nimport { Notes } from '../../../../../libs/sudoku';\nimport * as positions from '../../../../../libs/position';\n\nconst noteClassName = (n, activeVal, highlighted, effectMarked, marks, pos) => {\n  const classes = [styles.Note];\n  if (n === activeVal) {\n    classes.push(styles.ActiveValue);\n  }\n\n  if (marks) {\n    let src = null;\n    if (highlighted) {\n      src = marks.highlights;\n    } else if (effectMarked) {\n      src = marks.effect;\n    }\n\n    if (src) {\n      const { posNotes, posSubNotes } = src;\n      let { notes, subNotes } = src;\n      if (posNotes && posSubNotes) {\n        notes = posNotes[pos];\n        subNotes = posSubNotes[pos];\n      }\n      if (notes && notes.has(n)) {\n        classes.push(styles.MarkedNoteValue);\n      } else if (subNotes && subNotes.has(n)) {\n        classes.push(styles.MarkedValue);\n      }\n\n      if (highlighted && effectMarked) {\n        if (marks.effect.notes.has(n)) {\n          classes.push(styles.Effected);\n        }\n      }\n    }\n  }\n\n  return classes.join(' ');\n};\n\nconst Cell = React.memo(\n  ({ value, origin, pos, activePos, activeVal, available, showAvail, isNoting, onClick, marks }) => {\n    const { block, row, col } = pos;\n    const classes = [];\n    let content = null;\n    let isSelected = false;\n\n    if (activePos) {\n      const { row: activeRow, col: activeCol, block: activeBlock } = activePos;\n      if (row === activeRow && col === activeCol) {\n        // active\n        isSelected = true;\n        classes.push(styles.Selected);\n      } else if (row === activeRow || col === activeCol || block === activeBlock) {\n        // related area\n        classes.push(styles.Related);\n      }\n    }\n\n    let clickable = available;\n    if (available) {\n      classes.push(styles.Available);\n      if (showAvail) {\n        // show background\n        classes.push(isNoting ? styles.Note : styles.Place);\n      }\n    } else if (available === null) {\n      // deselected\n      classes.push(styles.Available);\n      clickable = true;\n    } else if (!isNoting && !origin && value === activeVal) {\n      // place mode, placed value === activeVal\n      classes.push(styles.Available);\n      clickable = true;\n    }\n\n    // marks\n    let highlighted = false;\n    let domainMarked = false;\n    let effectMarked = false;\n    if (marks) {\n      const { domain, effect, highlights } = marks;\n      if (domain) {\n        const { rows, cols, blocks } = domain;\n        if (rows && rows.has(row)) {\n          domainMarked = true;\n        }\n        if (cols && cols.has(col)) {\n          domainMarked = true;\n        }\n        if (blocks && blocks.has(block)) {\n          domainMarked = true;\n        }\n      }\n      if (effect) {\n        const { rows, cols, blocks, poses } = effect;\n        if (rows && rows.has(row)) {\n          effectMarked = true;\n        }\n        if (cols && cols.has(col)) {\n          effectMarked = true;\n        }\n        if (blocks && blocks.has(block)) {\n          effectMarked = true;\n        }\n        if (poses && poses.has(pos)) {\n          effectMarked = true;\n        }\n      }\n      if (highlights && highlights.poses.has(pos)) {\n        highlighted = true;\n      }\n    }\n    if (highlighted) {\n      classes.push(styles.MarkedHighlight);\n      if (marks.highlights.withoutOutlinePoses && marks.highlights.withoutOutlinePoses.has(pos)) {\n        classes.push(styles.WithoutOutline);\n      }\n    } else if (domainMarked) {\n      classes.push(styles.MarkedDomain);\n    }\n    if (effectMarked) {\n      classes.push(styles.MarkedEffect);\n    }\n\n    if (!Notes.is(value)) {\n      classes.push(styles.Value);\n      // it's placed value\n      !origin && classes.push(styles.Placed);\n      // it's active value\n      if (value === activeVal && !isSelected) {\n        classes.push(styles.ActiveValue);\n      }\n      // it's marked value\n      if (highlighted && marks.highlights.values && marks.highlights.values.has(value)) {\n        classes.push(styles.MarkedValue);\n      }\n\n      content = digits[value];\n    } else {\n      classes.push(styles.Notes);\n      // Set: [1-9]\n      const notes = value;\n      if (Notes.size(notes) > 0) {\n        content = positions.blockShape.map((rows, idx) => (\n          <div key={idx} className={styles.RowNotes}>\n            {rows.map(i => (\n              <div key={i} className={noteClassName(i + 1, activeVal, highlighted, effectMarked, marks, pos)}>\n                {Notes.has(notes, i + 1) ? digits[i + 1] : null}\n              </div>\n            ))}\n          </div>\n        ));\n      }\n    }\n    return (\n      <div className={classes.join(' ')} onClick={clickable ? () => onClick(pos) : undefined}>\n        {content}\n      </div>\n    );\n  }\n);\n\nexport default Cell;\n","import React from 'react';\nimport Cell from './Cell/Cell';\nimport styles from './Block.module.scss';\nimport * as positions from '../../../../libs/position';\n\nconst Block = ({\n  block,\n  activePos,\n  activeVal,\n  cells,\n  availableCells,\n  cellClickedHandler,\n  showAvail,\n  isNoting,\n  marks,\n}) => {\n  const isOdd = block % 2 === 1;\n  return (\n    <div className={`${styles.Block} ${isOdd ? styles.Odd : ''}`}>\n      {positions.getBlockPositions(block).map((rows, idx) => (\n        <div key={idx} className={styles.Row}>\n          {rows.map(pos => (\n            <Cell\n              key={pos.key}\n              {...cells[pos.row][pos.col]}\n              pos={pos}\n              activePos={activePos}\n              activeVal={activeVal}\n              available={availableCells && availableCells[pos.row][pos.col]}\n              onClick={cellClickedHandler}\n              showAvail={showAvail}\n              isNoting={isNoting}\n              marks={marks}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\nexport default Block;\n","import React from 'react';\nimport styled from 'styled-components';\n\n/*\n  make sure the width is the same with a parent's,\n  because padding refer to parent's width.\n*/\nconst Box = styled.div`\n  width: ${({ width }) => (width !== undefined ? width : 'auto')};\n  height: 0;\n  padding-top: ${({ ratio }) => 100 / ratio}%;\n  position: relative;\n`;\n\nconst Content = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  ${({ fixed, scroll }) =>\n    fixed\n      ? `\n    height: 100%;\n    overflow: ${scroll ? `scroll` : 'hidden'};\n  `\n      : `\n  min-height: 100%;\n  `}\n`;\n\nexport default ({ ratio = 1.0, fixed = true, scroll = false, children }) => {\n  return (\n    <Box ratio={ratio}>\n      <Content fixed={fixed} scroll={scroll}>\n        {children}\n      </Content>\n    </Box>\n  );\n};\n","import * as positions from '../../../libs/position';\n\n// percentage for a cell\nexport const perCell = (1 - 1.5 / 100) / 9;\n\nexport const getCoord = ({ row, col }, d) => {\n  const [localRow, localCol] = positions.getDigitLocalPos(d);\n\n  // block margin: 0.25%\n  // cell margin:1%, padding: 2.5% of block\n  const x = (col + (localCol + 0.5) / 3 + 0.35 / 100) * perCell + ((Math.floor(col / 3) + 1) * 0.5 - 0.25) / 100;\n  const y = (row + (localRow + 0.5) / 3 + 0.35 / 100) * perCell + ((Math.floor(row / 3) + 1) * 0.5 - 0.25) / 100;\n\n  return [x, y];\n};\n\nexport const calcDistance = ([sx, sy], [ex, ey]) => {\n  const [dx, dy] = [ex - sx, ey - sy];\n\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\nexport const calcDeg = ([sx, sy], [ex, ey], d) => {\n  const [dx, dy] = [ex - sx, ey - sy];\n  return ((Math.acos(dx / d) * (dy < 0 ? -1 : 1)) / Math.PI) * 180;\n};\n","import React from 'react';\nimport styles from './Arrow.module.scss';\nimport styled from 'styled-components';\nimport * as calc from './calc';\n\n// shortend arrow length, to avoid tail-head contact.\nconst dd = 0.02;\n\nconst Arrow = styled.div.attrs(({ x, y, distance, deg, type }) => ({\n  style: {\n    borderTop: `2px ${type} red`,\n    width: `${distance * 100}%`,\n    height: `${distance * 100}%`,\n    transform: `translate(${(x / distance) * 100}%, ${(y / distance) * 100}%)\n    rotate(${deg}deg)\n    translate(${(dd / 2 / distance) * 100}%)`,\n  },\n}))`\n  user-select: none;\n  pointer-events: none;\n  position: absolute;\n  transform-origin: top left;\n`;\n\nexport default ({ type = 'solid', startPos, startDigit, endPos, endDigit }) => {\n  const sc = calc.getCoord(startPos, startDigit);\n  const ec = calc.getCoord(endPos, endDigit);\n  const distance = calc.calcDistance(sc, ec);\n  const deg = calc.calcDeg(sc, ec, distance);\n\n  return (\n    <Arrow x={sc[0]} y={sc[1]} distance={distance - dd} deg={deg} type={type}>\n      <div className={styles.Pointer}></div>\n    </Arrow>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as positions from '../../../libs/position';\nimport * as calc from './calc';\n\nconst dd = 0.8;\n\nconst Frame = styled.div.attrs(({ sx, sy, ex, ey }) => ({\n  style: {\n    top: `${sy * 100 - dd}%`,\n    left: `${sx * 100 - dd}%`,\n    right: `${(1 - ex) * 100 - dd}%`,\n    bottom: `${(1 - ey) * 100 - dd}%`,\n  },\n}))`\n  user-select: none;\n  pointer-events: none;\n  position: absolute;\n  border: 1px solid red;\n`;\n\nexport default ({ domain, row, col, block }) => {\n  let startRow;\n  let startCol;\n  let endRow;\n  let endCol;\n\n  if (domain === 'row') {\n    startRow = endRow = row;\n\n    startCol = positions.blockCols(block)[0];\n    endCol = startCol + 2;\n  } else if (domain === 'col') {\n    startCol = endCol = col;\n\n    startRow = positions.blockRows(block)[0];\n    endRow = startRow + 2;\n  }\n\n  const [sx, sy] = calc.getCoord({ row: startRow, col: startCol }, 1);\n  const [ex, ey] = calc.getCoord({ row: endRow, col: endCol }, 9);\n  return <Frame sx={sx} sy={sy} ex={ex} ey={ey} />;\n};\n","import React from 'react';\nimport Block from './Block/Block';\nimport AspectRatioBox from '../../UI/AspectRatio/AspectRatioBox';\nimport Arrow from './Arrow';\nimport Frame from './Frame';\nimport styles from './Board.module.scss';\nimport * as positions from '../../../libs/position';\n\nconst Board = ({\n  isComplete,\n  availablePositions,\n  cells,\n  activeVal,\n  activePos,\n  cellClickedHandler,\n  showAvail,\n  isNoting,\n  marks,\n}) => {\n  // active value\n  if (activePos) {\n    // no active value, then selected value is active value for board\n    const { row, col } = activePos;\n    activeVal = cells[row][col].value;\n  }\n\n  const classes = [styles.SudokuBoard];\n  if (isComplete) {\n    classes.push(styles.Complete);\n  }\n  return (\n    <AspectRatioBox ratio={1.0}>\n      <div className={classes.join(' ')}>\n        {marks && marks.frames && marks.frames.map(frame => <Frame {...frame} />)}\n        {marks &&\n          marks.arrows &&\n          marks.arrows.map(arrow => <Arrow key={`${arrow.startPos}-${arrow.endPos}`} {...arrow} />)}\n        {positions.blockShape.map((rows, idx) => (\n          <div key={idx} className={styles.Row}>\n            {rows.map(b => (\n              <Block\n                key={b}\n                block={b}\n                cells={cells}\n                activePos={activePos}\n                activeVal={activeVal}\n                availableCells={availablePositions}\n                cellClickedHandler={cellClickedHandler}\n                showAvail={showAvail}\n                isNoting={isNoting}\n                marks={marks}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n    </AspectRatioBox>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  &::before {\n    content: '';\n    width: 1px;\n    margin-left: -1px;\n    float: left;\n    height: 0;\n    padding-top: ${({ ratio }) => 100 / ratio}%;\n  }\n  &::after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n`;\n\nexport default ({ ratio = 1.0, children, ...props }) => {\n  return (\n    <Wrapper ratio={ratio} {...props}>\n      {children}\n    </Wrapper>\n  );\n};\n","import React, { useCallback } from 'react';\nimport AspectRatioWrapper from '../../../UI/AspectRatio/AspectRatioWrapper';\nimport digits from '../../../UI/Digits/Digits';\nimport styles from './Digits.module.scss';\n\nconst Digits = React.memo(\n  ({\n    isNoting,\n    activeVal,\n    availableDigits,\n    remainingDigits,\n    digitClickedHandler,\n  }) => {\n    const genClassName = useCallback(\n      d => {\n        const classes = [styles.Digit];\n        if (d === activeVal) {\n          classes.push(styles.active);\n        }\n        if (!availableDigits.has(d)) {\n          classes.push(styles.Disabled);\n        }\n        return classes.join(' ');\n      },\n      [activeVal, availableDigits]\n    );\n\n    return (\n      <div className={`${styles.Digits} ${isNoting ? styles.isNoting : ''}`}>\n        <AspectRatioWrapper\n          className={genClassName(1)}\n          onClick={\n            availableDigits.has(1) ? () => digitClickedHandler(1) : undefined\n          }\n        >\n          {digits[1]}\n          <div className={styles.Count}>{digits[remainingDigits[1]]}</div>\n        </AspectRatioWrapper>\n        {[2, 3, 4, 5, 6, 7, 8, 9].map(d => (\n          <div\n            key={d}\n            className={genClassName(d)}\n            onClick={\n              availableDigits.has(d) ? () => digitClickedHandler(d) : undefined\n            }\n          >\n            {digits[d]}\n            <div className={styles.Count}>{digits[remainingDigits[d]]}</div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n);\n\nexport default Digits;\n","import React from 'react';\nimport Digits from './Digits/Digits';\nimport Button from '../../UI/Button/Button';\nimport styles from './Controls.module.scss';\n\nconst Controls = ({\n  cellsRecord,\n  hasPrev,\n  hasNext,\n  jump,\n  jumpToFirst,\n  jumpToLast,\n  remainingDigits,\n  activeVal,\n  availableDigits,\n  digitClickedHandler,\n  showAvail,\n  isNoting,\n  deselectHandler,\n  toggleShowAvailHandler,\n  toggleIsNotingHandler,\n  resetHandler,\n  eraseValueHandler,\n  autoNoteHandler,\n  autoPlacePointingClaimingHandler,\n  tip,\n  tipHandler,\n  cancelTipHandler,\n  changeChainStepHandler,\n  jumpToTrailStartHandler,\n}) => {\n  return (\n    <div className={styles.Controls}>\n      <div className={styles.History}>\n        <Button disabled={!hasPrev} onClick={jumpToFirst}>\n          first\n        </Button>\n        <Button disabled={!hasPrev} onClick={() => jump(-1)}>\n          prev\n        </Button>\n        <span>#{cellsRecord.idx}</span>\n        <Button disabled={!hasNext} onClick={() => jump(1)}>\n          next\n        </Button>\n        <Button disabled={!hasNext} onClick={jumpToLast}>\n          last\n        </Button>\n        <span>{cellsRecord.desc}</span>\n      </div>\n      <div className={styles.Panel}>\n        <Button onClick={resetHandler}>Reset</Button>\n        <Button onClick={eraseValueHandler}>Erase</Button>\n        <Button onClick={deselectHandler}>Deselect</Button>\n        <Button type={showAvail ? 'On' : 'Off'} onClick={toggleShowAvailHandler}>\n          Avail\n        </Button>\n        <Button type={isNoting ? 'On' : 'Off'} onClick={toggleIsNotingHandler}>\n          Note\n        </Button>\n      </div>\n      <Digits\n        isNoting={isNoting}\n        activeVal={activeVal}\n        availableDigits={availableDigits}\n        remainingDigits={remainingDigits}\n        digitClickedHandler={digitClickedHandler}\n      />\n      <div className={styles.Tools}>\n        <Button onClick={autoNoteHandler}>note</Button>\n        <Button onClick={autoPlacePointingClaimingHandler}>place/point/claim</Button>\n        <div className={styles.Tip}>\n          <Button type={tip && 'On'} onClick={tipHandler}>\n            {tip ? tip.name : 'tip'}\n          </Button>\n          {tip && (\n            <Button type={'Warn'} onClick={cancelTipHandler}>\n              X\n            </Button>\n          )}\n          {tip && tip.type === 'chain' && (\n            <>\n              <span className={styles.ChainSteper} onClick={() => changeChainStepHandler(-1)}>\n                &lt;\n              </span>\n              <span className={styles.ChainSteper} onClick={() => changeChainStepHandler(1)}>\n                &gt;\n              </span>\n            </>\n          )}\n          {tip && tip.type === 'trial-error' && (\n            <span className={styles.ChainSteper} onClick={jumpToTrailStartHandler}>\n              &lt;start\n            </span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Controls;\n","import React from 'react';\nimport styles from './Backdrop.module.scss';\n\nconst Backdrop = ({ show, onClick, absolute = false }) => {\n  if (!show) {\n    return null;\n  }\n  const classes = [styles.Backdrop];\n  if (absolute) {\n    classes.push(styles.Absolute);\n  }\n  return <div className={classes.join(' ')} onClick={onClick} />;\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport Backdrop from '../Backdrop/Backdrop';\nimport styles from './Modal.module.scss';\n\nconst Modal = ({ show = false, close, children }) => {\n  const classes = [styles.Modal];\n  if (show) {\n    classes.push(styles.Show);\n  }\n  return (\n    <>\n      <Backdrop show={show} onClick={close} />\n      <div className={classes.join(' ')}>\n        <div className={styles.Close} onClick={close}>\n          X\n        </div>\n        {children}\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(React.memo(Modal), (prevProps, nextProps) => {\n  return !prevProps.show && !nextProps.show;\n});\n","import React from 'react';\nimport styles from './Spinner.module.css';\n\nconst Spinner = () => {\n  return <div className={styles.Loader}>Loading...</div>;\n};\n\nexport default Spinner;\n","import React from 'react';\nimport styles from './Loading.module.scss';\nimport Backdrop from '../Backdrop/Backdrop';\nimport Spinner from '../Spinner/Spinner';\n\nexport default () => {\n  return (\n    <>\n      <Backdrop show absolute />\n      <div className={styles.Spinner}>\n        <Spinner />\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport Button from '../../components/UI/Button/Button';\nimport Board from '../../components/Sudoku/Board/Board';\nimport Controls from '../../components/Sudoku/Controls/Controls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Loading from '../../components/UI/Loading/Loading';\nimport QRCode from 'qrcode.react';\nimport styles from './Main.module.scss';\nimport * as sudokus from '../../libs/sudoku';\nimport { Notes } from '../../libs/sudoku';\nimport { getPosition, findClosedPosPair } from '../../libs/position';\nimport { console } from '../../libs/utils';\n\nconst Sudoku = ({\n  /** @type {sudokus.Sudoku} */ sudoku = new sudokus.Sudoku(),\n  startNewGameHandler,\n  newGameHandler,\n  emptyHandler,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [showShare, setShowShare] = useState(false);\n  const [, setChanged] = useState(0);\n  useEffect(() => {\n    sudoku.subscribe(setChanged);\n    return () => {\n      sudoku.unsubscribe(setChanged);\n    };\n  }, [sudoku]);\n\n  // {pos:[row, col], val:0}\n  const [activeState, setActiveState] = useState({ pos: null, val: 0 });\n  const { pos: activePos, val: activeVal } = activeState;\n  const [showAvail, setShowAvail] = useState(false);\n  const [isNoting, setIsNoting] = useState(true);\n  const [tip, setTip] = useState(null);\n  const [chainStep, setChainStep] = useState(2);\n\n  // calculated states\n  const cellsRecord = sudoku.cellsRecord;\n  const isComplete = sudoku.isComplete;\n  const { cells } = cellsRecord;\n  // cells dependency is needed for memo check\n  const availableDigits = useMemo(() => sudoku.calcAvailableDigits(activePos, cells), [activePos, sudoku, cells]);\n  const availablePositions = useMemo(() => sudoku.calcAvailablePositions(activeVal, cells), [activeVal, sudoku, cells]);\n  const remainingDigits = useMemo(() => sudoku.calcRemainingDigits(cells), [sudoku, cells]);\n\n  // handlers\n  const startGameHandler = useCallback(() => {\n    newGameHandler(sudoku.stringify(cells, { placedAsOrigin: true, withNotes: false }));\n  }, [cells, newGameHandler, sudoku]);\n\n  const editGameHandler = useCallback(() => {\n    newGameHandler(sudoku.stringify(cells, { originAsPlaced: true, withNotes: false }));\n  }, [cells, newGameHandler, sudoku]);\n\n  const cellClickedHandler = useCallback(\n    pos => {\n      if (activeVal !== 0) {\n        // place or note\n        sudoku.updateCellValue(isNoting, pos, activeVal);\n      } else {\n        // select position\n        setActiveState(({ pos: curActivePos }) => {\n          if (curActivePos) {\n            if (pos === curActivePos) {\n              // cancel current selected\n              pos = null;\n            }\n          }\n          return { pos, val: 0 };\n        });\n      }\n    },\n    [activeVal, isNoting, sudoku]\n  );\n\n  const digitClickedHandler = useCallback(\n    (d, force = false) => {\n      // force active specified digit\n      if (!force) {\n        if (!availableDigits.has(d)) {\n          return;\n        }\n\n        if (activePos) {\n          // place or note\n          sudoku.updateCellValue(isNoting, activePos, d);\n        } else {\n          // active a value\n          setActiveState(({ val: curActiveVal }) => {\n            let val = d;\n            if (curActiveVal === d) {\n              // cancel active\n              val = 0;\n            }\n            return { pos: null, val };\n          });\n        }\n      } else {\n        // active a value\n        setActiveState({ pos: null, val: d });\n      }\n    },\n    [activePos, availableDigits, isNoting, sudoku]\n  );\n\n  const deselectHandler = useCallback(() => {\n    setActiveState({ pos: null, val: 0 });\n  }, []);\n\n  const resetHandler = useCallback(() => {\n    if (!window.confirm || window.confirm('Are you sure to reset?')) {\n      sudoku.reset();\n      deselectHandler();\n    }\n  }, [deselectHandler, sudoku]);\n\n  const eraseValueHandler = useCallback(() => {\n    if (activePos) {\n      sudoku.updateCellValue(false, activePos, Notes.new());\n    }\n  }, [activePos, sudoku]);\n\n  const toggleShowAvailHandler = useCallback(() => {\n    setShowAvail(showAvail => !showAvail);\n  }, []);\n\n  const toggleIsNotingHandler = useCallback(() => {\n    setIsNoting(isNoting => !isNoting);\n  }, []);\n\n  const autoNoteHandler = useCallback(() => {\n    sudoku.autoNote();\n  }, [sudoku]);\n\n  const autoPlacePointingClaimingHandler = useCallback(() => {\n    sudoku.autoPlacePointingClaiming();\n  }, [sudoku]);\n\n  const tipHandler = useCallback(() => {\n    if (tip) {\n      // clear\n      setTip(null);\n      sudoku.clearHistoryLowerBound();\n\n      // handle tip\n      sudoku.handleTip(tip);\n    } else {\n      // find tip\n      setIsLoading(true);\n      setTimeout(() => {\n        const t = sudoku.findTip();\n        setIsLoading(false);\n        if (t) {\n          console.log('tip:', t);\n          setTip(t);\n          if (t.type === 'chain') {\n            setChainStep(t.chain.length);\n          } else if (t.type === 'trial-error') {\n            sudoku.setHistoryLowerBound(t.startIdx);\n          }\n        }\n      }, 0);\n    }\n    // deselect\n    deselectHandler();\n  }, [deselectHandler, sudoku, tip]);\n\n  const cancelTipHandler = useCallback(() => {\n    if (tip) {\n      // clear\n      setTip(null);\n      if (tip.type === 'trial-error') {\n        sudoku.clearHistoryLowerBound();\n        sudoku.revertTo(tip.startIdx);\n      }\n    }\n  }, [sudoku, tip]);\n\n  const moveActivePos = useCallback(\n    (dRow, dCol) => {\n      if (activePos) {\n        setActiveState(({ pos: { row: curRow, col: curCol } }) => {\n          const pos = getPosition((curRow + 9 + dRow) % 9, (curCol + 9 + dCol) % 9);\n          return { val: 0, pos };\n        });\n      }\n    },\n    [activePos]\n  );\n\n  const moveActiveVal = useCallback(\n    d => {\n      if (activeVal) {\n        setActiveState(({ val: curVal }) => {\n          const val = ((curVal - 1 + d + 9) % 9) + 1;\n          return { pos: null, val };\n        });\n      }\n    },\n    [activeVal]\n  );\n\n  const marks = useMemo(() => {\n    if (tip) {\n      if (tip.type === 'group') {\n        const { cls, domain, poses, notes } = tip;\n        if (cls === 0) {\n          // naked\n          return { effect: { [domain + 's']: new Set([tip[domain]]), notes }, highlights: { poses, notes } };\n        } else if (cls === 1) {\n          // hidden\n          return { domain: { [domain + 's']: new Set([tip[domain]]), notes }, highlights: { poses, notes } };\n        }\n      } else if (tip.type === 'X-Group') {\n        const { domain, rows, cols, blocks, poses, d } = tip;\n        const notes = new Set([d]);\n        if (domain === 'row') {\n          return { domain: { rows }, effect: { cols, blocks, notes }, highlights: { poses, notes } };\n        } else if (domain === 'col') {\n          return { domain: { cols }, effect: { rows, blocks, notes }, highlights: { poses, notes } };\n        } else if (domain === 'block') {\n          return { domain: { blocks }, effect: { rows, cols, notes }, highlights: { poses, notes } };\n        }\n      } else if (tip.type === 'chain') {\n        const { chain, effectedPoses, d, effectedDs } = tip;\n        const curChain = chain.slice(0, chainStep);\n        const allPoses = [];\n        curChain.forEach(({ pos }) => {\n          if (pos.isGroup) {\n            pos.poses.forEach(p => allPoses.push(p));\n          } else {\n            allPoses.push(pos);\n          }\n        });\n        const poses = new Set(allPoses);\n        const withoutOutlinePoses = new Set(allPoses);\n        // remove head and tail\n        sudokus.getRealPoses(chain[0].pos).forEach(p => withoutOutlinePoses.delete(p));\n        sudokus.getRealPoses(chain[chain.length - 1].pos).forEach(p => withoutOutlinePoses.delete(p));\n\n        const effectedNotes = effectedDs ? effectedDs : new Set([d]);\n        const posNotes = {};\n        const posSubNotes = {};\n        for (const n of curChain) {\n          let _posNotes = posNotes;\n          if (n.d !== d) {\n            _posNotes = posSubNotes;\n          }\n          const { pos } = n;\n          for (const p of sudokus.getRealPoses(pos)) {\n            const subNotes = _posNotes[p] || new Set();\n            _posNotes[p] = subNotes;\n            subNotes.add(n.d);\n          }\n        }\n\n        const frames = [];\n\n        // frames\n        curChain.forEach(({ pos }) => {\n          if (pos.isGroup) {\n            const { key, domain, block, row, col } = pos;\n            frames.push({ key, domain: [...domain][0], block, row, col });\n          }\n        });\n\n        // arrows\n        const arrows = [];\n        let startNode = curChain[0];\n        for (const endNode of curChain.slice(1)) {\n          const [startPos, endPos] = findClosedPosPair(\n            startNode.pos.isGroup ? startNode.pos.poses : [startNode.pos],\n            endNode.pos.isGroup ? endNode.pos.poses : [endNode.pos]\n          );\n\n          arrows.push({\n            startPos,\n            startDigit: startNode.d,\n            endPos,\n            endDigit: endNode.d,\n            type: endNode.val ? 'solid' : 'dashed',\n          });\n          startNode = endNode;\n        }\n        return {\n          frames,\n          arrows,\n          effect: { poses: effectedPoses, notes: effectedNotes },\n          highlights: { poses, posNotes, posSubNotes, withoutOutlinePoses },\n        };\n      } else if (tip.type === 'trial-error') {\n        const { startIdx, pos, d, err } = tip;\n        const values = new Set([d]);\n        let marks = null;\n        if (err === true) {\n          // complete\n          marks = { highlights: { poses: new Set([pos]), values, notes: values } };\n        } else {\n          const { domain, digits } = err;\n          if (cellsRecord.idx >= startIdx) {\n            marks = {\n              effect: { [domain + 's']: new Set([err[domain]]), notes: digits, values: digits },\n              highlights: { poses: new Set([pos]), values, notes: values },\n            };\n          }\n        }\n        if (cellsRecord.idx >= startIdx) {\n          return marks;\n        }\n      }\n    }\n  }, [cellsRecord.idx, chainStep, tip]);\n\n  const changeChainStepHandler = useCallback(\n    d => {\n      if (tip && tip.type === 'chain') {\n        const len = tip.chain.length;\n        setChainStep(s => {\n          return ((s - 1 + d + len) % len) + 1;\n        });\n      }\n    },\n    [tip]\n  );\n\n  const jumpToTrailStartHandler = useCallback(() => {\n    if (tip && tip.type === 'trial-error') {\n      sudoku.jumpTo(tip.startIdx);\n    }\n  }, [sudoku, tip]);\n\n  // event listeners\n  useEffect(() => {\n    const keydownHandler = e => {\n      console.log(e);\n      // TODO: handler other shortcut keys\n      if (e.code.startsWith('Digit')) {\n        const d = parseInt(e.key);\n        digitClickedHandler(d);\n      } else if (e.key === 'N') {\n        startNewGameHandler();\n      } else if (e.key === 'n') {\n        if (e.ctrlKey) {\n          autoNoteHandler();\n        } else {\n          toggleIsNotingHandler();\n        }\n      } else if (e.key === 'a') {\n        toggleShowAvailHandler();\n      } else if (e.key === 'r') {\n        resetHandler();\n      } else if (e.key === 'e') {\n        eraseValueHandler();\n      } else if (e.key === 'b') {\n        if (!activeVal && !activePos) {\n          cellClickedHandler(getPosition(4, 4));\n        }\n      } else if (e.key === 'd' || e.key === 'Escape') {\n        deselectHandler();\n      } else if (e.key === 't') {\n        tipHandler();\n      } else if (e.key === 'x') {\n        cancelTipHandler();\n      } else if (e.key === 'y') {\n        changeChainStepHandler(-1);\n      } else if (e.key === 'u') {\n        changeChainStepHandler(1);\n      } else if (e.key === 'p') {\n        autoPlacePointingClaimingHandler();\n      } else if (e.key === 'h' || e.key === 'ArrowLeft') {\n        if (activePos) {\n          moveActivePos(0, -1);\n        } else if (activeVal) {\n          moveActiveVal(-1);\n        } else {\n          sudoku.jumpToFirst();\n        }\n      } else if (e.key === 'l' || e.key === 'ArrowRight') {\n        if (activePos) {\n          moveActivePos(0, 1);\n        } else if (activeVal) {\n          moveActiveVal(1);\n        } else {\n          sudoku.jumpToLast();\n        }\n      } else if (e.key === 'j' || e.key === 'ArrowDown') {\n        if (activePos) {\n          moveActivePos(1, 0);\n        } else if (activeVal) {\n          moveActiveVal(-1);\n        } else {\n          sudoku.jump(-1);\n        }\n      } else if (e.key === 'k' || e.key === 'ArrowUp') {\n        if (activePos) {\n          moveActivePos(-1, 0);\n        } else if (activeVal) {\n          moveActiveVal(1);\n        } else {\n          sudoku.jump(1);\n        }\n      } else {\n        return;\n      }\n      // e.preventDefault();\n    };\n    document.addEventListener('keydown', keydownHandler);\n\n    return () => {\n      document.removeEventListener('keydown', keydownHandler);\n    };\n  }, [\n    activePos,\n    activeVal,\n    autoNoteHandler,\n    autoPlacePointingClaimingHandler,\n    cancelTipHandler,\n    cellClickedHandler,\n    changeChainStepHandler,\n    deselectHandler,\n    digitClickedHandler,\n    eraseValueHandler,\n    moveActivePos,\n    moveActiveVal,\n    resetHandler,\n    startNewGameHandler,\n    sudoku,\n    tip,\n    tipHandler,\n    toggleIsNotingHandler,\n    toggleShowAvailHandler,\n  ]);\n\n  useEffect(() => {\n    if (tip) {\n      if (tip.includedCells && tip.includedCells.has(cells)) {\n        return;\n      }\n      // clear tip if values changed\n      setTip(null);\n      sudoku.clearHistoryLowerBound();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cells]);\n\n  let shareContent = null;\n  if (showShare) {\n    const url = new URL(window.location);\n    const initialPuzzle = sudoku.initialPuzzle;\n    const curPuzzle = sudoku.stringify();\n    url.search = '?puzzle=' + curPuzzle;\n    shareContent = (\n      <div className={styles.QRCode}>\n        <QRCode size={256} value={url.toString()} />\n        <p>{initialPuzzle}</p>\n        <p>{curPuzzle}</p>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {isLoading && <Loading />}\n      <Modal show={showShare} close={() => setShowShare(false)}>\n        {shareContent}\n      </Modal>\n      <div className={styles.Menu}>\n        <Button onClick={startNewGameHandler}>New</Button>\n        <Button onClick={startGameHandler}>Start</Button>\n        <Button onClick={editGameHandler}>Edit</Button>\n        <Button onClick={emptyHandler}>Empty</Button>\n        <Button onClick={() => setShowShare(true)}>Share</Button>\n      </div>\n      <div className={styles.Board}>\n        <Board\n          isComplete={isComplete}\n          cells={cells}\n          availablePositions={availablePositions}\n          activeVal={activeVal}\n          activePos={activePos}\n          cellClickedHandler={cellClickedHandler}\n          showAvail={showAvail}\n          isNoting={isNoting}\n          marks={marks}\n        />\n      </div>\n      <div className={styles.Controls}>\n        <Controls\n          cellsRecord={cellsRecord}\n          hasPrev={sudoku.hasPrev}\n          hasNext={sudoku.hasNext}\n          jump={sudoku.jump}\n          jumpToFirst={sudoku.jumpToFirst}\n          jumpToLast={sudoku.jumpToLast}\n          remainingDigits={remainingDigits}\n          activeVal={activeVal}\n          availableDigits={availableDigits}\n          digitClickedHandler={digitClickedHandler}\n          showAvail={showAvail}\n          isNoting={isNoting}\n          resetHandler={resetHandler}\n          eraseValueHandler={eraseValueHandler}\n          deselectHandler={deselectHandler}\n          toggleShowAvailHandler={toggleShowAvailHandler}\n          toggleIsNotingHandler={toggleIsNotingHandler}\n          autoNoteHandler={autoNoteHandler}\n          autoPlacePointingClaimingHandler={autoPlacePointingClaimingHandler}\n          tip={tip}\n          tipHandler={tipHandler}\n          cancelTipHandler={cancelTipHandler}\n          changeChainStepHandler={changeChainStepHandler}\n          jumpToTrailStartHandler={jumpToTrailStartHandler}\n        />\n      </div>\n      <div className={styles.Info}></div>\n    </>\n  );\n};\n\nexport default Sudoku;\n","import React, { useState, useCallback, useRef } from 'react';\nimport Button from '../../components/UI/Button/Button';\nimport styles from './NewGame.module.scss';\nimport { useEffect } from 'react';\n\nconst samplePuzzle = `901002708\n570060000\n000000004\n000000000\n700421900\n000098030\n300506070\n009003000\n000080051`;\n\nconst NewGame = ({ cancelNewGameHandler, newGameHandler, error }) => {\n  const [puzzle, setPuzzle] = useState('');\n  const puzzleChangedHandler = useCallback(event => {\n    setPuzzle(event.target.value);\n  }, []);\n\n  const textareaRef = useRef();\n  useEffect(() => {\n    textareaRef.current.focus();\n  }, []);\n\n  // event listeners\n  useEffect(() => {\n    const keydownHandler = e => {\n      // console.log(e);\n      if (e.key === 'Escape') {\n        cancelNewGameHandler();\n      } else if (e.key === 'Enter' && e.shiftKey) {\n        newGameHandler(puzzle);\n      } else {\n        return;\n      }\n      e.preventDefault();\n    };\n    document.addEventListener('keydown', keydownHandler);\n\n    return () => {\n      document.removeEventListener('keydown', keydownHandler);\n    };\n  }, [cancelNewGameHandler, newGameHandler, puzzle]);\n\n  return (\n    <div className={styles.NewGame}>\n      <h1>input a new puzzle</h1>\n      {error && <div className={styles.Error}>{error.message}</div>}\n      <textarea\n        ref={textareaRef}\n        id=\"puzzle\"\n        name=\"puzzle\"\n        inputMode=\"numeric\"\n        onChange={puzzleChangedHandler}\n        value={puzzle}\n        placeholder={samplePuzzle}\n      />\n      <Button onClick={cancelNewGameHandler}>Cancel</Button>\n      <Button onClick={() => newGameHandler(puzzle)}>Done</Button>\n    </div>\n  );\n};\n\nexport default NewGame;\n","import React, { useState, useCallback } from 'react';\nimport Main from './Main';\nimport NewGame from './NewGame';\nimport styles from './Sudoku.module.scss';\nimport * as sudokus from '../../libs/sudoku';\n\nconst Sudoku = () => {\n  const [sudoku, setSudoku] = useState(() => {\n    // get puzzle from url search parameter: puzzle\n    const puzzle = new URLSearchParams(window.location.search).get('puzzle');\n    try {\n      return new sudokus.Sudoku(puzzle);\n    } catch (error) {\n      return new sudokus.Sudoku();\n    }\n  });\n  const [isNewGame, setIsNewGame] = useState(false);\n  const [puzzleError, setPuzzleError] = useState(null);\n\n  // handlers\n  const startNewGameHandler = useCallback(() => {\n    setIsNewGame(true);\n  }, []);\n  const cancelNewGameHandler = useCallback(() => {\n    setIsNewGame(false);\n  }, []);\n\n  const newGameHandler = useCallback(puzzle => {\n    try {\n      setSudoku(new sudokus.Sudoku(puzzle));\n      setIsNewGame(false);\n    } catch (error) {\n      setPuzzleError(error);\n    }\n  }, []);\n\n  const emptyHandler = useCallback(() => {\n    newGameHandler();\n  }, [newGameHandler]);\n\n  let content = null;\n  if (isNewGame) {\n    content = (\n      <NewGame cancelNewGameHandler={cancelNewGameHandler} newGameHandler={newGameHandler} error={puzzleError} />\n    );\n  } else {\n    content = (\n      <Main\n        sudoku={sudoku}\n        startNewGameHandler={startNewGameHandler}\n        newGameHandler={newGameHandler}\n        emptyHandler={emptyHandler}\n      />\n    );\n  }\n\n  return <div className={styles.Sudoku}>{content}</div>;\n};\n\nexport default Sudoku;\n","import React from 'react';\nimport Sudoku from './containers/Sudodu/Sudoku';\n\nexport default function App() {\n  return <Sudoku />;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}