{"version":3,"sources":["libs/utils.js","components/Sudoku/Board/Block/Cell/Cell.module.scss","components/UI/Digits/Digits.module.scss","components/Sudoku/Controls/Controls.module.scss","components/Sudoku/Controls/Digits/Digits.module.scss","containers/Sudodu/Main.module.scss","components/Sudoku/Board/Block/Block.module.scss","components/Sudoku/Board/Board.module.scss","components/UI/Modal/Modal.module.scss","components/UI/Button/Button.module.scss","components/UI/Backdrop/Backdrop.module.scss","containers/Sudodu/NewGame.module.scss","components/Sudoku/Board/Arrow.module.scss","components/UI/Loading/Loading.module.scss","components/UI/Spinner/Spinner.module.css","containers/Sudodu/Sudoku.module.scss","components/UI/Button/Button.js","components/UI/Digits/Digits.js","libs/position.js","libs/sudoku.js","components/Sudoku/Board/Block/Cell/Cell.js","components/Sudoku/Board/Block/Block.js","components/UI/AspectRatio/AspectRatioBox.js","components/Sudoku/Board/calc.js","components/Sudoku/Board/Arrow.js","components/Sudoku/Board/Frame.js","components/Sudoku/Board/Board.js","components/UI/AspectRatio/AspectRatioWrapper.js","components/Sudoku/Controls/Digits/Digits.js","components/Sudoku/Controls/Controls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Spinner/Spinner.js","components/UI/Loading/Loading.js","containers/Sudodu/Main.js","containers/Sudodu/NewGame.js","containers/Sudodu/Sudoku.js","App.js","serviceWorker.js","index.js"],"names":["combx","comb","findNGroupFromLinks","findALSFromPoints","nilFunc","d","n","k","i","res","push","f","aggregateLinks","links","order","startName","endsName","s","link","start","end","v","getAttrDefault","Set","add","cls","options","checkClear","points","Object","values","xpoints","filter","p","ends","size","length","idxes","starts","idx","point","forEach","cleared","has","e","m","window","global","console","enabled","ifEnabled","val","def","this","process","obj","name","defVal","hasOwnProperty","shuffleArray","array","j","Math","floor","random","intersection","setA","setB","_intersection","elem","module","exports","Button","type","onClick","disabled","children","classes","styles","className","join","generateDigit","digitClass","c","color","digitClassName","style","backgroundColor","Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine","getDigitLocalPos","_baseArray","blockShape","indices","blocks","rows","cols","rowColToBlock","row","col","blockRowColIndex","blockRows","block","blockCols","_rowPositions","map","key","toString","rowPositions","_rowRelatedPositions","r","pos","_colPositions","colPositions","_colRelatedPositions","_blockPositions","b","_blocFlattenkPositions","blockPoses","_blockRelatedPositions","_","_relatedPositions","getPosition","getPosBlock","getBlockPositions","getBlockFlattenPositions","getRowPositions","getColPositions","getRelatedBlockPositions","undefined","getRelatedRowPositions","getRelatedColPositions","getRelatedPositions","flattenPositions","flat","_keyPositionMapping","getPositionByKey","mapPositionsTo","getCell","cells","a","sb","getCommonRelatedPositions","poses","rposes","calcPosDistance","aPos","bPos","dRow","dCol","findClosedPosPair","aPoses","bPoses","minDistance","Number","MAX_VALUE","dfsSearchChain","checkChain","genNextChainAndNode","searchChainDFS","findNGroup","findNXGroup","digits","Notes","value","_base","notes","is","ns","Sudoku","puzzle","jumpTo","revert","_historyLowerBound","_curCellsIdx","_cellsHistory","_cut","_rollback","_notify","revertTo","jump","steps","curIdx","jumpToFirst","jumpToLast","lastIdx","_shouldNotify","subscribers","_setPuzzle","defaultPuzzle","_txCells","_setCells","parse","stringify","_checkComplete","slice","action","payload","placedAsOrigin","withNotes","originAsPlaced","origin","isEmpty","entries","rpos","delete","1","2","3","4","5","6","7","8","9","curCells","getCurCells","cell","_txSetCellValue","_startTx","actions","RESET","NOTE","_note","AUTO_NOTE","_autoNote","AUTO_PLACE","_autoPlace","AUTO_POINTING","_autoPointing","AUTO_CLAIMING","_autoClaiming","AUTO_PLACE_POINTING_CLAIMING","_autoPlacePointingClaiming","UPDATE_CELL_VALUE","_updateCellValue","ELIMINATE_GROUP","_eliminateGroup","ELIMINATE_XGROUP","_eliminateXGroup","ELIMINATE_CHAIN","_eliminateChain","ELIMINATE_TRIAL_ERROR","_eliminateTrialError","HANDLE_TIP","_handleTip","commit","log","group","_handlActions","groupEnd","_commit","dispatch","isNoting","chain","tip","domain","getPositions","positions","errDigits","_isComplete","_setCellValue","new","calcAvailableDigits","count","error","placed","br","bc","rb","cb","_noteCellValue","_placeCellValue","oldCell","domains","otherPoses","otherPositions","effect","trial","withoutALS","findGroup","findXGroup","findChain","findTrialError","eliminateGroup","eliminateXGroup","eliminateChain","eliminateTrialError","_disableNotify","startIdx","maxDepth","tryTip","deepTried","updateCellValue","autoPlacePointingClaiming","err","_checkValidity","findTip","handleTip","_enableNotify","endIdx","includedCells","h","getDigitPosesAndLinks","alsSizes","dPoses","dGroupPoses","dAlsces","dLinks","ds","baseData","singlePosSrcs","basicPosSrcs","isGroup","defaultConfig","tryDigitLinks","tryCellLinks","tryGroupLinks","tryAlscLinks","posSrcs","searchChain","earlyExitLen","maxLength","config","getPoses","extraData","td","prepareChainResult","alscSrcs","allClosedConfig","effectedPoses","newValue","keep","keepDs","Error","flattenCells","match","cellPattern","flattenCellValues","startsWith","endsWith","split","parseInt","valuePattern","test","Array","from","getPosTypeSign","isAlsc","startPos","endNode","endPos","hasMulti","hasGroup","hasALS","node","parts","checkExistAndEqual","getRealPoses","cpos","effectedDs","startPoses","targets","tpos","chainHasNode","nextNode","cd","alsc","curNode","rcc","als","nextChainAndNode","hasCommon","newGroupPos","getOtherRowGroupPositions","groupPoses","getOtherColGroupPositions","getOtherBlockGroupPositions","filteredGroupPoses","ok","getGroupPosLink","strongTargets","weakTargets","getOtherGroupPositions","strongPos","opos","false","true","getPosLink","spos","filterPoses","getAlscLink","alscLinks","xPositions","xPoses","blockDigitPoses","digitPoses","sblock","digitGroups","sd","groupPos","gp","getDigitGroupPoses","alses","getPosDigitLinks","xlinks","digitInfos","sort","getPosDomains","digitInfo","alsces","findGroupForALSC","getDigitALSCes","dAlscLinks","getRCCs","t","getDigitAlscAndLinks","otherDs","note","g","rccs","getAToBLinks","getEnd","getRowToColLinks","getRowToBlockLinks","getColToBlockLinks","getPositionsForDigit","types","rc","cr","rcLinks","isXWing","rbLinks","cbLinks","noteClassName","activeVal","highlighted","effectMarked","marks","Note","ActiveValue","src","highlights","posNotes","posSubNotes","subNotes","MarkedNoteValue","MarkedValue","Effected","Cell","React","memo","activePos","available","showAvail","content","isSelected","activeRow","activeCol","activeBlock","Selected","Related","clickable","Available","Place","domainMarked","MarkedHighlight","withoutOutlinePoses","WithoutOutline","MarkedDomain","MarkedEffect","RowNotes","Value","Placed","Block","availableCells","cellClickedHandler","isOdd","Odd","Row","Box","styled","div","width","ratio","Content","fixed","scroll","getCoord","localRow","Arrow","attrs","x","y","distance","deg","borderTop","height","transform","dd","startDigit","endDigit","sc","calc","ec","sx","sy","dx","dy","sqrt","acos","PI","Pointer","Frame","ex","ey","top","left","right","bottom","startRow","startCol","endRow","endCol","Board","isComplete","availablePositions","SudokuBoard","Complete","AspectRatioBox","frames","frame","arrows","arrow","Wrapper","props","Digits","availableDigits","remainingDigits","digitClickedHandler","genClassName","useCallback","Digit","active","Disabled","AspectRatioWrapper","Count","Controls","cellsRecord","hasPrev","hasNext","withALS","deselectHandler","toggleShowAvailHandler","toggleIsNotingHandler","toggleWithALSHandler","resetHandler","eraseValueHandler","autoNoteHandler","autoPlacePointingClaimingHandler","tipHandler","cancelTipHandler","changeChainStepHandler","jumpToTrailStartHandler","History","desc","Panel","Tools","Tip","ChainSteper","Backdrop","show","absolute","Absolute","close","Modal","Show","Close","prevProps","nextProps","Spinner","Loader","sudoku","sudokus","startNewGameHandler","newGameHandler","emptyHandler","useState","isLoading","setIsLoading","showShare","setShowShare","setChanged","useEffect","subscribe","unsubscribe","activeState","setActiveState","setShowAvail","setIsNoting","setWithALS","setTip","chainStep","setChainStep","useMemo","calcAvailablePositions","calcRemainingDigits","startGameHandler","editGameHandler","curActivePos","force","curActiveVal","confirm","reset","autoNote","clearHistoryLowerBound","setTimeout","setHistoryLowerBound","moveActivePos","curRow","curCol","moveActiveVal","domainInfo","curChain","allPoses","effectedNotes","_posNotes","lastAls","lastPos","startNode","len","keydownHandler","code","ctrlKey","isComposing","document","addEventListener","removeEventListener","shareContent","url","URL","location","initialPuzzle","curPuzzle","search","QRCode","Loading","Menu","Info","NewGame","cancelNewGameHandler","setPuzzle","puzzleChangedHandler","event","target","textareaRef","useRef","current","focus","shiftKey","preventDefault","message","ref","id","inputMode","onChange","placeholder","URLSearchParams","get","setSudoku","isNewGame","setIsNewGame","puzzleError","setPuzzleError","Main","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","href","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e1a3bf83.chunk.js","sourcesContent":["const debug = process.env.NODE_ENV !== 'production';\nconst nilFunc = () => {};\n\nfunction* combx(d, n, k) {\n  if (n < k) {\n  } else if (k === 1) {\n    for (let i = d; i < n + d; i++) {\n      yield [i];\n    }\n  } else if (n === k) {\n    const res = [];\n    for (let i = d; i < n + d; i++) {\n      res.push(i);\n    }\n    yield res;\n  } else {\n    // with 0\n    for (const res of combx(d + 1, n - 1, k - 1)) {\n      yield [d, ...res];\n    }\n    // without 0\n    yield* combx(d + 1, n - 1, k);\n  }\n}\n\nexport function* comb(n, k) {\n  yield* combx(0, n, k);\n}\n\nexport const aggregateLinks = (links, order = 0, startName = 'start', endsName = 'ends') => {\n  const s = {};\n  for (const link of links) {\n    const start = link[order];\n    const end = link[(order + 1) % 2];\n    const v = getAttrDefault(s, start, { [startName]: start, [endsName]: new Set() });\n    v[endsName].add(end);\n  }\n  return s;\n};\n\nexport function* findNGroupFromLinks(links, n, cls, options = { checkClear: true }) {\n  const points = Object.values(aggregateLinks(links, cls));\n  const xpoints = points.filter(p => p.ends.size <= n);\n  if (options.checkClear && points.length <= n) {\n    // only return group if count(starts) > n\n    return;\n  }\n\n  for (const idxes of comb(xpoints.length, n)) {\n    // check\n    const starts = new Set();\n    const ends = new Set();\n    for (const idx of idxes) {\n      const point = xpoints[idx];\n      starts.add(point.start);\n      point.ends.forEach(ends.add, ends);\n      if (ends.size > n) {\n        break;\n      }\n    }\n    if (ends.size === n) {\n      let cleared = options.checkClear;\n      if (cleared) {\n        // n is 1, no need to check.\n        // check if group is cleared\n        for (const p of points.filter(p => !starts.has(p.start))) {\n          if ([...p.ends].filter(e => !ends.has(e)).length < p.ends.size) {\n            // other starts has end in ends\n            // need clear\n            cleared = false;\n            break;\n          }\n        }\n      }\n\n      if (!cleared) {\n        yield [starts, ends];\n      }\n    }\n  }\n}\n\nexport function* findALSFromPoints(points, n) {\n  const m = n + 1;\n  const xpoints = points.filter(p => p.ends.size <= m);\n\n  for (const idxes of comb(xpoints.length, n)) {\n    // check\n    const starts = new Set();\n    const ends = new Set();\n    for (const idx of idxes) {\n      const point = xpoints[idx];\n      starts.add(point.start);\n      point.ends.forEach(ends.add, ends);\n      if (ends.size > m) {\n        break;\n      }\n    }\n    if (ends.size === m) {\n      yield [starts, ends];\n    }\n  }\n}\n\nconst _store = {};\nexport const memorize = f => (...args) => {\n  if (_store[f]) {\n    _store[f] = { args: [], res: undefined };\n  }\n  const data = _store[f];\n  if (!(data.args.length === args.length && data.args.reduce((r, arg, idx) => r && Object.is(arg, args[idx]), true))) {\n    data.args = args;\n    data.res = f(...args);\n  }\n  return data.res;\n};\n\nconst _console = (window || global || {}).console || {};\n\nexport const console = {\n  enabled: true,\n  ifEnabled(val, def) {\n    return (this.enabled && val) || def;\n  },\n  get group() {\n    return this.ifEnabled(debug && _console.group, nilFunc);\n  },\n  get groupEnd() {\n    return this.ifEnabled(debug && _console.groupEnd, nilFunc);\n  },\n  get log() {\n    return this.ifEnabled(debug && _console.log, nilFunc);\n  },\n  get error() {\n    return this.ifEnabled(debug && _console.error, nilFunc);\n  },\n};\n\nexport const getAttrDefault = (obj, name, defVal) => {\n  if (!obj.hasOwnProperty(name)) {\n    obj[name] = defVal;\n  }\n  return obj[name];\n};\nexport function shuffleArray(array) {\n  const res = [...array];\n  for (let i = res.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [res[i], res[j]] = [res[j], res[i]];\n  }\n  return res;\n}\n\nexport function intersection(setA, setB) {\n  let _intersection = new Set();\n  for (let elem of setB) {\n    if (setA.has(elem)) {\n      _intersection.add(elem);\n    }\n  }\n  return _intersection;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Value\":\"Cell_Value__1lDbW\",\"Notes\":\"Cell_Notes__10ap7\",\"Related\":\"Cell_Related__ET6Lg\",\"Available\":\"Cell_Available__3vvqK\",\"Place\":\"Cell_Place__3TPHN\",\"Note\":\"Cell_Note__2U2fC\",\"MarkedDomain\":\"Cell_MarkedDomain__31hFJ\",\"MarkedEffect\":\"Cell_MarkedEffect___usON\",\"MarkedHighlight\":\"Cell_MarkedHighlight__2O1xC\",\"WithoutOutline\":\"Cell_WithoutOutline__35g8t\",\"ActiveValue\":\"Cell_ActiveValue__3McOV\",\"Placed\":\"Cell_Placed__3HOvj\",\"Selected\":\"Cell_Selected__2LsAU\",\"MarkedValue\":\"Cell_MarkedValue__dMEee\",\"MarkedNoteValue\":\"Cell_MarkedNoteValue__24o3W\",\"Effected\":\"Cell_Effected__HnLYk\",\"RowNotes\":\"Cell_RowNotes__1QNhn\",\"PlacedValue\":\"Cell_PlacedValue__2vP-2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Zero\":\"Digits_Zero__2W6xd\",\"One\":\"Digits_One__-wXsd\",\"Two\":\"Digits_Two__5WRCG\",\"Three\":\"Digits_Three__1GKk-\",\"Four\":\"Digits_Four__1ahFU\",\"Five\":\"Digits_Five__3m1dx\",\"Six\":\"Digits_Six__kvriF\",\"Seven\":\"Digits_Seven__2_nmU\",\"Eight\":\"Digits_Eight__GNMw3\",\"Nine\":\"Digits_Nine__3u9wd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Controls\":\"Controls_Controls__1Accx\",\"History\":\"Controls_History__2GRXF\",\"Panel\":\"Controls_Panel__1AK4m\",\"Tools\":\"Controls_Tools__1-fbY\",\"Tip\":\"Controls_Tip__2IHiE\",\"ChainSteper\":\"Controls_ChainSteper__RRrIh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Digits\":\"Digits_Digits__3-KZF\",\"Digit\":\"Digits_Digit__1MXW9\",\"digit\":\"Digits_digit__3Mpxe\",\"Disabled\":\"Digits_Disabled__1N4Jw\",\"active\":\"Digits_active__2AexO\",\"Count\":\"Digits_Count__Eq4Q5\",\"isNoting\":\"Digits_isNoting__-OBTK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Main_Menu__3YGZL\",\"Board\":\"Main_Board__3XJet\",\"Controls\":\"Main_Controls__1MSdo\",\"Info\":\"Main_Info__2888w\",\"QRCode\":\"Main_QRCode__1jj5B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Block\":\"Block_Block__1kJyh\",\"Odd\":\"Block_Odd__2xFZf\",\"Row\":\"Block_Row__11Olq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SudokuBoard\":\"Board_SudokuBoard__3cPYp\",\"Row\":\"Board_Row__2r5V5\",\"Complete\":\"Board_Complete__UekFD\",\"SudokuComplete\":\"Board_SudokuComplete__13blN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__31OI7\",\"Show\":\"Modal_Show__d05bc\",\"Close\":\"Modal_Close__IQjCe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"Warn\":\"Button_Warn__1cddQ\",\"On\":\"Button_On__3d77T\",\"Off\":\"Button_Off__R9f9J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__Vem4f\",\"Absolute\":\"Backdrop_Absolute__Z8lxG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewGame\":\"NewGame_NewGame__2hKIv\",\"Error\":\"NewGame_Error__mao55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pointer\":\"Arrow_Pointer__1rYd7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Loading_Spinner__1CFco\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load2\":\"Spinner_load2__2gkgc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sudoku\":\"Sudoku_Sudoku__3acWS\"};","import React from 'react';\nimport styles from './Button.module.scss';\n\nconst Button = ({ type, onClick, disabled = false, children }) => {\n  const classes = [styles.Button];\n  if (type) {\n    classes.push(styles[type]);\n  }\n  return (\n    <button className={classes.join(' ')} disabled={disabled} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport styles from './Digits.module.scss';\n\nconst styleColor = c => (c ? { backgroundColor: c } : {});\n\nconst generateDigit = digitClass => ({\n  color,\n  digitClassName = 'digit',\n  className = '',\n  children,\n}) => (\n  <div\n    className={`${digitClass} ${digitClassName} ${className}`}\n    style={styleColor(color)}\n  >\n    {children}\n  </div>\n);\n\nexport const Zero = generateDigit(styles.Zero);\nexport const One = generateDigit(styles.One);\nexport const Two = generateDigit(styles.Two);\nexport const Three = generateDigit(styles.Three);\nexport const Four = generateDigit(styles.Four);\nexport const Five = generateDigit(styles.Five);\nexport const Six = generateDigit(styles.Six);\nexport const Seven = generateDigit(styles.Seven);\nexport const Eight = generateDigit(styles.Eight);\nexport const Nine = generateDigit(styles.Nine);\n\nexport default [\n  <Zero />,\n  <One />,\n  <Two />,\n  <Three />,\n  <Four />,\n  <Five />,\n  <Six />,\n  <Seven />,\n  <Eight />,\n  <Nine />,\n];\n","export const getDigitLocalPos = d => [Math.floor((d - 1) / 3), (d - 1) % 3];\nconst _baseArray = [0, 1, 2, 3, 4, 5, 6, 7, 8];\nexport const blockShape = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n];\n\nexport const indices = _baseArray;\nexport const blocks = _baseArray;\nexport const rows = _baseArray;\nexport const cols = _baseArray;\n\n// (row, col)->block\nexport const rowColToBlock = (row, col) => Math.floor(row / 3) * 3 + Math.floor(col / 3);\n// (row, col)-> index in block\nexport const blockRowColIndex = (row, col) => (row % 3) * 3 + (col % 3);\n// rows of block\nexport const blockRows = block => {\n  const start = Math.floor(block / 3) * 3;\n  return [start, start + 1, start + 2];\n};\n// cols of block\nexport const blockCols = block => {\n  const start = (block % 3) * 3;\n  return [start, start + 1, start + 2];\n};\n\nconst _rowPositions = _baseArray.map(row =>\n  _baseArray.map(col => ({\n    key: `r${row}c${col}`,\n    idx: row * 9 + col,\n    row,\n    col,\n    block: rowColToBlock(row, col),\n    toString() {\n      return this.key;\n    },\n  }))\n);\nexport const rowPositions = _rowPositions;\n\n// row positions without col\nconst _rowRelatedPositions = _baseArray.map(r => _baseArray.map(c => _rowPositions[r].filter(pos => pos.col !== c)));\nconst _colPositions = _baseArray.map(c => _baseArray.map(r => _rowPositions[r][c]));\nexport const colPositions = _colPositions;\n// col positions without row\nconst _colRelatedPositions = _baseArray.map(c => _baseArray.map(r => _colPositions[c].filter(pos => pos.row !== r)));\n\n// block positions 3x3\nconst _blockPositions = _baseArray.map(b => blockRows(b).map(row => _rowPositions[row].filter(pos => pos.block === b)));\n\nconst _blocFlattenkPositions = _baseArray.map(b => {\n  const blockPoses = _blockPositions[b];\n  return [...blockPoses[0], ...blockPoses[1], ...blockPoses[2]];\n});\n// block positions without it's row/col index\nconst _blockRelatedPositions = _baseArray.map(b =>\n  _baseArray.map(i => _blocFlattenkPositions[b].filter((_, idx) => idx !== i))\n);\n\n// positions without row/col\nconst _relatedPositions = _baseArray.map(r =>\n  _baseArray.map(c => {\n    const b = rowColToBlock(r, c);\n    const res = [];\n    _rowPositions.forEach(rows =>\n      rows.forEach(pos => {\n        const { row, col, block } = pos;\n        if (r === row && c === col && b === block) {\n          return;\n        }\n        if (r === row || c === col || b === block) {\n          res.push(pos);\n        }\n      })\n    );\n    return res;\n  })\n);\n\nexport const getPosition = (row, col) => _rowPositions[row][col];\n\nexport const getPosBlock = (row, col) => _rowPositions[row][col].block;\n\nexport const getBlockPositions = block => _blockPositions[block];\nexport const getBlockFlattenPositions = block => _blocFlattenkPositions[block];\nexport const getRowPositions = row => _rowPositions[row];\nexport const getColPositions = col => _colPositions[col];\n\nexport const getRelatedBlockPositions = ({ row, col, block }) =>\n  _blockRelatedPositions[block === undefined ? rowColToBlock(row, col) : block][blockRowColIndex(row, col)];\nexport const getRelatedRowPositions = ({ row, col }) => _rowRelatedPositions[row][col];\nexport const getRelatedColPositions = ({ row, col }) => _colRelatedPositions[col][row];\nexport const getRelatedPositions = ({ row, col }) => _relatedPositions[row][col];\n\n// all positions from left to right, top to bottom.\n// used to iterate all positions\nexport const flattenPositions = _rowPositions.flat();\n\nconst _keyPositionMapping = {};\nflattenPositions.forEach(pos => {\n  _keyPositionMapping[pos.key] = pos;\n});\n\nexport const getPositionByKey = key => _keyPositionMapping[key];\n\nexport const mapPositionsTo = f => _baseArray.map(row => _baseArray.map(col => f(row, col)));\n\nexport const getCell = (cells, pos) => cells[pos.row][pos.col];\n\nconst _intersection = (a, b) => {\n  const sb = new Set(b);\n  return a.filter(v => sb.has(v));\n};\n\nexport const getCommonRelatedPositions = (...poses) => {\n  switch (poses.length) {\n    case 0:\n      return [];\n    case 1:\n      return getRelatedPositions(poses[0]);\n    default:\n      const [pos, ...rposes] = poses;\n      return _intersection(getRelatedPositions(pos), getCommonRelatedPositions(...rposes));\n  }\n};\n\nconst calcPosDistance = (aPos, bPos) => {\n  const dRow = aPos.row - bPos.row;\n  const dCol = aPos.col - bPos.col;\n  return dRow * dRow + dCol * dCol;\n};\n\nexport const findClosedPosPair = (aPoses, bPoses) => {\n  if (aPoses.length === 1 && bPoses === 1) {\n    return [aPoses[0], bPoses[0]];\n  }\n\n  let minDistance = Number.MAX_VALUE;\n  let a = null;\n  let b = null;\n  for (const aPos of aPoses) {\n    for (const bPos of bPoses) {\n      const d = calcPosDistance(aPos, bPos);\n      if (d < minDistance) {\n        minDistance = d;\n        a = aPos;\n        b = bPos;\n      }\n    }\n  }\n\n  return [a, b];\n};\n","import {\n  flattenPositions,\n  getRelatedPositions,\n  mapPositionsTo,\n  rowColToBlock,\n  getRelatedRowPositions,\n  getRelatedColPositions,\n  getRelatedBlockPositions,\n  getRowPositions,\n  getColPositions,\n  getBlockFlattenPositions,\n} from './position';\nimport * as positions from './position';\nimport {\n  aggregateLinks,\n  findNGroupFromLinks,\n  console,\n  getAttrDefault,\n  shuffleArray,\n  findALSFromPoints,\n  intersection,\n} from './utils';\n\nexport const digits = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nexport class Notes {\n  static _base = 1 << 16;\n  static new(...notes) {\n    let value = Notes._base;\n    for (const n of notes) {\n      value |= 1 << n;\n    }\n    return value;\n  }\n\n  static isEmpty(value) {\n    return value === this._base;\n  }\n\n  static size(value) {\n    let s = 0;\n    for (let n = 1; n <= 9; n++) {\n      value = value >> 1;\n      if ((value & 1) === 1) {\n        s++;\n      }\n    }\n    return s;\n  }\n\n  static first(value) {\n    for (let n = 1; n <= 9; n++) {\n      if (Notes.has(value, n)) {\n        return n;\n      }\n    }\n  }\n\n  static entries(value) {\n    const res = [];\n    for (let n = 1; n <= 9; n++) {\n      if (Notes.has(value, n)) {\n        res.push(n);\n      }\n    }\n    return res;\n  }\n\n  static is(value) {\n    return (value & this._base) !== 0;\n  }\n\n  static has(value, n) {\n    return Notes.is(value) && (value & (1 << n)) !== 0;\n  }\n\n  static add(value, n) {\n    return value | (1 << n);\n  }\n\n  static delete(value, ...ns) {\n    for (const n of ns) {\n      value &= ~(1 << n);\n    }\n    return value;\n  }\n}\n\nexport class Sudoku {\n  static defaultPuzzle = `\n  000000000 000000000 000000000\n  000000000 000000000 000000000\n  000000000 000000000 000000000\n `;\n  constructor(puzzle) {\n    this._shouldNotify = true;\n    this.subscribers = [];\n    this._setPuzzle(puzzle || Sudoku.defaultPuzzle);\n  }\n\n  _setPuzzle(puzzle) {\n    // clear history\n    this._cellsHistory = [];\n    this._curCellsIdx = -1;\n    this._txCells = null;\n    this._historyLowerBound = 0;\n    this._setCells(Sudoku.parse(puzzle), 'init');\n    this.puzzle = this.stringify();\n    this._checkComplete();\n    // FIXME:\n    this._notify();\n  }\n\n  setHistoryLowerBound(n) {\n    this._historyLowerBound = n;\n  }\n\n  clearHistoryLowerBound() {\n    this._historyLowerBound = 0;\n  }\n\n  get isComplete() {\n    return this._isComplete;\n  }\n\n  get initialPuzzle() {\n    return this.puzzle;\n  }\n\n  get cells() {\n    return this._cellsHistory[this._curCellsIdx].cells;\n  }\n\n  get cellsRecord() {\n    return this._cellsHistory[this._curCellsIdx];\n  }\n\n  get curIdx() {\n    return this._curCellsIdx;\n  }\n\n  get lastIdx() {\n    return this._cellsHistory.length - 1;\n  }\n\n  _cut() {\n    if (this._curCellsIdx + 1 < this._cellsHistory.length) {\n      this._cellsHistory = this._cellsHistory.slice(0, this._curCellsIdx + 1);\n    }\n  }\n\n  _setCells(cells, action, payload = {}) {\n    this._cut();\n    this._curCellsIdx++;\n    this._cellsHistory.push({\n      idx: this._curCellsIdx,\n      cells,\n      action,\n      payload,\n      get desc() {\n        return `[${action}] ${payload.name || ''}`;\n      },\n    });\n  }\n\n  get hasPrev() {\n    return this._curCellsIdx > 0;\n  }\n\n  get hasNext() {\n    return this._curCellsIdx < this._cellsHistory.length - 1;\n  }\n\n  jumpTo = (idx, revert = false) => {\n    if (idx < this._historyLowerBound) {\n      // can't set lower than lower bound.\n      return;\n    }\n\n    this._curCellsIdx = idx;\n\n    if (this._curCellsIdx < 0) {\n      this._curCellsIdx = 0;\n    } else if (this._curCellsIdx >= this._cellsHistory.length) {\n      this._curCellsIdx = this._cellsHistory.length - 1;\n    }\n    if (revert) {\n      this._cut();\n    }\n\n    this._rollback();\n\n    this._notify();\n  };\n\n  revertTo = idx => {\n    this.jumpTo(idx, true);\n  };\n\n  jump = steps => {\n    this.jumpTo(this.curIdx + steps);\n  };\n\n  jumpToFirst = () => {\n    this.jumpTo(0);\n  };\n\n  jumpToLast = () => {\n    this.jumpTo(this.lastIdx);\n  };\n\n  subscribe(f) {\n    this.subscribers.push(f);\n  }\n\n  unsubscribe(f) {\n    this.subscribers = this.subscribers.filter(s => s !== f);\n  }\n\n  _disableNotify() {\n    this._shouldNotify = false;\n  }\n\n  _enableNotify() {\n    this._shouldNotify = true;\n  }\n\n  _notify() {\n    if (this._shouldNotify) {\n      this._checkComplete();\n      for (const f of this.subscribers) {\n        f(n => n + 1);\n      }\n    }\n  }\n\n  static cellPattern = /(\\d)|(p\\d)|(n[1-9]*N)|\\./g;\n  static valuePattern = /^[1-9]$/;\n\n  static parse(puzzle) {\n    if (!puzzle || puzzle.length < 81) {\n      throw new Error(`bad sudoku puzzle format [${puzzle}]`);\n    }\n    // split cell\n    const flattenCells = puzzle.match(Sudoku.cellPattern);\n    if (flattenCells.length !== 81) {\n      throw new Error(`bad sudoku puzzle format [${puzzle}]`);\n    }\n\n    // parse values\n    const flattenCellValues = flattenCells.map(cell => {\n      if (cell.startsWith('n') && cell.endsWith('N')) {\n        // it's note\n        const notes = cell\n          .slice(1, -1)\n          .split('')\n          .map(s => parseInt(s));\n        return { value: Notes.new(...notes) };\n      } else if (cell.startsWith('p')) {\n        // it's placed value\n        return { value: parseInt(cell[1]) };\n      } else if (Sudoku.valuePattern.test(cell)) {\n        // it's value\n        return {\n          value: parseInt(cell),\n          // puzzle origin value\n          origin: true,\n        };\n      } else if (cell === '0' || cell === '.') {\n        // it's empty\n        return { value: Notes.new() };\n      }\n      throw new Error('impossible');\n    });\n\n    // organize the values\n    const cells = Array.from(new Array(9)).map(() => new Array(9));\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        cells[i][j] = flattenCellValues[9 * i + j];\n      }\n    }\n    // TODO: check board integrity, no duplicated digit in any row, col, block.\n    return cells;\n  }\n\n  stringify(cells, options = {}) {\n    options = { placedAsOrigin: false, withNotes: true, originAsPlaced: false, ...options };\n    cells = cells || this.cells;\n    const res = [];\n    for (const pos of flattenPositions) {\n      const { origin, value } = cells[pos.row][pos.col];\n      if (Notes.is(value)) {\n        if (!options.withNotes) {\n          res.push('0');\n          continue;\n        }\n\n        // notes\n        if (Notes.isEmpty(value)) {\n          res.push('0');\n        } else {\n          res.push('n', ...Notes.entries(value), 'N');\n        }\n      } else if ((options.placedAsOrigin || origin) && !options.originAsPlaced) {\n        // origin\n        res.push(value);\n      } else {\n        // placed\n        res.push('p', value);\n      }\n    }\n    return res.join('');\n  }\n\n  // calcuate available digits for cell at postion <pos>.\n  calcAvailableDigits(pos) {\n    const res = new Set([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    if (!pos) {\n      return res;\n    }\n\n    const cell = this.getCell(pos);\n    if (cell.origin) {\n      // origin can't be changed\n      return new Set();\n    }\n\n    for (const rpos of getRelatedPositions(pos)) {\n      const { value } = this.getCell(rpos);\n      if (!Notes.is(value)) {\n        res.delete(value);\n      }\n    }\n    return res;\n  }\n\n  calcRemainingDigits() {\n    const res = { 1: 9, 2: 9, 3: 9, 4: 9, 5: 9, 6: 9, 7: 9, 8: 9, 9: 9 };\n    for (const pos of flattenPositions) {\n      const { value } = this.getCell(pos);\n      if (!Notes.is(value)) {\n        res[value]--;\n      }\n    }\n    return res;\n  }\n\n  calcAvailablePositions(d) {\n    if (!(d >= 1 && d <= 9)) {\n      return null;\n    }\n\n    const res = mapPositionsTo(() => true);\n    for (const pos of flattenPositions) {\n      const { value } = this.getCell(pos);\n      if (!Notes.is(value)) {\n        res[pos.row][pos.col] = false;\n        if (value === d) {\n          // clear\n          for (const { row, col } of getRelatedPositions(pos)) {\n            res[row][col] = false;\n          }\n        }\n      }\n    }\n    return res;\n  }\n\n  _txSetCellValue(cells, pos, value) {\n    const { row, col } = pos;\n    const { value: oldValue } = this.getCell(pos);\n    if (value === oldValue) {\n      return cells;\n    }\n\n    const curCells = this.getCurCells();\n    if (cells === curCells) {\n      cells = [...curCells];\n    }\n    if (cells[row] === curCells[row]) {\n      cells[row] = [...curCells[row]];\n    }\n    if (cells[row][col] === curCells[row][col]) {\n      cells[row][col] = { ...curCells[row][col] };\n    }\n    cells[row][col].value = value;\n    if (!Notes.is(value)) {\n      // updated related notes\n      for (const rpos of getRelatedPositions(pos)) {\n        const cell = this.getCell(rpos);\n        if (!Notes.is(cell.value)) {\n          // is not notes\n          continue;\n        }\n        cells = this._txSetCellValue(cells, rpos, Notes.delete(cell.value, value));\n      }\n    }\n    return cells;\n  }\n\n  getCurCells() {\n    if (this._txCells) {\n      // in transaction\n      return this._txCells;\n    }\n    return this.cells;\n  }\n\n  getCell({ row, col }) {\n    return this.getCurCells()[row][col];\n  }\n\n  _startTx() {\n    if (!this._txCells) {\n      this._txCells = this.getCurCells();\n    }\n  }\n\n  _commit(action, payload) {\n    if (this._txCells && this._txCells !== this.cells) {\n      this._setCells(this._txCells, action, payload);\n      this._txCells = null;\n      this._notify();\n    }\n  }\n\n  _rollback() {\n    this._txCells = null;\n  }\n\n  _setCellValue(pos, value) {\n    this._startTx();\n    this._txCells = this._txSetCellValue(this._txCells, pos, value);\n  }\n\n  // actions\n  static actions = {\n    RESET: 'Reset',\n    NOTE: 'Note',\n    UPDATE_CELL_VALUE: 'Update Cell Value',\n    AUTO_NOTE: 'Auto Note',\n    AUTO_POINTING: 'Auto Pointing',\n    AUTO_CLAIMING: 'Auto Claiming',\n    AUTO_PLACE: 'Auto Place',\n    AUTO_PLACE_POINTING_CLAIMING: 'Auto Place/Pointing/Claiming',\n    ELIMINATE_GROUP: 'X Group',\n    ELIMINATE_XGROUP: 'X XGroup',\n    ELIMINATE_CHAIN: 'X Chain',\n    ELIMINATE_TRIAL_ERROR: 'X Trial Error',\n    HANDLE_TIP: 'Handle Tip',\n  };\n\n  _handlActions(action, payload) {\n    switch (action) {\n      case Sudoku.actions.RESET:\n        this._setPuzzle(this.puzzle);\n        break;\n      case Sudoku.actions.NOTE:\n        this._note(payload);\n        break;\n      case Sudoku.actions.AUTO_NOTE:\n        this._autoNote();\n        break;\n      case Sudoku.actions.AUTO_PLACE:\n        this._autoPlace();\n        break;\n      case Sudoku.actions.AUTO_POINTING:\n        this._autoPointing();\n        break;\n      case Sudoku.actions.AUTO_CLAIMING:\n        this._autoClaiming();\n        break;\n      case Sudoku.actions.AUTO_PLACE_POINTING_CLAIMING:\n        this._autoPlacePointingClaiming();\n        break;\n      case Sudoku.actions.UPDATE_CELL_VALUE:\n        this._updateCellValue(payload);\n        break;\n      case Sudoku.actions.ELIMINATE_GROUP:\n        this._eliminateGroup(payload);\n        break;\n      case Sudoku.actions.ELIMINATE_XGROUP:\n        this._eliminateXGroup(payload);\n        break;\n      case Sudoku.actions.ELIMINATE_CHAIN:\n        this._eliminateChain(payload);\n        break;\n      case Sudoku.actions.ELIMINATE_TRIAL_ERROR:\n        this._eliminateTrialError(payload);\n        break;\n      case Sudoku.actions.HANDLE_TIP:\n        this._handleTip(payload);\n        break;\n      default:\n        break;\n    }\n  }\n\n  dispatch(action, payload, options) {\n    options = { commit: true, log: true, ...(options || {}) };\n    if (options.log) {\n      console.group(`[${action}]`);\n      payload && console.log('->payload:', payload);\n      options && console.log('->options:', options);\n    }\n\n    this._startTx();\n    this._handlActions(action, payload);\n\n    if (options.log) {\n      console.groupEnd();\n    }\n\n    if (options.commit) {\n      this._commit(action, payload);\n    }\n  }\n\n  reset() {\n    this.dispatch(Sudoku.actions.RESET);\n  }\n\n  note(pos) {\n    this.dispatch(Sudoku.actions.NOTE, pos);\n  }\n\n  updateCellValue(isNoting, pos, value) {\n    this.dispatch(Sudoku.actions.UPDATE_CELL_VALUE, { isNoting, pos, value });\n  }\n\n  autoNote() {\n    this.dispatch(Sudoku.actions.AUTO_NOTE);\n  }\n\n  autoPlacePointingClaiming() {\n    this.dispatch(Sudoku.actions.AUTO_PLACE_POINTING_CLAIMING);\n  }\n\n  autoPlace() {\n    this.dispatch(Sudoku.actions.AUTO_PLACE);\n  }\n\n  autoPointing() {\n    this.dispatch(Sudoku.actions.AUTO_POINTING);\n  }\n\n  autoClaiming() {\n    this.dispatch(Sudoku.actions.AUTO_CLAIMING);\n  }\n\n  eliminateGroup(group) {\n    this.dispatch(Sudoku.actions.ELIMINATE_GROUP, group);\n  }\n\n  eliminateXGroup(group) {\n    this.dispatch(Sudoku.actions.ELIMINATE_XGROUP, group);\n  }\n\n  eliminateChain(chain) {\n    this.dispatch(Sudoku.actions.ELIMINATE_CHAIN, chain);\n  }\n\n  eliminateTrialError(res) {\n    this.dispatch(Sudoku.actions.ELIMINATE_TRIAL_ERROR, res);\n  }\n\n  handleTip(tip) {\n    this.dispatch(Sudoku.actions.HANDLE_TIP, tip);\n  }\n\n  _checkValidity() {\n    // check every house should has 9 digits\n    for (const [domain, getPositions] of [\n      ['row', getRowPositions],\n      ['col', getColPositions],\n      ['block', getBlockFlattenPositions],\n    ]) {\n      for (const idx of positions.indices) {\n        const errDigits = new Set(digits);\n        for (const pos of getPositions(idx)) {\n          const { value } = this.getCell(pos);\n          if (domain === 'row' && Notes.isEmpty(value)) {\n            // check empty.\n            return { domain: 'cell', cell: pos, digits: new Set() };\n          }\n\n          if (Notes.is(value)) {\n            Notes.entries(value).forEach(v => errDigits.delete(v));\n          } else {\n            errDigits.delete(value);\n          }\n        }\n        if (errDigits.size !== 0) {\n          return { domain, [domain]: idx, digits: errDigits };\n        }\n      }\n    }\n  }\n\n  _checkComplete() {\n    for (const pos of positions.flattenPositions) {\n      const { value } = this.getCell(pos);\n      if (Notes.is(value)) {\n        this._isComplete = false;\n        return false;\n      }\n    }\n    this._isComplete = true;\n    return true;\n  }\n\n  _note(pos) {\n    const { value } = this.getCell(pos);\n    if (!Notes.is(value)) {\n      return;\n    }\n    if (Notes.size(value) > 0) {\n      // only note empty cell. erase before re-note.\n      return;\n    }\n    this._setCellValue(pos, Notes.new(...this.calcAvailableDigits(pos)));\n  }\n\n  _autoNote() {\n    for (const pos of flattenPositions) {\n      this.dispatch(Sudoku.actions.NOTE, pos, { commit: false, log: false });\n    }\n  }\n\n  _autoPlacePointingClaiming() {\n    try {\n      let count = 0;\n      do {\n        count = 0;\n        count += this._autoPlace();\n        this._commit(Sudoku.actions.AUTO_PLACE);\n        count += this._autoPointing();\n        this._commit(Sudoku.actions.AUTO_POINTING);\n        count += this._autoClaiming();\n        this._commit(Sudoku.actions.AUTO_CLAIMING);\n      } while (count > 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // auto place naked/hidden single value\n  _autoPlace() {\n    let count = 0;\n    let placed = false;\n\n    console.group('[auto place]');\n    do {\n      placed = false;\n      // 0:naked, 1:hidden\n      for (const cls of [0, 1]) {\n        for (const group of findNGroup(this.getCurCells(), 1, cls)) {\n          this.dispatch(Sudoku.actions.ELIMINATE_GROUP, group, { commit: false });\n          count++;\n          placed = true;\n          break;\n        }\n        /* use current cells for every find */\n        if (placed) {\n          continue;\n        }\n      }\n    } while (placed);\n    console.groupEnd();\n\n    return count;\n  }\n\n  // block eliminate row/col\n  _autoPointing() {\n    let count = 0;\n    console.group('[auto pointing]');\n    for (const group of findNXGroup(this.getCurCells(), 1, { br: true, bc: true })) {\n      console.log(group);\n      this.dispatch(Sudoku.actions.ELIMINATE_XGROUP, group, { commit: false });\n      count++;\n    }\n    console.groupEnd();\n    return count;\n  }\n\n  // row/col eliminate block\n  _autoClaiming() {\n    let count = 0;\n    console.group('[auto claiming]');\n    for (const group of findNXGroup(this.getCurCells(), 1, { rb: true, cb: true })) {\n      this.dispatch(Sudoku.actions.ELIMINATE_XGROUP, group, { commit: false });\n      count++;\n    }\n    console.groupEnd();\n    return count;\n  }\n\n  _updateCellValue({ isNoting, pos, value }) {\n    if (isNoting) {\n      this._noteCellValue(pos, value);\n    } else {\n      this._placeCellValue(pos, value);\n    }\n  }\n\n  _placeCellValue(pos, value) {\n    const oldCell = this.getCell(pos);\n    if (oldCell.origin) {\n      // can't place origin value\n      return;\n    }\n\n    if (oldCell.value === value) {\n      // cancel current value\n      value = Notes.new();\n    }\n\n    this._setCellValue(pos, value);\n  }\n\n  _noteCellValue(pos, n) {\n    const { value } = this.getCell(pos);\n    if (!Notes.is(value)) {\n      // can't note cell with value.\n      return;\n    }\n\n    // note\n    let notes = value;\n    if (Notes.has(notes, n)) {\n      notes = Notes.delete(notes, n);\n    } else {\n      notes = Notes.add(notes, n);\n    }\n\n    this._setCellValue(pos, notes);\n  }\n\n  findGroup(cells) {\n    for (let n = 1; n <= 8; n++) {\n      // 0:naked group, 1: hidden group\n      for (const cls of [0, 1]) {\n        for (const group of findNGroup(cells, n, cls)) {\n          // only return the first group\n          group.type = 'group';\n          return group;\n        }\n      }\n    }\n  }\n\n  _eliminateGroup(group) {\n    if (group.n === 1) {\n      // place value\n      const pos = [...group.poses][0];\n      const d = [...group.notes][0];\n\n      this._setCellValue(pos, d);\n    } else if (group.cls === 0) {\n      // naked\n      // to eliminate other cells\n      const { row, col, block } = group.domains;\n      const otherPoses = [\n        ...(positions.getRowPositions(row) || []),\n        ...(positions.getColPositions(col) || []),\n        ...(positions.getBlockFlattenPositions(block) || []),\n      ];\n      for (const pos of otherPoses) {\n        const { value } = this.getCell(pos);\n        if (!Notes.is(value) || group.poses.has(pos)) {\n          continue;\n        }\n\n        this._setCellValue(pos, Notes.delete(value, ...group.notes));\n      }\n    } else if (group.cls === 1) {\n      // hidden\n      // to eliminate other notes\n      for (const pos of group.poses) {\n        const { value } = this.getCell(pos);\n        this._setCellValue(pos, Notes.new(...Notes.entries(value).filter(n => group.notes.has(n))));\n      }\n    }\n  }\n\n  findXGroup(cells) {\n    for (let n = 1; n <= 8; n++) {\n      for (const group of findNXGroup(cells, n)) {\n        group.type = 'X-Group';\n        return group;\n      }\n    }\n  }\n\n  _eliminateXGroup(group) {\n    const otherPositions = [];\n    if (group.effect === 'row') {\n      for (const row of group.rows) {\n        otherPositions.push(...positions.getRowPositions(row));\n      }\n    } else if (group.effect === 'col') {\n      for (const col of group.cols) {\n        otherPositions.push(...positions.getColPositions(col));\n      }\n    } else if (group.effect === 'block') {\n      for (const block of group.blocks) {\n        otherPositions.push(...positions.getBlockFlattenPositions(block));\n      }\n    }\n\n    for (const pos of otherPositions) {\n      const { value } = this.getCell(pos);\n      if (!Notes.is(value) || group.poses.has(pos)) {\n        continue;\n      }\n\n      this._setCellValue(pos, Notes.delete(value, group.d));\n    }\n  }\n\n  findTip(options) {\n    options = { trial: true, chain: { withoutALS: false }, ...options };\n    const cells = this.getCurCells();\n    return (\n      this.findGroup(cells) ||\n      this.findXGroup(cells) ||\n      this.findChain(cells, options.chain) ||\n      (options.trial && this.findTrialError())\n    );\n  }\n\n  _handleTip(tip) {\n    if (tip.type === 'group') {\n      this.eliminateGroup(tip);\n    } else if (tip.type === 'X-Group') {\n      this.eliminateXGroup(tip);\n    } else if (tip.type === 'chain') {\n      this.eliminateChain(tip);\n    } else if (tip.type === 'trial-error') {\n      this.eliminateTrialError(tip);\n    }\n  }\n\n  findTrialError() {\n    this._disableNotify();\n    const startIdx = this._curCellsIdx;\n    // randomize this pos choice\n    const poses = shuffleArray(positions.flattenPositions);\n    for (const tryTip of [false, { maxDepth: 15 }, { maxDepth: 25 }, { maxDepth: Number.MAX_VALUE }]) {\n      for (const pos of poses) {\n        const { value } = this.getCell(pos);\n        if (!Notes.is(value)) {\n          continue;\n        }\n        for (const d of Notes.entries(value)) {\n          console.enabled = true;\n          console.log(`try: ${d}@${pos}`);\n          console.enabled = false;\n          // start trial for d@pos\n          let deepTried = 0;\n          this.updateCellValue(false, pos, d);\n          this.autoPlacePointingClaiming();\n          let err = this._checkValidity();\n          if (!err && tryTip) {\n            let tip = this.findTip({ trial: false, chain: { withoutALS: true } });\n            while (tip) {\n              deepTried++;\n              this.handleTip(tip);\n              this.autoPlacePointingClaiming();\n              err = this._checkValidity();\n              if (err) {\n                break;\n              }\n              if (deepTried > tryTip.maxDepth) {\n                break;\n              }\n              tip = this.findTip({ trial: false });\n            }\n            if (this._checkComplete()) {\n              err = true;\n            }\n          }\n          if (err) {\n            // restore some settings.\n            console.enabled = true;\n            this._enableNotify();\n            const endIdx = this._curCellsIdx;\n            const includedCells = new Set(\n              this._cellsHistory.filter(({ idx }) => idx >= startIdx && idx <= endIdx).map(h => h.cells)\n            );\n            return {\n              startIdx,\n              endIdx,\n              includedCells,\n              pos,\n              d,\n              err,\n              type: 'trial-error',\n              name: `try${deepTried ? '*' + deepTried : ''} ${d}@${pos}`,\n            };\n          }\n          this.jumpTo(startIdx);\n        }\n      }\n    }\n    // revert\n    this.jumpTo(startIdx);\n    this._enableNotify();\n  }\n\n  _eliminateTrialError(res) {\n    const { startIdx, pos, d, err } = res;\n    if (err === true) {\n      // complete\n      return;\n    }\n    this.revertTo(startIdx);\n    const { value } = this.getCell(pos);\n    if (Notes.is(value)) {\n      this._setCellValue(pos, Notes.delete(value, d));\n    }\n  }\n\n  findChain(cells, options = {}) {\n    options = { withoutALS: false, ...options };\n    const [dPoses, dGroupPoses, dAlsces, dLinks] = getDigitPosesAndLinks(cells, { alsSizes: [1, 2, 3, 4, 5] });\n    console.log('dPoses:', dPoses);\n    console.log('dGroupPoses:', dGroupPoses);\n    console.log('dAlsces:', dAlsces);\n    console.log('dLinks:', dLinks);\n    // randomize digits.\n    const ds = shuffleArray(digits);\n    const baseData = { dLinks, dAlsces, val: false, cells };\n    const singlePosSrcs = [d => dPoses[d]];\n    const basicPosSrcs = [...singlePosSrcs, d => (dGroupPoses[d] || []).filter(p => p.isGroup)];\n    const defaultConfig = {\n      tryDigitLinks: true,\n      tryCellLinks: false,\n      tryGroupLinks: false,\n      tryAlscLinks: false,\n      posSrcs: basicPosSrcs,\n      searchChain: dfsSearchChain,\n      earlyExitLen: 7,\n    };\n    // without ALS\n    for (const maxLength of [20 /*,Number.MAX_VALUE*/]) {\n      for (const config of [\n        defaultConfig,\n        { ...defaultConfig, tryCellLinks: true },\n        { ...defaultConfig, tryCellLinks: true, tryGroupLinks: true },\n      ]) {\n        for (const getPoses of config.posSrcs) {\n          const extraData = { ...baseData, maxLength, ...config, count: 0 };\n          for (const d of ds) {\n            extraData.td = d;\n            for (const res of config.searchChain(d, getPoses(d) || [], extraData)) {\n              return prepareChainResult(res);\n            }\n          }\n          if (extraData.res) {\n            return prepareChainResult(extraData.res);\n          }\n        }\n      }\n    }\n\n    if (!options.withoutALS) {\n      // with ALS\n      const alscSrcs = [d => Object.values(dAlsces[d] || {})];\n      const allClosedConfig = { ...defaultConfig, tryDigitLinks: false, posSrcs: [] };\n      for (const config of [\n        // pure ALS-chain\n        { ...allClosedConfig, tryAlscLinks: true, maxLength: 9, posSrcs: alscSrcs },\n        {\n          ...defaultConfig,\n          tryDigitLinks: true,\n          tryGroupLinks: true,\n          tryAlscLinks: true,\n          maxLength: 9,\n          posSrcs: basicPosSrcs,\n        },\n      ]) {\n        for (const getPoses of config.posSrcs) {\n          const extraData = { ...baseData, ...config, count: 0 };\n          for (const d of ds) {\n            extraData.td = d;\n            for (const res of config.searchChain(d, getPoses(d) || [], extraData)) {\n              console.log('als count:', extraData.count);\n              return prepareChainResult(res);\n            }\n          }\n          if (extraData.res) {\n            console.log('als count:', extraData.count);\n            return prepareChainResult(extraData.res);\n          }\n          console.log('als count:', extraData.count);\n        }\n      }\n    }\n  }\n\n  _eliminateChain(chain) {\n    for (const pos of chain.effectedPoses) {\n      const { value } = this.getCell(pos);\n      if (!Notes.is(value)) {\n        continue;\n      }\n      let newValue = value;\n      if (chain.keep) {\n        newValue = Notes.new(...chain.keepDs);\n      } else {\n        newValue = Notes.delete(value, chain.d);\n      }\n      this._setCellValue(pos, newValue);\n    }\n  }\n}\n\nconst getPosTypeSign = pos => {\n  return pos.isAlsc ? 'a' : pos.isGroup ? 'g' : 'd';\n};\n\nconst prepareChainResult = res => {\n  res.type = 'chain';\n  const startPos = res.chain[0].pos;\n  const endNode = res.chain[res.chain.length - 1];\n  const endPos = endNode.pos;\n  const d = res.d;\n  let hasMulti = false;\n  let hasGroup = false;\n  let hasALS = false;\n  for (const node of res.chain) {\n    if (node.d !== d) {\n      hasMulti = true;\n    }\n    if (node.pos.isAlsc) {\n      hasALS = true;\n    } else if (node.pos.isGroup) {\n      hasGroup = true;\n    }\n    if (hasMulti && hasGroup && hasALS) {\n      break;\n    }\n  }\n  const parts = [res.chain.length - 1];\n  hasGroup && parts.push('G');\n  hasALS && parts.push('ALS');\n  parts.push(hasMulti ? 'XY' : 'X', 'Chain');\n  parts.push([getPosTypeSign(startPos), getPosTypeSign(endPos), endNode.d === d ? '-x' : '-xy'].join(''));\n  res.name = parts.join('-');\n  return res;\n};\n\nfunction* dfsSearchChain(d, poses, extraData) {\n  for (const pos of poses) {\n    const node = { pos, d, val: extraData.val };\n    for (const res of searchChainDFS([], node, extraData)) {\n      if (res.chain.length < extraData.maxLength) {\n        if (res.chain.length <= extraData.earlyExitLen) {\n          yield res;\n        } else {\n          extraData.res = res;\n          extraData.maxLength = res.chain.length;\n        }\n      }\n    }\n  }\n}\n\nconst checkExistAndEqual = (a, b) => a !== undefined && a === b;\n\nfunction* checkChain(chain, node, extraData) {\n  const { pos, d, val } = node;\n  const { cells, td } = extraData;\n  if (extraData.val === false && val === true && chain.length > 1) {\n    // strong link\n    const startPos = chain[0].pos;\n    // ignore g->d\n    if (d === td) {\n      // start and end shouldn't be the same position.\n      // check if intersection related positions has d\n      const effectedPoses = new Set();\n      const poses = [...getRealPoses(startPos), ...getRealPoses(pos)];\n\n      for (const cpos of positions.getCommonRelatedPositions(...poses)) {\n        const { value } = positions.getCell(cells, cpos);\n        if (Notes.has(value, d)) {\n          effectedPoses.add(cpos);\n        }\n      }\n      if (effectedPoses.size > 0) {\n        yield { chain: [...chain, node], effectedPoses, d: td };\n      }\n    } else {\n      // xy-chain\n      // two types:\n      // 1. same pos\n      if (startPos.key === pos.key) {\n        const poses = getRealPoses(pos);\n        if (poses.length > 1) {\n          // should only be one position\n          return;\n        }\n\n        const ds = new Set();\n        for (const p of poses) {\n          const { value } = positions.getCell(cells, p);\n          Notes.entries(value).forEach(d => ds.add(d));\n        }\n        ds.delete(d);\n        ds.delete(td);\n        if (ds.size > 0) {\n          // eliminate other digits of this position\n          yield {\n            chain: [...chain, node],\n            effectedPoses: new Set(poses),\n            d: td,\n            effectedDs: ds,\n            keep: true,\n            keepDs: [d, td],\n          };\n        }\n        // 2. different poses\n      } else {\n        const startPoses = getRealPoses(startPos);\n        const poses = getRealPoses(pos);\n        if (poses.length === 1 && startPoses.length === 1) {\n          // pos is cell then startPos should also be cell.\n          // pos is one of startPos's related positions.\n          const startPos = startPoses[0];\n          const pos = poses[0];\n          if (\n            checkExistAndEqual(pos.row, startPos.row) ||\n            checkExistAndEqual(pos.col, startPos.col) ||\n            checkExistAndEqual(pos.block, startPos.block)\n          ) {\n            const { value } = positions.getCell(cells, pos);\n            if (Notes.has(value, td)) {\n              yield { chain: [...chain, node], effectedPoses: new Set([pos]), d: td };\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction* genNextChainAndNode(chain, node, extraData) {\n  const { pos, d, val } = node;\n  const { dLinks, dAlsces } = extraData;\n  if (extraData.tryDigitLinks) {\n    // try related links or group links\n    for (const targets of [dLinks[d][pos][val], extraData.tryGroupLinks ? dLinks[d][pos].group[val] : []]) {\n      for (const tpos of targets) {\n        const nextNode = { pos: tpos, val: !val, d };\n\n        if (chainHasNode(chain, nextNode)) {\n          continue;\n        }\n\n        yield [[...chain, node], nextNode];\n      }\n    }\n  }\n\n  if (extraData.tryCellLinks) {\n    // try cell links\n    for (const cd of dLinks[d][pos].cell[val]) {\n      const nextNode = { pos, val: !val, d: cd };\n\n      if (chainHasNode(chain, nextNode)) {\n        continue;\n      }\n\n      yield [[...chain, node], nextNode];\n    }\n  }\n\n  if (extraData.tryAlscLinks) {\n    // try alsc links\n    for (const link of dLinks[d][pos].alsc[val]) {\n      let curNode = null;\n      let nextNode = null;\n      if (val) {\n        // weak link\n        const rcc = link;\n        curNode = { ...node, pos: dAlsces[d][pos] };\n        nextNode = { pos: rcc, val: !val, d: rcc.d };\n      } else {\n        // strong link\n        const { als, alsc } = link;\n        curNode = { ...node, pos: dAlsces[d][pos], als };\n        nextNode = { pos: alsc, val: !val, d: alsc.d, als };\n      }\n      if (chainHasNode(chain, nextNode)) {\n        continue;\n      }\n      yield [[...chain, curNode], nextNode];\n    }\n  }\n}\n\nfunction* searchChainDFS(chain, node, extraData) {\n  extraData.count++;\n  // optimize\n  if (chain.length + 1 >= extraData.maxLength) {\n    return;\n  }\n\n  yield* checkChain(chain, node, extraData);\n\n  for (const nextChainAndNode of genNextChainAndNode(chain, node, extraData)) {\n    yield* searchChainDFS(...nextChainAndNode, extraData);\n  }\n}\n\n/*\nfunction* searchChainBFS(qs, extraData) {\n  while (qs.length > 0) {\n    const chain = qs.shift();\n    if (chain.length + 1 > extraData.maxLength) {\n      continue;\n    }\n\n    const node = chain.pop();\n\n    yield* checkChain(chain, node, extraData);\n\n    for (const nextChainAndNode of genNextChainAndNode(chain, node, extraData)) {\n      const [chain, nextNode] = nextChainAndNode;\n      qs.push([...chain, nextNode]);\n    }\n  }\n}\n*/\n\nconst chainHasNode = (chain, node) => {\n  const poses = getRealPoses(node.pos);\n  for (const n of chain) {\n    if (n.val === node.val && n.d === node.d && n.pos.key === node.pos.key) {\n      return true;\n    }\n    // FIXME:\n    if (n.d === node.d && n.val && node.val) {\n      if (n.pos.poses || node.pos.poses) {\n        if (hasCommon(poses, getRealPoses(n.pos))) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n};\n\nconst newGroupPos = (domain, val, block, poses, d) => {\n  if (poses.length > 1) {\n    return {\n      key: `${d}@${domain}${val}block${block}`,\n      d,\n      isGroup: true,\n      domain: new Set([domain]),\n      [domain]: val,\n      block,\n      poses,\n      toString() {\n        return this.key;\n      },\n    };\n  }\n  const pos = poses[0];\n  return {\n    key: pos.key,\n    d,\n    isGroup: false,\n    domain: new Set([domain]),\n    [domain]: val,\n    block,\n    pos,\n    poses,\n    toString() {\n      return this.key;\n    },\n  };\n};\n\nexport const getRealPoses = pos => (pos.isGroup || pos.isAlsc ? [...pos.poses] : [pos]);\n\n// for row/col in block, like claiming.\nfunction getDigitGroupPoses(cells) {\n  const dGroupPoses = {};\n  for (const [domain, xPositions] of [\n    ['row', positions.rowPositions],\n    ['col', positions.colPositions],\n  ]) {\n    for (const xPoses of xPositions) {\n      const blockDigitPoses = {};\n      let val = 0;\n      for (const pos of xPoses) {\n        val = pos[domain];\n        const { value } = positions.getCell(cells, pos);\n        if (!Notes.is(value)) {\n          continue;\n        }\n        const digitPoses = getAttrDefault(blockDigitPoses, pos.block, {});\n        for (const d of Notes.entries(value)) {\n          const poses = getAttrDefault(digitPoses, d, []);\n          poses.push(pos);\n        }\n      }\n      for (const [sblock, digitGroups] of Object.entries(blockDigitPoses)) {\n        for (const [sd, poses] of Object.entries(digitGroups)) {\n          const block = parseInt(sblock);\n          const d = parseInt(sd);\n          const groupPoses = getAttrDefault(dGroupPoses, d, []);\n          if (poses.length > 1) {\n            groupPoses.push(newGroupPos(domain, val, block, poses, d));\n          } else {\n            const pos = poses[0];\n            let groupPos = groupPoses.filter(gp => gp.pos === pos)[0];\n            if (!groupPos) {\n              groupPos = newGroupPos(domain, val, block, poses, d);\n              groupPoses.push(groupPos);\n            }\n            groupPos.domain.add(domain);\n            groupPos[domain] = val;\n          }\n        }\n      }\n    }\n  }\n  return dGroupPoses;\n}\n\nconst hasCommon = (a, b) => {\n  return intersection(new Set(a), new Set(b)).size > 0;\n};\n\nconst getOtherRowGroupPositions = (groupPoses = [], pos) => {\n  return groupPoses.filter(p => pos.row !== undefined && p.row === pos.row && p.key !== pos.key);\n};\n\nconst getOtherColGroupPositions = (groupPoses = [], pos) => {\n  return groupPoses.filter(p => pos.col !== undefined && p.col === pos.col && p.key !== pos.key);\n};\n\nconst getOtherBlockGroupPositions = (groupPoses = [], pos) => {\n  const filteredGroupPoses = groupPoses.filter(\n    p => p.block === pos.block && p.key !== pos.key && !hasCommon(p.poses, pos.isGroup ? pos.poses : [pos])\n  );\n  const res = filteredGroupPoses.filter(p => p.isGroup);\n  for (const p of filteredGroupPoses.filter(p => !p.isGroup)) {\n    let ok = true;\n    for (const rpos of res) {\n      if (hasCommon(rpos.poses, p.poses)) {\n        ok = false;\n        break;\n      }\n    }\n    if (ok) {\n      res.push(p);\n    }\n  }\n  return res;\n};\n\nfunction getGroupPosLink(groupPoses, pos) {\n  // strong: false->true, weak: true->false\n  const strongTargets = new Set();\n  const weakTargets = new Set();\n  for (const [domain, getOtherGroupPositions] of [\n    ['row', getOtherRowGroupPositions],\n    ['col', getOtherColGroupPositions],\n    ['block', getOtherBlockGroupPositions],\n  ]) {\n    if (pos.isGroup && domain !== 'block' && !pos.domain.has(domain)) {\n      continue;\n    }\n\n    let count = 0;\n    let strongPos = null;\n    for (const opos of getOtherGroupPositions(groupPoses, pos)) {\n      count++;\n      if (opos.isGroup) {\n        if (pos.isGroup) {\n          // group pos\n          weakTargets.add(opos);\n          strongPos = opos;\n        } else if (!new Set(opos.poses).has(pos)) {\n          // pos\n          weakTargets.add(opos);\n          strongPos = opos;\n        }\n      }\n    }\n    if (count === 1 && strongPos) {\n      strongTargets.add(strongPos);\n    }\n  }\n  return { false: strongTargets, true: weakTargets };\n}\n\nfunction getPosLink(cells, d, pos) {\n  // strong: false->true, weak: true->false\n  const strongTargets = new Set();\n  const weakTargets = new Set();\n  for (const [domain, getRelatedPositions] of [\n    ['row', getRelatedRowPositions],\n    ['col', getRelatedColPositions],\n    ['block', getRelatedBlockPositions],\n  ]) {\n    let spos = pos;\n    let filterPoses = new Set();\n    if (pos.isGroup) {\n      if (domain !== 'block' && !pos.domain.has(domain)) {\n        continue;\n      }\n      spos = pos.poses[0];\n      filterPoses = new Set(pos.poses);\n    }\n\n    let count = 0;\n    let strongPos = null;\n    for (const rpos of getRelatedPositions(spos).filter(p => !filterPoses.has(p))) {\n      const { value } = positions.getCell(cells, rpos);\n      if (!Notes.has(value, d)) {\n        continue;\n      }\n      weakTargets.add(rpos);\n      count++;\n      strongPos = rpos;\n    }\n    if (count === 1) {\n      strongTargets.add(strongPos);\n    }\n  }\n  return { false: strongTargets, true: weakTargets };\n}\n\nfunction getAlscLink(alscLinks, pos) {\n  return alscLinks[pos];\n}\n\nfunction getDigitPosesAndLinks(cells, options) {\n  const dGroupPoses = getDigitGroupPoses(cells);\n  const [dAlsces, dAlscLinks] = getDigitAlscAndLinks(cells, dGroupPoses, options);\n  const dLinks = {};\n  const dPoses = {};\n  for (const pos of positions.flattenPositions) {\n    const { value } = positions.getCell(cells, pos);\n    if (!Notes.is(value)) {\n      continue;\n    }\n    const ds = Notes.entries(value);\n    for (const d of ds) {\n      const poses = getAttrDefault(dPoses, d, []);\n      poses.push(pos);\n\n      const links = getAttrDefault(dLinks, d, {});\n      // same digit, different poses\n      const link = getPosLink(cells, d, pos);\n      links[pos] = link;\n\n      // group\n      link.group = getGroupPosLink(dGroupPoses[d], pos);\n\n      const otherDs = new Set(ds.filter(v => v !== d));\n      // different digits, same pos\n      link.cell = { false: ds.length === 2 ? otherDs : new Set(), true: otherDs };\n\n      link.alsc = getAlscLink(dAlscLinks[d], pos) || { false: new Set(), true: new Set() };\n    }\n  }\n  // group position links\n  for (const [sd, groupPoses] of Object.entries(dGroupPoses)) {\n    const d = parseInt(sd);\n    const links = getAttrDefault(dLinks, d, {});\n    for (const pos of groupPoses.filter(p => p.isGroup)) {\n      const link = getPosLink(cells, d, pos);\n      links[pos] = link;\n      link.group = getGroupPosLink(dGroupPoses[d], pos);\n      link.cell = { false: new Set(), true: new Set() };\n      link.alsc = getAlscLink(dAlscLinks[d], pos) || { false: new Set(), true: new Set() };\n    }\n  }\n\n  // alsc position links\n  for (const [sd, alsces] of Object.entries(dAlsces)) {\n    const d = parseInt(sd);\n    const links = getAttrDefault(dLinks, d, {});\n    for (const alsc of Object.values(alsces).filter(a => a.type === 'alsc')) {\n      const link = { false: new Set(), true: new Set() };\n      links[alsc] = link;\n      link.group = { false: new Set(), true: new Set() };\n      link.cell = { false: new Set(), true: new Set() };\n      link.alsc = getAlscLink(dAlscLinks[d], alsc) || { false: new Set(), true: new Set() };\n    }\n  }\n\n  return [dPoses, dGroupPoses, dAlsces, dLinks];\n}\n\nfunction getPosDigitLinks(cells, poses) {\n  const links = [];\n  for (const pos of poses) {\n    const { value } = positions.getCell(cells, pos);\n    if (!Notes.is(value)) {\n      continue;\n    }\n\n    for (const note of Notes.entries(value)) {\n      links.push([pos, note]);\n    }\n  }\n  return links;\n}\n\nconst getPosDomains = poses => {\n  const res = {};\n  for (const domain of ['row', 'col', 'block']) {\n    const ds = new Set();\n    poses.forEach(p => ds.add(p[domain]));\n    if (ds.size === 1) {\n      res[domain] = [...ds][0];\n    }\n  }\n  return res;\n};\n\nfunction* findNGroup(cells, n, cls) {\n  for (const [domain, getPositions] of [\n    ['row', getRowPositions],\n    ['col', getColPositions],\n    ['block', getBlockFlattenPositions],\n  ]) {\n    for (const idx of positions.indices) {\n      const links = getPosDigitLinks(cells, getPositions(idx));\n      for (const group of findNGroupFromLinks(links, n, cls, { checkClear: n > 1 })) {\n        const poses = group[cls];\n        const notes = group[(cls + 1) % 2];\n        yield {\n          cls,\n          n,\n          domains: cls === 0 ? getPosDomains(poses) : { [domain]: idx },\n          poses,\n          notes,\n          name: ['naked', 'hidden'][cls] + `-${n}-group`,\n        };\n      }\n    }\n  }\n}\n\nconst findGroupForALSC = (d, dGroupPoses, domains, poses) => {\n  const { row, col, block } = domains;\n  const key = `${d}@row${row}col${col}block${block}`;\n  const groupPoses = dGroupPoses[d].filter(g => g.isGroup && g.key === key && g.poses.size === poses.size);\n  if (groupPoses.length === 1) {\n    return groupPoses[0];\n  }\n};\n\nfunction getDigitALSCes(cells, dGroupPoses, options = {}) {\n  options = { alsSizes: [1, 2, 3, 4, 5, 6, 7, 8], ...options };\n  const alses = {};\n  const dAlsces = {};\n  for (const getPositions of [getRowPositions, getColPositions, getBlockFlattenPositions]) {\n    for (const idx of positions.indices) {\n      const links = getPosDigitLinks(cells, getPositions(idx));\n      const points = Object.values(aggregateLinks(links, 0));\n      for (const n of options.alsSizes) {\n        for (const [poses, digits] of findALSFromPoints(points, n)) {\n          const xlinks = getPosDigitLinks(cells, poses);\n          // build digit infos.\n          const digitInfos = aggregateLinks(xlinks, 1, 'd', 'poses');\n          const key = [...[...poses].map(p => p.key).sort(), [...digits].sort().join('')].join('-');\n          const als = alses[key] || {\n            key,\n            poses,\n            digits,\n            domains: getPosDomains(poses),\n            digitInfos,\n            toString() {\n              return this.key;\n            },\n          };\n          alses[key] = als;\n          for (const d of digits) {\n            const digitInfo = digitInfos[d];\n            const { poses } = digitInfo;\n            const domains = getPosDomains(poses);\n            const alsces = getAttrDefault(dAlsces, d, {});\n            let key = null;\n            let alsc = null;\n            if (poses.size === 1) {\n              const cell = [...poses][0];\n              key = cell.key;\n              alsc = alsces[key] || {\n                ...digitInfo,\n                isAlsc: true,\n                domains,\n                cell,\n                key,\n                type: 'cell',\n                alses: [],\n                toString() {\n                  return this.key;\n                },\n              };\n            } else {\n              const group = findGroupForALSC(d, dGroupPoses, domains, poses);\n              if (group) {\n                key = group.key;\n                alsc = alsces[key] || {\n                  ...digitInfo,\n                  isAlsc: true,\n                  domains,\n                  group,\n                  key: group.key,\n                  type: 'group',\n                  isGroup: true,\n                  alses: [],\n                  toString() {\n                    return this.key;\n                  },\n                };\n              } else {\n                key = [...poses]\n                  .map(p => p.key)\n                  .sort()\n                  .join('-');\n                alsc = alsces[key] || {\n                  ...digitInfo,\n                  isAlsc: true,\n                  domains,\n                  key,\n                  type: 'alsc',\n                  alses: [],\n                  toString() {\n                    return this.key;\n                  },\n                };\n              }\n            }\n            alsc.alses.push(als);\n            alsces[key] = alsc;\n            digitInfos[d] = alsc;\n          }\n        }\n      }\n    }\n  }\n  return dAlsces;\n}\n\nfunction getRCCs(alsces, alsc) {\n  const rccs = [];\n  const { poses, domains } = alsc;\n  // check every domain of the rcc\n  for (const [domain, val] of Object.entries(domains)) {\n    // find d related ALSes in domain\n    for (const rcc of Object.values(alsces)) {\n      if (rcc === alsc) {\n        // should not be current als.\n        continue;\n      }\n      if (rcc.domains[domain] !== val) {\n        // rcc should be in domain\n        continue;\n      }\n      if (hasCommon(rcc.poses, poses)) {\n        // overlapping area should not contain the rcc.\n        continue;\n      }\n\n      rccs.push(rcc);\n    }\n  }\n  return rccs;\n}\n\nfunction getDigitAlscAndLinks(cells, dGroupPoses, options) {\n  const dAlsces = getDigitALSCes(cells, dGroupPoses, options);\n  const dAlscLinks = {};\n  for (const alsces of Object.values(dAlsces)) {\n    for (const alsc of Object.values(alsces)) {\n      const { d, alses } = alsc;\n      const alscLinks = getAttrDefault(dAlscLinks, d, {});\n      const weakTargets = getRCCs(alsces, alsc);\n      const strongTargets = [];\n      for (const als of alses) {\n        for (const t of Object.values(als.digitInfos)) {\n          if (t !== alsc) {\n            strongTargets.push({ als, alsc: t });\n          }\n        }\n      }\n      alscLinks[alsc] = { true: weakTargets, false: strongTargets };\n    }\n  }\n\n  return [dAlsces, dAlscLinks];\n}\n\nconst getAToBLinks = (getPositions, getEnd) => (cells, d) => {\n  const links = [];\n  for (let a = 0; a < 9; a++) {\n    for (const pos of getPositions(a)) {\n      const { value } = cells[pos.row][pos.col];\n      if (!Notes.is(value)) {\n        continue;\n      }\n      if (Notes.has(value, d)) {\n        links.push([a, getEnd(pos)]);\n      }\n    }\n  }\n  return links;\n};\n\nconst getRowToColLinks = getAToBLinks(positions.getRowPositions, pos => pos.col);\nconst getRowToBlockLinks = getAToBLinks(positions.getRowPositions, pos => rowColToBlock(pos.row, pos.col));\nconst getColToBlockLinks = getAToBLinks(positions.getColPositions, pos => rowColToBlock(pos.row, pos.col));\n\nconst getPositionsForDigit = (cells, d, positions) => {\n  const poses = [];\n  for (const pos of positions) {\n    const { value } = cells[pos.row][pos.col];\n    if (Notes.is(value) && Notes.has(value, d)) {\n      poses.push(pos);\n    }\n  }\n  return poses;\n};\n\nfunction* findNXGroup(cells, n, types = { rc: true, cr: true, rb: true, br: true, cb: true, bc: true }) {\n  for (let d = 1; d <= 9; d++) {\n    if (types.rc || types.cr) {\n      // row->col\n      const rcLinks = getRowToColLinks(cells, d);\n      if (types.rc) {\n        for (const group of findNGroupFromLinks(rcLinks, n, 0)) {\n          const [rows, cols] = group;\n          const poses = [];\n          let isXWing = true;\n          for (const row of rows) {\n            const rowPositions = getPositionsForDigit(cells, d, positions.getRowPositions(row));\n            if (rowPositions.length !== n) {\n              isXWing = false;\n            }\n            poses.push(...rowPositions);\n          }\n          const name = isXWing ? `${n}-X-Wing` : `${n}-XRC-Group`;\n          yield { name, domain: 'row', effect: 'col', rows, cols, poses: new Set(poses), d };\n        }\n      }\n      // col->row\n      if (types.cr) {\n        for (const group of findNGroupFromLinks(rcLinks, n, 1)) {\n          const [cols, rows] = group;\n          const poses = [];\n          let isXWing = true;\n          for (const col of cols) {\n            const colPositions = getPositionsForDigit(cells, d, positions.getColPositions(col));\n            if (colPositions.length !== n) {\n              isXWing = false;\n            }\n            poses.push(...getPositionsForDigit(cells, d, positions.getColPositions(col)));\n          }\n          const name = isXWing ? `${n}-X-Wing` : `${n}-XCR-Group`;\n          yield { name, domain: 'col', effect: 'row', rows, cols, poses: new Set(poses), d };\n        }\n      }\n    }\n\n    if (types.rb || types.br) {\n      // row->block, 1-xrb-group is claiming\n      const rbLinks = getRowToBlockLinks(cells, d);\n      if (types.rb) {\n        for (const group of findNGroupFromLinks(rbLinks, n, 0)) {\n          const [rows, blocks] = group;\n          const poses = [];\n          for (const row of rows) {\n            poses.push(...getPositionsForDigit(cells, d, positions.getRowPositions(row)));\n          }\n          const name = n === 1 ? 'claiming' : `${n}-XRB-Group`;\n          yield { name, domain: 'row', effect: 'block', rows, blocks, poses: new Set(poses), d };\n        }\n      }\n      // block-row, 1-xbr-group is pointing\n      if (types.br) {\n        for (const group of findNGroupFromLinks(rbLinks, n, 1)) {\n          const [blocks, rows] = group;\n          const poses = [];\n          for (const block of blocks) {\n            poses.push(...getPositionsForDigit(cells, d, positions.getBlockFlattenPositions(block)));\n          }\n          const name = n === 1 ? 'pointing' : `${n}-XBR-Group`;\n          yield { name, domain: 'block', effect: 'row', rows, blocks, poses: new Set(poses), d };\n        }\n      }\n    }\n\n    if (types.cb || types.bc) {\n      // col->block, 1-xcb-group is claiming\n      const cbLinks = getColToBlockLinks(cells, d);\n      if (types.cb) {\n        for (const group of findNGroupFromLinks(cbLinks, n, 0)) {\n          const [cols, blocks] = group;\n          const poses = [];\n          for (const col of cols) {\n            poses.push(...getPositionsForDigit(cells, d, positions.getColPositions(col)));\n          }\n          const name = n === 1 ? 'claiming' : `${n}-XCB-Group`;\n          yield { name, domain: 'col', effect: 'block', cols, blocks, poses: new Set(poses), d };\n        }\n      }\n\n      // block-col, 1-xbc-group is pointing\n      if (types.bc) {\n        for (const group of findNGroupFromLinks(cbLinks, n, 1)) {\n          const [blocks, cols] = group;\n          const poses = [];\n          for (const block of blocks) {\n            poses.push(...getPositionsForDigit(cells, d, positions.getBlockFlattenPositions(block)));\n          }\n          const name = n === 1 ? 'pointing' : `${n}-XBC-Group`;\n          yield { name, domain: 'block', effect: 'col', cols, blocks, poses: new Set(poses), d };\n        }\n      }\n    }\n  }\n}\n","import React from 'react';\nimport styles from './Cell.module.scss';\nimport digits from '../../../../UI/Digits/Digits';\nimport { Notes } from '../../../../../libs/sudoku';\nimport * as positions from '../../../../../libs/position';\n\nconst noteClassName = (n, activeVal, highlighted, effectMarked, marks, pos) => {\n  const classes = [styles.Note];\n  if (n === activeVal) {\n    classes.push(styles.ActiveValue);\n  }\n\n  if (marks) {\n    let src = null;\n    if (highlighted) {\n      src = marks.highlights;\n    } else if (effectMarked) {\n      src = marks.effect;\n    }\n\n    if (src) {\n      const { posNotes, posSubNotes } = src;\n      let { notes, subNotes } = src;\n      if (posNotes && posSubNotes) {\n        notes = posNotes[pos];\n        subNotes = posSubNotes[pos];\n      }\n      if (notes && notes.has(n)) {\n        classes.push(styles.MarkedNoteValue);\n      } else if (subNotes && subNotes.has(n)) {\n        classes.push(styles.MarkedValue);\n      }\n\n      if (highlighted && effectMarked) {\n        if (marks.effect.notes.has(n)) {\n          classes.push(styles.Effected);\n        }\n      }\n    }\n  }\n\n  return classes.join(' ');\n};\n\nconst Cell = React.memo(\n  ({ value, origin, pos, activePos, activeVal, available, showAvail, isNoting, onClick, marks }) => {\n    const { block, row, col } = pos;\n    const classes = [];\n    let content = null;\n    let isSelected = false;\n\n    if (activePos) {\n      const { row: activeRow, col: activeCol, block: activeBlock } = activePos;\n      if (row === activeRow && col === activeCol) {\n        // active\n        isSelected = true;\n        classes.push(styles.Selected);\n      } else if (row === activeRow || col === activeCol || block === activeBlock) {\n        // related area\n        classes.push(styles.Related);\n      }\n    }\n\n    let clickable = available;\n    if (available) {\n      classes.push(styles.Available);\n      if (showAvail) {\n        // show background\n        classes.push(isNoting ? styles.Note : styles.Place);\n      }\n    } else if (available === null) {\n      // deselected\n      classes.push(styles.Available);\n      clickable = true;\n    } else if (!isNoting && !origin && value === activeVal) {\n      // place mode, placed value === activeVal\n      classes.push(styles.Available);\n      clickable = true;\n    }\n\n    // marks\n    let highlighted = false;\n    let domainMarked = false;\n    let effectMarked = false;\n    if (marks) {\n      const { domain, effect, highlights } = marks;\n      if (domain) {\n        const { rows, cols, blocks, cells } = domain;\n        if (rows && rows.has(row)) {\n          domainMarked = true;\n        }\n        if (cols && cols.has(col)) {\n          domainMarked = true;\n        }\n        if (blocks && blocks.has(block)) {\n          domainMarked = true;\n        }\n        if (cells && cells.has(pos)) {\n          domainMarked = true;\n        }\n      }\n      if (effect) {\n        const { rows, cols, blocks, cells } = effect;\n        if (rows && rows.has(row)) {\n          effectMarked = true;\n        }\n        if (cols && cols.has(col)) {\n          effectMarked = true;\n        }\n        if (blocks && blocks.has(block)) {\n          effectMarked = true;\n        }\n        if (cells && cells.has(pos)) {\n          effectMarked = true;\n        }\n      }\n      if (highlights && highlights.cells.has(pos)) {\n        highlighted = true;\n      }\n    }\n    if (highlighted) {\n      classes.push(styles.MarkedHighlight);\n      if (marks.highlights.withoutOutlinePoses && marks.highlights.withoutOutlinePoses.has(pos)) {\n        classes.push(styles.WithoutOutline);\n      }\n    } else if (domainMarked) {\n      classes.push(styles.MarkedDomain);\n    }\n    if (effectMarked) {\n      classes.push(styles.MarkedEffect);\n    }\n\n    if (!Notes.is(value)) {\n      classes.push(styles.Value);\n      // it's placed value\n      !origin && classes.push(styles.Placed);\n      // it's active value\n      if (value === activeVal && !isSelected) {\n        classes.push(styles.ActiveValue);\n      }\n      // it's marked value\n      if (highlighted && marks.highlights.values && marks.highlights.values.has(value)) {\n        classes.push(styles.MarkedValue);\n      }\n\n      content = digits[value];\n    } else {\n      classes.push(styles.Notes);\n      // Set: [1-9]\n      const notes = value;\n      if (Notes.size(notes) > 0) {\n        content = positions.blockShape.map((rows, idx) => (\n          <div key={idx} className={styles.RowNotes}>\n            {rows.map(i => (\n              <div key={i} className={noteClassName(i + 1, activeVal, highlighted, effectMarked, marks, pos)}>\n                {Notes.has(notes, i + 1) ? digits[i + 1] : null}\n              </div>\n            ))}\n          </div>\n        ));\n      }\n    }\n    return (\n      <div className={classes.join(' ')} onClick={clickable ? () => onClick(pos) : undefined}>\n        {content}\n      </div>\n    );\n  }\n);\n\nexport default Cell;\n","import React from 'react';\nimport Cell from './Cell/Cell';\nimport styles from './Block.module.scss';\nimport * as positions from '../../../../libs/position';\n\nconst Block = ({\n  block,\n  activePos,\n  activeVal,\n  cells,\n  availableCells,\n  cellClickedHandler,\n  showAvail,\n  isNoting,\n  marks,\n}) => {\n  const isOdd = block % 2 === 1;\n  return (\n    <div className={`${styles.Block} ${isOdd ? styles.Odd : ''}`}>\n      {positions.getBlockPositions(block).map((rows, idx) => (\n        <div key={idx} className={styles.Row}>\n          {rows.map(pos => (\n            <Cell\n              key={pos.key}\n              {...cells[pos.row][pos.col]}\n              pos={pos}\n              activePos={activePos}\n              activeVal={activeVal}\n              available={availableCells && availableCells[pos.row][pos.col]}\n              onClick={cellClickedHandler}\n              showAvail={showAvail}\n              isNoting={isNoting}\n              marks={marks}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\nexport default Block;\n","import React from 'react';\nimport styled from 'styled-components';\n\n/*\n  make sure the width is the same with a parent's,\n  because padding refer to parent's width.\n*/\nconst Box = styled.div`\n  width: ${({ width }) => (width !== undefined ? width : 'auto')};\n  height: 0;\n  padding-top: ${({ ratio }) => 100 / ratio}%;\n  position: relative;\n`;\n\nconst Content = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  ${({ fixed, scroll }) =>\n    fixed\n      ? `\n    height: 100%;\n    overflow: ${scroll ? `scroll` : 'hidden'};\n  `\n      : `\n  min-height: 100%;\n  `}\n`;\n\nexport default ({ ratio = 1.0, fixed = true, scroll = false, children }) => {\n  return (\n    <Box ratio={ratio}>\n      <Content fixed={fixed} scroll={scroll}>\n        {children}\n      </Content>\n    </Box>\n  );\n};\n","import * as positions from '../../../libs/position';\n\n// percentage for a cell\nexport const perCell = (1 - 1.5 / 100) / 9;\n\nexport const getCoord = ({ row, col }, d) => {\n  const [localRow, localCol] = positions.getDigitLocalPos(d);\n\n  // block margin: 0.25%\n  // cell margin:1%, padding: 2.5% of block\n  const x = (col + (localCol + 0.5) / 3 + 0.35 / 100) * perCell + ((Math.floor(col / 3) + 1) * 0.5 - 0.25) / 100;\n  const y = (row + (localRow + 0.5) / 3 + 0.35 / 100) * perCell + ((Math.floor(row / 3) + 1) * 0.5 - 0.25) / 100;\n\n  return [x, y];\n};\n\nexport const calcDistance = ([sx, sy], [ex, ey]) => {\n  const [dx, dy] = [ex - sx, ey - sy];\n\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\nexport const calcDeg = ([sx, sy], [ex, ey], d) => {\n  const [dx, dy] = [ex - sx, ey - sy];\n  return ((Math.acos(dx / d) * (dy < 0 ? -1 : 1)) / Math.PI) * 180;\n};\n","import React from 'react';\nimport styles from './Arrow.module.scss';\nimport styled from 'styled-components';\nimport * as calc from './calc';\n\n// shortend arrow length, to avoid tail-head contact.\nconst dd = 0.02;\n\nconst Arrow = styled.div.attrs(({ x, y, distance, deg, type }) => ({\n  style: {\n    borderTop: `2px ${type} red`,\n    width: `${distance * 100}%`,\n    height: `${distance * 100}%`,\n    transform: `translate(${(x / distance) * 100}%, ${(y / distance) * 100}%)\n    rotate(${deg}deg)\n    translate(${(dd / 2 / distance) * 100}%)`,\n  },\n}))`\n  user-select: none;\n  pointer-events: none;\n  position: absolute;\n  transform-origin: top left;\n`;\n\nexport default ({ type = 'solid', startPos, startDigit, endPos, endDigit }) => {\n  const sc = calc.getCoord(startPos, startDigit);\n  const ec = calc.getCoord(endPos, endDigit);\n  const distance = calc.calcDistance(sc, ec);\n  const deg = calc.calcDeg(sc, ec, distance);\n\n  return (\n    <Arrow x={sc[0]} y={sc[1]} distance={distance - dd} deg={deg} type={type}>\n      <div className={styles.Pointer}></div>\n    </Arrow>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as positions from '../../../libs/position';\nimport * as calc from './calc';\n\nconst dd = 0.8;\n\nconst Frame = styled.div.attrs(({ sx, sy, ex, ey }) => ({\n  style: {\n    top: `${sy * 100 - dd}%`,\n    left: `${sx * 100 - dd}%`,\n    right: `${(1 - ex) * 100 - dd}%`,\n    bottom: `${(1 - ey) * 100 - dd}%`,\n  },\n}))`\n  user-select: none;\n  pointer-events: none;\n  position: absolute;\n  border: 1px solid red;\n`;\n\nexport default ({ domain, row, col, block }) => {\n  let startRow;\n  let startCol;\n  let endRow;\n  let endCol;\n\n  if (domain === 'row') {\n    startRow = endRow = row;\n\n    startCol = positions.blockCols(block)[0];\n    endCol = startCol + 2;\n  } else if (domain === 'col') {\n    startCol = endCol = col;\n\n    startRow = positions.blockRows(block)[0];\n    endRow = startRow + 2;\n  }\n\n  const [sx, sy] = calc.getCoord({ row: startRow, col: startCol }, 1);\n  const [ex, ey] = calc.getCoord({ row: endRow, col: endCol }, 9);\n  return <Frame sx={sx} sy={sy} ex={ex} ey={ey} />;\n};\n","import React from 'react';\nimport Block from './Block/Block';\nimport AspectRatioBox from '../../UI/AspectRatio/AspectRatioBox';\nimport Arrow from './Arrow';\nimport Frame from './Frame';\nimport styles from './Board.module.scss';\nimport * as positions from '../../../libs/position';\n\nconst Board = ({\n  isComplete,\n  availablePositions,\n  cells,\n  activeVal,\n  activePos,\n  cellClickedHandler,\n  showAvail,\n  isNoting,\n  marks,\n}) => {\n  // active value\n  if (activePos) {\n    // no active value, then selected value is active value for board\n    const { row, col } = activePos;\n    activeVal = cells[row][col].value;\n  }\n\n  const classes = [styles.SudokuBoard];\n  if (isComplete) {\n    classes.push(styles.Complete);\n  }\n  return (\n    <AspectRatioBox ratio={1.0}>\n      <div className={classes.join(' ')}>\n        {marks && marks.frames && marks.frames.map(frame => <Frame {...frame} />)}\n        {marks &&\n          marks.arrows &&\n          marks.arrows.map((arrow, idx) => <Arrow key={`${arrow.startPos}-${arrow.endPos}#${idx}`} {...arrow} />)}\n        {positions.blockShape.map((rows, idx) => (\n          <div key={idx} className={styles.Row}>\n            {rows.map(b => (\n              <Block\n                key={b}\n                block={b}\n                cells={cells}\n                activePos={activePos}\n                activeVal={activeVal}\n                availableCells={availablePositions}\n                cellClickedHandler={cellClickedHandler}\n                showAvail={showAvail}\n                isNoting={isNoting}\n                marks={marks}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n    </AspectRatioBox>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  &::before {\n    content: '';\n    width: 1px;\n    margin-left: -1px;\n    float: left;\n    height: 0;\n    padding-top: ${({ ratio }) => 100 / ratio}%;\n  }\n  &::after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n`;\n\nexport default ({ ratio = 1.0, children, ...props }) => {\n  return (\n    <Wrapper ratio={ratio} {...props}>\n      {children}\n    </Wrapper>\n  );\n};\n","import React, { useCallback } from 'react';\nimport AspectRatioWrapper from '../../../UI/AspectRatio/AspectRatioWrapper';\nimport digits from '../../../UI/Digits/Digits';\nimport styles from './Digits.module.scss';\n\nconst Digits = React.memo(\n  ({\n    isNoting,\n    activeVal,\n    availableDigits,\n    remainingDigits,\n    digitClickedHandler,\n  }) => {\n    const genClassName = useCallback(\n      d => {\n        const classes = [styles.Digit];\n        if (d === activeVal) {\n          classes.push(styles.active);\n        }\n        if (!availableDigits.has(d)) {\n          classes.push(styles.Disabled);\n        }\n        return classes.join(' ');\n      },\n      [activeVal, availableDigits]\n    );\n\n    return (\n      <div className={`${styles.Digits} ${isNoting ? styles.isNoting : ''}`}>\n        <AspectRatioWrapper\n          className={genClassName(1)}\n          onClick={\n            availableDigits.has(1) ? () => digitClickedHandler(1) : undefined\n          }\n        >\n          {digits[1]}\n          <div className={styles.Count}>{digits[remainingDigits[1]]}</div>\n        </AspectRatioWrapper>\n        {[2, 3, 4, 5, 6, 7, 8, 9].map(d => (\n          <div\n            key={d}\n            className={genClassName(d)}\n            onClick={\n              availableDigits.has(d) ? () => digitClickedHandler(d) : undefined\n            }\n          >\n            {digits[d]}\n            <div className={styles.Count}>{digits[remainingDigits[d]]}</div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n);\n\nexport default Digits;\n","import React from 'react';\nimport Digits from './Digits/Digits';\nimport Button from '../../UI/Button/Button';\nimport styles from './Controls.module.scss';\n\nconst Controls = ({\n  cellsRecord,\n  hasPrev,\n  hasNext,\n  jump,\n  jumpToFirst,\n  jumpToLast,\n  remainingDigits,\n  activeVal,\n  availableDigits,\n  digitClickedHandler,\n  showAvail,\n  isNoting,\n  withALS,\n  deselectHandler,\n  toggleShowAvailHandler,\n  toggleIsNotingHandler,\n  toggleWithALSHandler,\n  resetHandler,\n  eraseValueHandler,\n  autoNoteHandler,\n  autoPlacePointingClaimingHandler,\n  tip,\n  tipHandler,\n  cancelTipHandler,\n  changeChainStepHandler,\n  jumpToTrailStartHandler,\n}) => {\n  return (\n    <div className={styles.Controls}>\n      <div className={styles.History}>\n        <Button disabled={!hasPrev} onClick={jumpToFirst}>\n          &lt;&lt;\n        </Button>\n        <Button disabled={!hasPrev} onClick={() => jump(-1)}>\n          &lt;\n        </Button>\n        <Button disabled={!hasNext} onClick={() => jump(1)}>\n          &gt;\n        </Button>\n        <Button disabled={!hasNext} onClick={jumpToLast}>\n          &gt;&gt;\n        </Button>\n        <span>#{cellsRecord.idx}</span>\n        <span>{cellsRecord.desc}</span>\n      </div>\n      <div className={styles.Panel}>\n        <Button onClick={resetHandler}>Reset</Button>\n        <Button onClick={eraseValueHandler}>Erase</Button>\n        <Button onClick={deselectHandler}>Deselect</Button>\n        <Button type={showAvail ? 'On' : 'Off'} onClick={toggleShowAvailHandler}>\n          Avail\n        </Button>\n        <Button type={isNoting ? 'On' : 'Off'} onClick={toggleIsNotingHandler}>\n          Note\n        </Button>\n        <Button type={withALS ? 'On' : 'Off'} onClick={toggleWithALSHandler}>\n          ALS\n        </Button>\n      </div>\n      <Digits\n        isNoting={isNoting}\n        activeVal={activeVal}\n        availableDigits={availableDigits}\n        remainingDigits={remainingDigits}\n        digitClickedHandler={digitClickedHandler}\n      />\n      <div className={styles.Tools}>\n        <Button onClick={autoNoteHandler}>note</Button>\n        <Button onClick={autoPlacePointingClaimingHandler}>place/point/claim</Button>\n        <div className={styles.Tip}>\n          <Button type={tip && 'On'} onClick={tipHandler}>\n            {tip ? tip.name : 'tip'}\n          </Button>\n          {tip && (\n            <Button type={'Warn'} onClick={cancelTipHandler}>\n              X\n            </Button>\n          )}\n          {tip && tip.type === 'chain' && (\n            <>\n              <span className={styles.ChainSteper} onClick={() => changeChainStepHandler(-1)}>\n                &lt;\n              </span>\n              <span className={styles.ChainSteper} onClick={() => changeChainStepHandler(1)}>\n                &gt;\n              </span>\n            </>\n          )}\n          {tip && tip.type === 'trial-error' && (\n            <span className={styles.ChainSteper} onClick={jumpToTrailStartHandler}>\n              &lt;start\n            </span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Controls;\n","import React from 'react';\nimport styles from './Backdrop.module.scss';\n\nconst Backdrop = ({ show, onClick, absolute = false }) => {\n  if (!show) {\n    return null;\n  }\n  const classes = [styles.Backdrop];\n  if (absolute) {\n    classes.push(styles.Absolute);\n  }\n  return <div className={classes.join(' ')} onClick={onClick} />;\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport Backdrop from '../Backdrop/Backdrop';\nimport styles from './Modal.module.scss';\n\nconst Modal = ({ show = false, close, children }) => {\n  const classes = [styles.Modal];\n  if (show) {\n    classes.push(styles.Show);\n  }\n  return (\n    <>\n      <Backdrop show={show} onClick={close} />\n      <div className={classes.join(' ')}>\n        <div className={styles.Close} onClick={close}>\n          X\n        </div>\n        {children}\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(React.memo(Modal), (prevProps, nextProps) => {\n  return !prevProps.show && !nextProps.show;\n});\n","import React from 'react';\nimport styles from './Spinner.module.css';\n\nconst Spinner = () => {\n  return <div className={styles.Loader}>Loading...</div>;\n};\n\nexport default Spinner;\n","import React from 'react';\nimport styles from './Loading.module.scss';\nimport Backdrop from '../Backdrop/Backdrop';\nimport Spinner from '../Spinner/Spinner';\n\nexport default () => {\n  return (\n    <>\n      <Backdrop show absolute />\n      <div className={styles.Spinner}>\n        <Spinner />\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport Button from '../../components/UI/Button/Button';\nimport Board from '../../components/Sudoku/Board/Board';\nimport Controls from '../../components/Sudoku/Controls/Controls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Loading from '../../components/UI/Loading/Loading';\nimport QRCode from 'qrcode.react';\nimport styles from './Main.module.scss';\nimport * as sudokus from '../../libs/sudoku';\nimport { Notes } from '../../libs/sudoku';\nimport { getPosition, findClosedPosPair } from '../../libs/position';\nimport { console } from '../../libs/utils';\n\nconst Sudoku = ({\n  /** @type {sudokus.Sudoku} */ sudoku = new sudokus.Sudoku(),\n  startNewGameHandler,\n  newGameHandler,\n  emptyHandler,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [showShare, setShowShare] = useState(false);\n  const [, setChanged] = useState(0);\n  useEffect(() => {\n    sudoku.subscribe(setChanged);\n    return () => {\n      sudoku.unsubscribe(setChanged);\n    };\n  }, [sudoku]);\n\n  // {pos:[row, col], val:0}\n  const [activeState, setActiveState] = useState({ pos: null, val: 0 });\n  const { pos: activePos, val: activeVal } = activeState;\n  const [showAvail, setShowAvail] = useState(false);\n  const [isNoting, setIsNoting] = useState(true);\n  const [withALS, setWithALS] = useState(true);\n  const [tip, setTip] = useState(null);\n  const [chainStep, setChainStep] = useState(2);\n\n  // calculated states\n  const cellsRecord = sudoku.cellsRecord;\n  const isComplete = sudoku.isComplete;\n  const { cells } = cellsRecord;\n  // cells dependency is needed for memo check\n  const availableDigits = useMemo(() => sudoku.calcAvailableDigits(activePos, cells), [activePos, sudoku, cells]);\n  const availablePositions = useMemo(() => sudoku.calcAvailablePositions(activeVal, cells), [activeVal, sudoku, cells]);\n  const remainingDigits = useMemo(() => sudoku.calcRemainingDigits(cells), [sudoku, cells]);\n\n  // handlers\n  const startGameHandler = useCallback(() => {\n    newGameHandler(sudoku.stringify(cells, { placedAsOrigin: true, withNotes: false }));\n  }, [cells, newGameHandler, sudoku]);\n\n  const editGameHandler = useCallback(() => {\n    newGameHandler(sudoku.stringify(cells, { originAsPlaced: true, withNotes: false }));\n  }, [cells, newGameHandler, sudoku]);\n\n  const cellClickedHandler = useCallback(\n    pos => {\n      if (activeVal !== 0) {\n        // place or note\n        sudoku.updateCellValue(isNoting, pos, activeVal);\n      } else {\n        // select position\n        setActiveState(({ pos: curActivePos }) => {\n          if (curActivePos) {\n            if (pos === curActivePos) {\n              // cancel current selected\n              pos = null;\n            }\n          }\n          return { pos, val: 0 };\n        });\n      }\n    },\n    [activeVal, isNoting, sudoku]\n  );\n\n  const digitClickedHandler = useCallback(\n    (d, force = false) => {\n      // force active specified digit\n      if (!force) {\n        if (!availableDigits.has(d)) {\n          return;\n        }\n\n        if (activePos) {\n          // place or note\n          sudoku.updateCellValue(isNoting, activePos, d);\n        } else {\n          // active a value\n          setActiveState(({ val: curActiveVal }) => {\n            let val = d;\n            if (curActiveVal === d) {\n              // cancel active\n              val = 0;\n            }\n            return { pos: null, val };\n          });\n        }\n      } else {\n        // active a value\n        setActiveState({ pos: null, val: d });\n      }\n    },\n    [activePos, availableDigits, isNoting, sudoku]\n  );\n\n  const deselectHandler = useCallback(() => {\n    setActiveState({ pos: null, val: 0 });\n  }, []);\n\n  const resetHandler = useCallback(() => {\n    if (!window.confirm || window.confirm('Are you sure to reset?')) {\n      sudoku.reset();\n      deselectHandler();\n    }\n  }, [deselectHandler, sudoku]);\n\n  const eraseValueHandler = useCallback(() => {\n    if (activePos) {\n      sudoku.updateCellValue(false, activePos, Notes.new());\n    }\n  }, [activePos, sudoku]);\n\n  const toggleShowAvailHandler = useCallback(() => {\n    setShowAvail(showAvail => !showAvail);\n  }, []);\n\n  const toggleIsNotingHandler = useCallback(() => {\n    setIsNoting(isNoting => !isNoting);\n  }, []);\n\n  const toggleWithALSHandler = useCallback(() => {\n    setWithALS(v => !v);\n  }, []);\n\n  const autoNoteHandler = useCallback(() => {\n    sudoku.autoNote();\n  }, [sudoku]);\n\n  const autoPlacePointingClaimingHandler = useCallback(() => {\n    sudoku.autoPlacePointingClaiming();\n  }, [sudoku]);\n\n  const tipHandler = useCallback(() => {\n    // deselect\n    deselectHandler();\n    if (tip) {\n      // clear\n      setTip(null);\n      sudoku.clearHistoryLowerBound();\n\n      // handle tip\n      sudoku.handleTip(tip);\n    } else {\n      // find tip\n      setIsLoading(true);\n      setTimeout(() => {\n        // for test new tech.\n        // const t = sudoku.findTip({ trial: false });\n        const t = sudoku.findTip({ chain: { withoutALS: !withALS } });\n        setIsLoading(false);\n        if (t) {\n          console.log('tip:', t);\n          setTip(t);\n          if (t.type === 'chain') {\n            setChainStep(t.chain.length);\n          } else if (t.type === 'trial-error') {\n            sudoku.setHistoryLowerBound(t.startIdx);\n            if (t.err.digits.size > 0) {\n              digitClickedHandler([...t.err.digits][0], true);\n            }\n          }\n        }\n      }, 0);\n    }\n  }, [deselectHandler, digitClickedHandler, sudoku, tip, withALS]);\n\n  const cancelTipHandler = useCallback(() => {\n    if (tip) {\n      // clear\n      setTip(null);\n      if (tip.type === 'trial-error') {\n        sudoku.clearHistoryLowerBound();\n        sudoku.revertTo(tip.startIdx);\n      }\n    }\n  }, [sudoku, tip]);\n\n  const moveActivePos = useCallback(\n    (dRow, dCol) => {\n      if (activePos) {\n        setActiveState(({ pos: { row: curRow, col: curCol } }) => {\n          const pos = getPosition((curRow + 9 + dRow) % 9, (curCol + 9 + dCol) % 9);\n          return { val: 0, pos };\n        });\n      }\n    },\n    [activePos]\n  );\n\n  const moveActiveVal = useCallback(\n    d => {\n      if (activeVal) {\n        setActiveState(({ val: curVal }) => {\n          const val = ((curVal - 1 + d + 9) % 9) + 1;\n          return { pos: null, val };\n        });\n      }\n    },\n    [activeVal]\n  );\n\n  const marks = useMemo(() => {\n    if (tip) {\n      if (tip.type === 'group') {\n        const { cls, domains, poses: cells, notes } = tip;\n        const domainInfo = {};\n        for (const [domain, value] of Object.entries(domains)) {\n          domainInfo[domain + 's'] = new Set([value]);\n        }\n\n        if (cls === 0) {\n          // naked\n          return { effect: { ...domainInfo, notes }, highlights: { cells, notes } };\n        } else if (cls === 1) {\n          // hidden\n          return { domain: { ...domainInfo, notes }, highlights: { cells, notes } };\n        }\n      } else if (tip.type === 'X-Group') {\n        const { domain, rows, cols, blocks, poses: cells, d } = tip;\n        const notes = new Set([d]);\n        if (domain === 'row') {\n          return { domain: { rows }, effect: { cols, blocks, notes }, highlights: { cells, notes } };\n        } else if (domain === 'col') {\n          return { domain: { cols }, effect: { rows, blocks, notes }, highlights: { cells, notes } };\n        } else if (domain === 'block') {\n          return { domain: { blocks }, effect: { rows, cols, notes }, highlights: { cells, notes } };\n        }\n      } else if (tip.type === 'chain') {\n        const { chain, effectedPoses, d, effectedDs } = tip;\n        const curChain = chain.slice(0, chainStep);\n        const allPoses = [];\n        curChain.forEach(({ pos }) => {\n          if (!pos.isAlsc) {\n            // no alsc\n            allPoses.push(...sudokus.getRealPoses(pos));\n          }\n        });\n        const poses = new Set(allPoses);\n        const withoutOutlinePoses = new Set(allPoses);\n        // remove head and tail\n        sudokus.getRealPoses(chain[0].pos).forEach(p => withoutOutlinePoses.delete(p));\n        sudokus.getRealPoses(chain[chain.length - 1].pos).forEach(p => withoutOutlinePoses.delete(p));\n\n        const effectedNotes = effectedDs ? effectedDs : new Set([d]);\n        const posNotes = {};\n        const posSubNotes = {};\n        for (const n of curChain) {\n          let _posNotes = posNotes;\n          if (n.d !== d) {\n            _posNotes = posSubNotes;\n          }\n          const { pos } = n;\n          for (const p of sudokus.getRealPoses(pos)) {\n            const subNotes = _posNotes[p] || new Set();\n            _posNotes[p] = subNotes;\n            subNotes.add(n.d);\n          }\n        }\n\n        const frames = [];\n        const domain = {};\n        let lastAls = null;\n        let lastPos = null;\n\n        // frames\n        curChain.forEach(({ pos, als }) => {\n          if (pos.isAlsc) {\n            lastAls = als;\n            lastPos = pos;\n          } else if (pos.isGroup) {\n            const { key, domain, block, row, col } = pos;\n            frames.push({ key, domain: [...domain][0], block, row, col });\n          }\n        });\n        domain.cells = lastAls && lastAls.poses;\n        lastPos && sudokus.getRealPoses(lastPos).forEach(p => poses.add(p));\n\n        // arrows\n        const arrows = [];\n        let startNode = curChain[0];\n        for (const endNode of curChain.slice(1)) {\n          const [startPos, endPos] = findClosedPosPair(\n            sudokus.getRealPoses(startNode.pos),\n            sudokus.getRealPoses(endNode.pos)\n          );\n\n          arrows.push({\n            startPos,\n            startDigit: startNode.d,\n            endPos,\n            endDigit: endNode.d,\n            type: endNode.val ? 'solid' : 'dashed',\n          });\n          startNode = endNode;\n        }\n        const effect = curChain.length === chain.length ? { cells: effectedPoses, notes: effectedNotes } : null;\n        return {\n          domain,\n          frames,\n          arrows,\n          effect,\n          highlights: { cells: poses, posNotes, posSubNotes, withoutOutlinePoses },\n        };\n      } else if (tip.type === 'trial-error') {\n        const { startIdx, pos, d, err } = tip;\n        const values = new Set([d]);\n        let marks = null;\n        if (err === true) {\n          // is complete\n          marks = { highlights: { poses: new Set([pos]), values, notes: values } };\n        } else {\n          const { domain, digits } = err;\n          if (cellsRecord.idx >= startIdx) {\n            marks = {\n              effect: { [domain + 's']: new Set([err[domain]]), notes: digits, values: digits },\n              highlights: { cells: new Set([pos]), values, notes: values },\n            };\n          }\n        }\n        if (cellsRecord.idx >= startIdx) {\n          return marks;\n        }\n      }\n    }\n  }, [cellsRecord.idx, chainStep, tip]);\n\n  const changeChainStepHandler = useCallback(\n    d => {\n      if (tip && tip.type === 'chain') {\n        const len = tip.chain.length;\n        setChainStep(s => {\n          return ((s - 1 + d + len) % len) + 1;\n        });\n      }\n    },\n    [tip]\n  );\n\n  const jumpToTrailStartHandler = useCallback(() => {\n    if (tip && tip.type === 'trial-error') {\n      sudoku.jumpTo(tip.startIdx);\n    }\n  }, [sudoku, tip]);\n\n  // event listeners\n  useEffect(() => {\n    const keydownHandler = e => {\n      console.log(e);\n      // TODO: handler other shortcut keys\n      if (e.code.startsWith('Digit')) {\n        const d = parseInt(e.key);\n        digitClickedHandler(d);\n      } else if (e.key === 'N') {\n        startNewGameHandler();\n      } else if (e.key === 'n') {\n        if (e.ctrlKey) {\n          autoNoteHandler();\n        } else {\n          toggleIsNotingHandler();\n        }\n      } else if (e.key === 'a') {\n        if (e.ctrlKey) {\n          toggleShowAvailHandler();\n        } else {\n          toggleWithALSHandler();\n        }\n      } else if (e.key === 'r' && !e.isComposing) {\n        resetHandler();\n      } else if (e.key === 'e') {\n        eraseValueHandler();\n      } else if (e.key === 'b') {\n        if (!activeVal && !activePos) {\n          cellClickedHandler(getPosition(4, 4));\n        }\n      } else if (e.key === 'd' || e.key === 'Escape') {\n        deselectHandler();\n      } else if (e.key === 't') {\n        tipHandler();\n      } else if (e.key === 'x') {\n        cancelTipHandler();\n      } else if (e.key === 'y') {\n        changeChainStepHandler(-1);\n        jumpToTrailStartHandler();\n      } else if (e.key === 'u') {\n        changeChainStepHandler(1);\n      } else if (e.key === 'p') {\n        autoPlacePointingClaimingHandler();\n      } else if (e.key === 'h' || e.key === 'ArrowLeft') {\n        if (activePos) {\n          moveActivePos(0, -1);\n        } else if (activeVal) {\n          moveActiveVal(-1);\n        } else {\n          sudoku.jumpToFirst();\n        }\n      } else if (e.key === 'l' || e.key === 'ArrowRight') {\n        if (activePos) {\n          moveActivePos(0, 1);\n        } else if (activeVal) {\n          moveActiveVal(1);\n        } else {\n          sudoku.jumpToLast();\n        }\n      } else if (e.key === 'j' || e.key === 'ArrowDown') {\n        if (activePos) {\n          moveActivePos(1, 0);\n        } else if (activeVal) {\n          moveActiveVal(-1);\n        } else {\n          sudoku.jump(-1);\n        }\n      } else if (e.key === 'k' || e.key === 'ArrowUp') {\n        if (activePos) {\n          moveActivePos(-1, 0);\n        } else if (activeVal) {\n          moveActiveVal(1);\n        } else {\n          sudoku.jump(1);\n        }\n      } else {\n        return;\n      }\n      // e.preventDefault();\n    };\n    document.addEventListener('keydown', keydownHandler);\n\n    return () => {\n      document.removeEventListener('keydown', keydownHandler);\n    };\n  }, [\n    activePos,\n    activeVal,\n    autoNoteHandler,\n    autoPlacePointingClaimingHandler,\n    cancelTipHandler,\n    cellClickedHandler,\n    changeChainStepHandler,\n    deselectHandler,\n    digitClickedHandler,\n    eraseValueHandler,\n    jumpToTrailStartHandler,\n    moveActivePos,\n    moveActiveVal,\n    resetHandler,\n    startNewGameHandler,\n    sudoku,\n    tip,\n    tipHandler,\n    toggleIsNotingHandler,\n    toggleShowAvailHandler,\n    toggleWithALSHandler,\n  ]);\n\n  useEffect(() => {\n    if (tip) {\n      if (tip.includedCells && tip.includedCells.has(cells)) {\n        return;\n      }\n      // clear tip if values changed\n      setTip(null);\n      sudoku.clearHistoryLowerBound();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cells]);\n\n  let shareContent = null;\n  if (showShare) {\n    const url = new URL(window.location);\n    const initialPuzzle = sudoku.initialPuzzle;\n    const curPuzzle = sudoku.stringify();\n    url.search = '?puzzle=' + curPuzzle;\n    shareContent = (\n      <div className={styles.QRCode}>\n        <QRCode size={256} value={url.toString()} />\n        <p>{initialPuzzle}</p>\n        <p>{curPuzzle}</p>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {isLoading && <Loading />}\n      <Modal show={showShare} close={() => setShowShare(false)}>\n        {shareContent}\n      </Modal>\n      <div className={styles.Menu}>\n        <Button onClick={startNewGameHandler}>New</Button>\n        <Button onClick={startGameHandler}>Start</Button>\n        <Button onClick={editGameHandler}>Edit</Button>\n        <Button onClick={emptyHandler}>Empty</Button>\n        <Button onClick={() => setShowShare(true)}>Share</Button>\n      </div>\n      <div className={styles.Board}>\n        <Board\n          isComplete={isComplete}\n          cells={cells}\n          availablePositions={availablePositions}\n          activeVal={activeVal}\n          activePos={activePos}\n          cellClickedHandler={cellClickedHandler}\n          showAvail={showAvail}\n          isNoting={isNoting}\n          marks={marks}\n        />\n      </div>\n      <div className={styles.Controls}>\n        <Controls\n          cellsRecord={cellsRecord}\n          hasPrev={sudoku.hasPrev}\n          hasNext={sudoku.hasNext}\n          jump={sudoku.jump}\n          jumpToFirst={sudoku.jumpToFirst}\n          jumpToLast={sudoku.jumpToLast}\n          remainingDigits={remainingDigits}\n          activeVal={activeVal}\n          availableDigits={availableDigits}\n          digitClickedHandler={digitClickedHandler}\n          showAvail={showAvail}\n          isNoting={isNoting}\n          withALS={withALS}\n          resetHandler={resetHandler}\n          eraseValueHandler={eraseValueHandler}\n          deselectHandler={deselectHandler}\n          toggleShowAvailHandler={toggleShowAvailHandler}\n          toggleIsNotingHandler={toggleIsNotingHandler}\n          toggleWithALSHandler={toggleWithALSHandler}\n          autoNoteHandler={autoNoteHandler}\n          autoPlacePointingClaimingHandler={autoPlacePointingClaimingHandler}\n          tip={tip}\n          tipHandler={tipHandler}\n          cancelTipHandler={cancelTipHandler}\n          changeChainStepHandler={changeChainStepHandler}\n          jumpToTrailStartHandler={jumpToTrailStartHandler}\n        />\n      </div>\n      <div className={styles.Info}></div>\n    </>\n  );\n};\n\nexport default Sudoku;\n","import React, { useState, useCallback, useRef } from 'react';\nimport Button from '../../components/UI/Button/Button';\nimport styles from './NewGame.module.scss';\nimport { useEffect } from 'react';\n\nconst samplePuzzle = `901002708\n570060000\n000000004\n000000000\n700421900\n000098030\n300506070\n009003000\n000080051`;\n\nconst NewGame = ({ cancelNewGameHandler, newGameHandler, error }) => {\n  const [puzzle, setPuzzle] = useState('');\n  const puzzleChangedHandler = useCallback(event => {\n    setPuzzle(event.target.value);\n  }, []);\n\n  const textareaRef = useRef();\n  useEffect(() => {\n    textareaRef.current.focus();\n  }, []);\n\n  // event listeners\n  useEffect(() => {\n    const keydownHandler = e => {\n      // console.log(e);\n      if (e.key === 'Escape') {\n        cancelNewGameHandler();\n      } else if (e.key === 'Enter' && e.shiftKey) {\n        newGameHandler(puzzle);\n      } else {\n        return;\n      }\n      e.preventDefault();\n    };\n    document.addEventListener('keydown', keydownHandler);\n\n    return () => {\n      document.removeEventListener('keydown', keydownHandler);\n    };\n  }, [cancelNewGameHandler, newGameHandler, puzzle]);\n\n  return (\n    <div className={styles.NewGame}>\n      <h1>input a new puzzle</h1>\n      {error && <div className={styles.Error}>{error.message}</div>}\n      <textarea\n        ref={textareaRef}\n        id=\"puzzle\"\n        name=\"puzzle\"\n        inputMode=\"numeric\"\n        onChange={puzzleChangedHandler}\n        value={puzzle}\n        placeholder={samplePuzzle}\n      />\n      <Button onClick={cancelNewGameHandler}>Cancel</Button>\n      <Button onClick={() => newGameHandler(puzzle)}>Done</Button>\n    </div>\n  );\n};\n\nexport default NewGame;\n","import React, { useState, useCallback } from 'react';\nimport Main from './Main';\nimport NewGame from './NewGame';\nimport styles from './Sudoku.module.scss';\nimport * as sudokus from '../../libs/sudoku';\n\nconst Sudoku = () => {\n  const [sudoku, setSudoku] = useState(() => {\n    // get puzzle from url search parameter: puzzle\n    const puzzle = new URLSearchParams(window.location.search).get('puzzle');\n    try {\n      return new sudokus.Sudoku(puzzle);\n    } catch (error) {\n      return new sudokus.Sudoku();\n    }\n  });\n  const [isNewGame, setIsNewGame] = useState(false);\n  const [puzzleError, setPuzzleError] = useState(null);\n\n  // handlers\n  const startNewGameHandler = useCallback(() => {\n    setIsNewGame(true);\n  }, []);\n  const cancelNewGameHandler = useCallback(() => {\n    setIsNewGame(false);\n  }, []);\n\n  const newGameHandler = useCallback(puzzle => {\n    try {\n      setSudoku(new sudokus.Sudoku(puzzle));\n      setIsNewGame(false);\n      setPuzzleError(null);\n    } catch (error) {\n      setPuzzleError(error);\n    }\n  }, []);\n\n  const emptyHandler = useCallback(() => {\n    newGameHandler();\n  }, [newGameHandler]);\n\n  let content = null;\n  if (isNewGame) {\n    content = (\n      <NewGame cancelNewGameHandler={cancelNewGameHandler} newGameHandler={newGameHandler} error={puzzleError} />\n    );\n  } else {\n    content = (\n      <Main\n        sudoku={sudoku}\n        startNewGameHandler={startNewGameHandler}\n        newGameHandler={newGameHandler}\n        emptyHandler={emptyHandler}\n      />\n    );\n  }\n\n  return <div className={styles.Sudoku}>{content}</div>;\n};\n\nexport default Sudoku;\n","import React from 'react';\nimport Sudoku from './containers/Sudodu/Sudoku';\n\nexport default function App() {\n  return <Sudoku />;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}