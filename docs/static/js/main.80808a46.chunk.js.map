{"version":3,"sources":["libs/utils.js","components/Sudoku/Board/Block/Cell/Cell.module.scss","components/UI/Digits/Digits.module.scss","components/Sudoku/Controls/Controls.module.scss","components/Sudoku/Controls/Digits/Digits.module.scss","containers/Sudodu/Main.module.scss","components/Sudoku/Board/Block/Block.module.scss","components/Sudoku/Board/Board.module.scss","components/UI/Modal/Modal.module.scss","components/UI/Button/Button.module.scss","components/UI/Backdrop/Backdrop.module.scss","containers/Sudodu/NewGame.module.scss","components/Sudoku/Board/Arrow.module.scss","components/UI/Loading/Loading.module.scss","components/UI/Spinner/Spinner.module.css","containers/Sudodu/Sudoku.module.scss","components/UI/Button/Button.js","components/UI/Digits/Digits.js","libs/position.js","libs/notes.js","libs/logic.js","libs/solver.js","libs/sudoku.js","components/Sudoku/Board/Block/Cell/Cell.js","components/Sudoku/Board/Block/Block.js","components/UI/AspectRatio/AspectRatioBox.js","components/Sudoku/Board/calc.js","components/Sudoku/Board/Arrow.js","components/Sudoku/Board/Frame.js","components/Sudoku/Board/Board.js","components/UI/AspectRatio/AspectRatioWrapper.js","components/Sudoku/Controls/Digits/Digits.js","components/Sudoku/Controls/Controls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Spinner/Spinner.js","components/UI/Loading/Loading.js","containers/Sudodu/Main.js","containers/Sudodu/NewGame.js","containers/Sudodu/Sudoku.js","App.js","serviceWorker.js","index.js"],"names":["combx","comb","findNGroupFromLinks","findALSFromPoints","debug","process","nilFunc","setDebug","d","n","k","i","res","push","f","aggregateLinks","links","order","startName","endsName","s","link","start","end","v","getAttrDefault","Set","add","cls","options","checkClear","points","Object","values","xpoints","filter","p","ends","size","length","idxes","starts","idx","point","forEach","cleared","has","e","m","_console","window","global","console","enabled","ifEnabled","val","def","this","group","groupEnd","log","error","obj","name","defVal","hasOwnProperty","shuffleArray","array","j","Math","floor","random","intersection","setA","setB","_intersection","elem","TimeoutConfirmer","timeout","confirmContinue","rt","st","Date","ts","module","exports","Button","type","onClick","disabled","children","classes","styles","className","join","generateDigit","digitClass","c","color","digitClassName","style","backgroundColor","Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine","getDigitLocalPos","_baseArray","blockShape","indices","blocks","rows","cols","rowColToBlock","row","col","blockRowColIndex","blockRows","block","blockCols","newCells","valueFunc","map","copyCells","cells","copied","_rowPositions","key","toString","rowPositions","_rowRelatedPositions","r","pos","_colPositions","colPositions","_colRelatedPositions","_blockPositions","b","_blocFlattenkPositions","blockPoses","_blockRelatedPositions","_","_relatedPositions","getPosition","getPosBlock","getBlockPositions","getBlockFlattenPositions","getRowPositions","getColPositions","getRelatedBlockPositions","undefined","getRelatedRowPositions","getRelatedColPositions","getRelatedPositions","flattenPositions","flat","_keyPositionMapping","getPositionByKey","mapPositionsTo","getCell","a","sb","getCommonRelatedPositions","poses","rposes","calcPosDistance","aPos","bPos","dRow","dCol","findClosedPosPair","aPoses","bPoses","minDistance","Number","MAX_VALUE","digits","Notes","value","_base","notes","is","ns","findNGroup","findNXGroup","getPosDomains","domain","ds","getPosDigitLinks","positions","entries","note","getPositions","domains","getAToBLinks","getEnd","getRowToColLinks","getRowToBlockLinks","getColToBlockLinks","getPositionsForDigit","types","rc","cr","rb","br","cb","bc","rcLinks","isXWing","effect","rbLinks","cbLinks","search","initValue","new","stat","isSolved","chooseNextCell","candidates","nextCells","setCellValue","eliminate","xpos","xvals","minLen","vals","basicEliminate","rpos","newValue","delete","isEmpty","changed","dfsSearchChain","checkChain","genNextChainAndNode","searchChainDFS","Sudoku","puzzle","jumpTo","revert","_historyLowerBound","_curCellsIdx","_cellsHistory","_cut","_rollback","_notify","revertTo","jump","steps","curIdx","jumpToFirst","jumpToLast","lastIdx","getCurCells","_txCells","_setCellValue","_txSetCellValue","_shouldNotify","subscribers","_setPuzzle","defaultPuzzle","_chainCheckMemo","x","xy","parsedCells","parse","_results","xCells","cell","origin","results","et","JSON","stringify","solve","_setCells","slice","action","payload","_checkComplete","placedAsOrigin","withNotes","originAsPlaced","1","2","3","4","5","6","7","8","9","_startTx","curCells","_eliminate","actions","RESET","NOTE","_note","AUTO_NOTE","_autoNote","AUTO_PLACE","_autoPlace","AUTO_POINTING","_autoPointing","AUTO_CLAIMING","_autoClaiming","AUTO_PLACE_POINTING_CLAIMING","_autoPlacePointingClaiming","UPDATE_CELL_VALUE","_updateCellValue","ELIMINATE_GROUP","otherPoses","eliminateGroup","ELIMINATE_XGROUP","otherPositions","eliminateXGroup","ELIMINATE_UR","_eliminateUR","ELIMINATE_CHAIN","_eliminateChain","ELIMINATE_TRIAL_ERROR","_eliminateTrialError","HANDLE_TIP","_handleTip","commit","_handlActions","_commit","dispatch","isNoting","ur","chain","tip","errDigits","_isComplete","calcAvailableDigits","count","placed","_noteCellValue","_placeCellValue","oldCell","trial","withoutALS","findGroup","findXGroup","findUR","findChain","findTrialError","eliminateUR","eliminateChain","eliminateTrialError","_disableNotify","startIdx","maxDepth","tryTip","deepTried","updateCellValue","autoPlacePointingClaiming","err","_checkValidity","findTip","handleTip","_enableNotify","endIdx","includedCells","h","getDigitPosesAndLinks","alsSizes","dPoses","dGroupPoses","dAlsces","dLinks","baseData","singlePosSrcs","basicPosSrcs","isGroup","defaultConfig","tryDigitLinks","tryCellLinks","tryGroupLinks","tryAlscLinks","posSrcs","searchChain","earlyExitLen","checkMemo","checkChainX","checkChainXY","timeoutChecker","maxLength","config","getPoses","extraData","td","prepareChainResult","continue","alscSrcs","allClosedConfig","exit","effectedPoses","keep","yd","Error","flattenCells","match","cellPattern","flattenCellValues","startsWith","endsWith","split","parseInt","valuePattern","test","getPosTypeSign","isAlsc","startPos","endNode","endPos","hasMulti","hasGroup","hasALS","node","parts","checkExistAndEqual","startMemoKey","endMemoKey","memo","getRealPoses","cpos","checkOk","effectedDs","keepDs","startPoses","targets","tpos","chainHasNode","nextNode","cd","alsc","curNode","rcc","als","nextChainAndNode","hasCommon","newGroupPos","getOtherRowGroupPositions","groupPoses","getOtherColGroupPositions","getOtherBlockGroupPositions","filteredGroupPoses","ok","getGroupPosLink","strongTargets","weakTargets","getOtherGroupPositions","strongPos","opos","false","true","getPosLink","spos","filterPoses","getAlscLink","alscLinks","xPositions","xPoses","blockDigitPoses","digitPoses","sblock","digitGroups","sd","groupPos","gp","getDigitGroupPoses","alses","xlinks","digitInfos","sort","digitInfo","alsces","findGroupForALSC","getDigitALSCes","dAlscLinks","getRCCs","t","getDigitAlscAndLinks","otherDs","g","rccs","noteClassName","activeVal","highlighted","effectMarked","marks","Note","ActiveValue","src","highlights","posNotes","posSubNotes","subNotes","MarkedNoteValue","MarkedValue","Effected","Cell","React","activePos","available","showAvail","content","isSelected","activeRow","activeCol","activeBlock","Selected","Related","clickable","Available","Place","domainMarked","MarkedHighlight","withoutOutlinePoses","WithoutOutline","MarkedDomain","MarkedEffect","RowNotes","Value","Placed","Block","availableCells","cellClickedHandler","isOdd","Odd","Row","Box","styled","div","width","ratio","Content","fixed","scroll","getCoord","localRow","Arrow","attrs","y","distance","deg","borderTop","height","transform","dd","startDigit","endDigit","sc","calc","ec","sx","sy","dx","dy","sqrt","acos","PI","Pointer","Frame","ex","ey","top","left","right","bottom","startRow","startCol","endRow","endCol","Board","isComplete","availablePositions","SudokuBoard","Complete","AspectRatioBox","frames","frame","arrows","arrow","Wrapper","props","Digits","availableDigits","remainingDigits","digitClickedHandler","genClassName","useCallback","Digit","active","Disabled","AspectRatioWrapper","Count","Controls","cellsRecord","hasPrev","hasNext","withALS","deselectHandler","toggleShowAvailHandler","toggleIsNotingHandler","toggleWithALSHandler","solveHandler","resetHandler","eraseValueHandler","autoNoteHandler","autoPlacePointingClaimingHandler","tipHandler","cancelTipHandler","changeChainStepHandler","jumpToTrailStartHandler","History","desc","Panel","Tools","Tip","ChainSteper","Backdrop","show","absolute","Absolute","close","Modal","Show","Close","prevProps","nextProps","Spinner","Loader","sudoku","sudokus","startNewGameHandler","newGameHandler","emptyHandler","useState","isLoading","setIsLoading","showShare","setShowShare","setChanged","useEffect","subscribe","unsubscribe","activeState","setActiveState","setShowAvail","setIsNoting","setWithALS","setTip","chainStep","setChainStep","boardCells","useMemo","calcAvailablePositions","calcRemainingDigits","startGameHandler","editGameHandler","curActivePos","force","curActiveVal","confirm","reset","autoNote","clearHistoryLowerBound","setTimeout","setHistoryLowerBound","moveActivePos","curRow","curCol","moveActiveVal","domainInfo","curChain","allPoses","effectedNotes","_posNotes","lastAls","lastPos","startNode","len","jumpToTrialStartHandler","keydownHandler","code","ctrlKey","isComposing","metaKey","document","addEventListener","removeEventListener","shareContent","url","URL","location","initialPuzzle","curPuzzle","QRCode","Loading","Menu","Info","NewGame","cancelNewGameHandler","setPuzzle","puzzleChangedHandler","event","target","textareaRef","useRef","current","focus","shiftKey","preventDefault","message","ref","id","inputMode","onChange","placeholder","alertInfo","setAlertInfo","checkSudokuResults","URLSearchParams","get","instance","setSudoku","isNewGame","setIsNewGame","puzzleError","setPuzzleError","checkResults","alert","isDebug","utils","Main","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","href","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.80808a46.chunk.js","sourcesContent":["let debug = process.env.NODE_ENV !== 'production';\nconst nilFunc = () => {};\nexport const setDebug = () => {\n  debug = true;\n};\n\nfunction* combx(d, n, k) {\n  if (n < k) {\n  } else if (k === 1) {\n    for (let i = d; i < n + d; i++) {\n      yield [i];\n    }\n  } else if (n === k) {\n    const res = [];\n    for (let i = d; i < n + d; i++) {\n      res.push(i);\n    }\n    yield res;\n  } else {\n    // with 0\n    for (const res of combx(d + 1, n - 1, k - 1)) {\n      yield [d, ...res];\n    }\n    // without 0\n    yield* combx(d + 1, n - 1, k);\n  }\n}\n\nexport function* comb(n, k) {\n  yield* combx(0, n, k);\n}\n\nexport const aggregateLinks = (links, order = 0, startName = 'start', endsName = 'ends') => {\n  const s = {};\n  for (const link of links) {\n    const start = link[order];\n    const end = link[(order + 1) % 2];\n    const v = getAttrDefault(s, start, { [startName]: start, [endsName]: new Set() });\n    v[endsName].add(end);\n  }\n  return s;\n};\n\nexport function* findNGroupFromLinks(links, n, cls, options = { checkClear: true }) {\n  const points = Object.values(aggregateLinks(links, cls));\n  const xpoints = points.filter(p => p.ends.size <= n);\n  if (options.checkClear && points.length <= n) {\n    // only return group if count(starts) > n\n    return;\n  }\n\n  for (const idxes of comb(xpoints.length, n)) {\n    // check\n    const starts = new Set();\n    const ends = new Set();\n    for (const idx of idxes) {\n      const point = xpoints[idx];\n      starts.add(point.start);\n      point.ends.forEach(ends.add, ends);\n      if (ends.size > n) {\n        break;\n      }\n    }\n    if (ends.size === n) {\n      let cleared = options.checkClear;\n      if (cleared) {\n        // n is 1, no need to check.\n        // check if group is cleared\n        for (const p of points.filter(p => !starts.has(p.start))) {\n          if ([...p.ends].filter(e => !ends.has(e)).length < p.ends.size) {\n            // other starts has end in ends\n            // need clear\n            cleared = false;\n            break;\n          }\n        }\n      }\n\n      if (!cleared) {\n        yield [starts, ends];\n      }\n    }\n  }\n}\n\nexport function* findALSFromPoints(points, n) {\n  const m = n + 1;\n  const xpoints = points.filter(p => p.ends.size <= m);\n\n  for (const idxes of comb(xpoints.length, n)) {\n    // check\n    const starts = new Set();\n    const ends = new Set();\n    for (const idx of idxes) {\n      const point = xpoints[idx];\n      starts.add(point.start);\n      point.ends.forEach(ends.add, ends);\n      if (ends.size > m) {\n        break;\n      }\n    }\n    if (ends.size === m) {\n      yield [starts, ends];\n    }\n  }\n}\n\nconst _store = {};\nexport const memorize = f => (...args) => {\n  if (_store[f]) {\n    _store[f] = { args: [], res: undefined };\n  }\n  const data = _store[f];\n  if (!(data.args.length === args.length && data.args.reduce((r, arg, idx) => r && Object.is(arg, args[idx]), true))) {\n    data.args = args;\n    data.res = f(...args);\n  }\n  return data.res;\n};\n\nconst _console = (window || global || {}).console || {};\n\nexport const console = {\n  enabled: true,\n  ifEnabled(val, def) {\n    return (this.enabled && val) || def;\n  },\n  get group() {\n    return this.ifEnabled(debug && _console.group, nilFunc);\n  },\n  get groupEnd() {\n    return this.ifEnabled(debug && _console.groupEnd, nilFunc);\n  },\n  get log() {\n    return this.ifEnabled(debug && _console.log, nilFunc);\n  },\n  get error() {\n    return this.ifEnabled(debug && _console.error, nilFunc);\n  },\n};\n\nexport const getAttrDefault = (obj, name, defVal) => {\n  if (!obj.hasOwnProperty(name)) {\n    obj[name] = defVal;\n  }\n  return obj[name];\n};\nexport function shuffleArray(array) {\n  const res = [...array];\n  for (let i = res.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [res[i], res[j]] = [res[j], res[i]];\n  }\n  return res;\n}\n\nexport function intersection(setA, setB) {\n  let _intersection = new Set();\n  for (let elem of setB) {\n    if (setA.has(elem)) {\n      _intersection.add(elem);\n    }\n  }\n  return _intersection;\n}\n\nexport class TimeoutConfirmer {\n  constructor(timeout, confirmContinue) {\n    this.timeout = timeout;\n    this.confirmContinue = confirmContinue;\n    // running time\n    this.rt = 0;\n    // start time\n    this.st = new Date();\n  }\n\n  continue() {\n    const ts = new Date() - this.st;\n    if (ts >= this.timeout) {\n      this.rt += ts;\n      console.log(`running time: ${this.rt / 1000}s`);\n      if (!this.confirmContinue(this.rt)) {\n        return false;\n      }\n      // reset start time\n      this.st = new Date();\n    }\n    return true;\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Value\":\"Cell_Value__1lDbW\",\"Notes\":\"Cell_Notes__10ap7\",\"Related\":\"Cell_Related__ET6Lg\",\"Available\":\"Cell_Available__3vvqK\",\"Place\":\"Cell_Place__3TPHN\",\"Note\":\"Cell_Note__2U2fC\",\"MarkedDomain\":\"Cell_MarkedDomain__31hFJ\",\"MarkedEffect\":\"Cell_MarkedEffect___usON\",\"MarkedHighlight\":\"Cell_MarkedHighlight__2O1xC\",\"WithoutOutline\":\"Cell_WithoutOutline__35g8t\",\"ActiveValue\":\"Cell_ActiveValue__3McOV\",\"Placed\":\"Cell_Placed__3HOvj\",\"Selected\":\"Cell_Selected__2LsAU\",\"MarkedValue\":\"Cell_MarkedValue__dMEee\",\"MarkedNoteValue\":\"Cell_MarkedNoteValue__24o3W\",\"Effected\":\"Cell_Effected__HnLYk\",\"RowNotes\":\"Cell_RowNotes__1QNhn\",\"PlacedValue\":\"Cell_PlacedValue__2vP-2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Zero\":\"Digits_Zero__2W6xd\",\"One\":\"Digits_One__-wXsd\",\"Two\":\"Digits_Two__5WRCG\",\"Three\":\"Digits_Three__1GKk-\",\"Four\":\"Digits_Four__1ahFU\",\"Five\":\"Digits_Five__3m1dx\",\"Six\":\"Digits_Six__kvriF\",\"Seven\":\"Digits_Seven__2_nmU\",\"Eight\":\"Digits_Eight__GNMw3\",\"Nine\":\"Digits_Nine__3u9wd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Controls\":\"Controls_Controls__1Accx\",\"History\":\"Controls_History__2GRXF\",\"Panel\":\"Controls_Panel__1AK4m\",\"Tools\":\"Controls_Tools__1-fbY\",\"Tip\":\"Controls_Tip__2IHiE\",\"ChainSteper\":\"Controls_ChainSteper__RRrIh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Digits\":\"Digits_Digits__3-KZF\",\"Digit\":\"Digits_Digit__1MXW9\",\"digit\":\"Digits_digit__3Mpxe\",\"Disabled\":\"Digits_Disabled__1N4Jw\",\"active\":\"Digits_active__2AexO\",\"Count\":\"Digits_Count__Eq4Q5\",\"isNoting\":\"Digits_isNoting__-OBTK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Main_Menu__3YGZL\",\"Board\":\"Main_Board__3XJet\",\"Controls\":\"Main_Controls__1MSdo\",\"Info\":\"Main_Info__2888w\",\"QRCode\":\"Main_QRCode__1jj5B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Block\":\"Block_Block__1kJyh\",\"Odd\":\"Block_Odd__2xFZf\",\"Row\":\"Block_Row__11Olq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SudokuBoard\":\"Board_SudokuBoard__3cPYp\",\"Row\":\"Board_Row__2r5V5\",\"Complete\":\"Board_Complete__UekFD\",\"SudokuComplete\":\"Board_SudokuComplete__13blN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__31OI7\",\"Show\":\"Modal_Show__d05bc\",\"Close\":\"Modal_Close__IQjCe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"Warn\":\"Button_Warn__1cddQ\",\"On\":\"Button_On__3d77T\",\"Off\":\"Button_Off__R9f9J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__Vem4f\",\"Absolute\":\"Backdrop_Absolute__Z8lxG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewGame\":\"NewGame_NewGame__2hKIv\",\"Error\":\"NewGame_Error__mao55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pointer\":\"Arrow_Pointer__1rYd7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Loading_Spinner__1CFco\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load2\":\"Spinner_load2__2gkgc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sudoku\":\"Sudoku_Sudoku__3acWS\"};","import React from 'react';\nimport styles from './Button.module.scss';\n\nconst Button = ({ type, onClick, disabled = false, children }) => {\n  const classes = [styles.Button];\n  if (type) {\n    classes.push(styles[type]);\n  }\n  return (\n    <button className={classes.join(' ')} disabled={disabled} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport styles from './Digits.module.scss';\n\nconst styleColor = c => (c ? { backgroundColor: c } : {});\n\nconst generateDigit = digitClass => ({\n  color,\n  digitClassName = 'digit',\n  className = '',\n  children,\n}) => (\n  <div\n    className={`${digitClass} ${digitClassName} ${className}`}\n    style={styleColor(color)}\n  >\n    {children}\n  </div>\n);\n\nexport const Zero = generateDigit(styles.Zero);\nexport const One = generateDigit(styles.One);\nexport const Two = generateDigit(styles.Two);\nexport const Three = generateDigit(styles.Three);\nexport const Four = generateDigit(styles.Four);\nexport const Five = generateDigit(styles.Five);\nexport const Six = generateDigit(styles.Six);\nexport const Seven = generateDigit(styles.Seven);\nexport const Eight = generateDigit(styles.Eight);\nexport const Nine = generateDigit(styles.Nine);\n\nexport default [\n  <Zero />,\n  <One />,\n  <Two />,\n  <Three />,\n  <Four />,\n  <Five />,\n  <Six />,\n  <Seven />,\n  <Eight />,\n  <Nine />,\n];\n","// local position is position in block.\nexport const getDigitLocalPos = d => [Math.floor((d - 1) / 3), (d - 1) % 3];\nconst _baseArray = [0, 1, 2, 3, 4, 5, 6, 7, 8];\nexport const blockShape = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n];\n\nexport const indices = _baseArray;\nexport const blocks = _baseArray;\nexport const rows = _baseArray;\nexport const cols = _baseArray;\n\n// (row, col)->block\nexport const rowColToBlock = (row, col) => Math.floor(row / 3) * 3 + Math.floor(col / 3);\n// (row, col)-> index in block\nexport const blockRowColIndex = (row, col) => (row % 3) * 3 + (col % 3);\n// rows of block\nexport const blockRows = block => {\n  const start = Math.floor(block / 3) * 3;\n  return [start, start + 1, start + 2];\n};\n// cols of block\nexport const blockCols = block => {\n  const start = (block % 3) * 3;\n  return [start, start + 1, start + 2];\n};\n\nexport const newCells = valueFunc => {\n  return rows.map(row => cols.map(col => valueFunc && valueFunc(row, col)));\n};\nexport const copyCells = cells => {\n  const copied = [...cells];\n  for (const row of rows) {\n    copied[row] = [...copied[row].map(v => ({ ...v }))];\n  }\n  return copied;\n};\n\nconst _rowPositions = _baseArray.map(row =>\n  _baseArray.map(col => ({\n    key: `r${row}c${col}`,\n    toString() {\n      return this.key;\n    },\n    // left->right, top->bottom\n    idx: row * 9 + col,\n    // domains: row, col, block\n    row,\n    col,\n    block: rowColToBlock(row, col),\n  }))\n);\nexport const rowPositions = _rowPositions;\n\n// row positions without col\nconst _rowRelatedPositions = _baseArray.map(r => _baseArray.map(c => _rowPositions[r].filter(pos => pos.col !== c)));\nconst _colPositions = _baseArray.map(c => _baseArray.map(r => _rowPositions[r][c]));\nexport const colPositions = _colPositions;\n// col positions without row\nconst _colRelatedPositions = _baseArray.map(c => _baseArray.map(r => _colPositions[c].filter(pos => pos.row !== r)));\n\n// block positions 3x3\nconst _blockPositions = _baseArray.map(b => blockRows(b).map(row => _rowPositions[row].filter(pos => pos.block === b)));\n\nconst _blocFlattenkPositions = _baseArray.map(b => {\n  const blockPoses = _blockPositions[b];\n  return [...blockPoses[0], ...blockPoses[1], ...blockPoses[2]];\n});\n// block positions without it's row/col index\nconst _blockRelatedPositions = _baseArray.map(b =>\n  _baseArray.map(i => _blocFlattenkPositions[b].filter((_, idx) => idx !== i))\n);\n\n// positions without row/col\nconst _relatedPositions = _baseArray.map(r =>\n  _baseArray.map(c => {\n    const b = rowColToBlock(r, c);\n    const res = [];\n    _rowPositions.forEach(rows =>\n      rows.forEach(pos => {\n        const { row, col, block } = pos;\n        if (r === row && c === col && b === block) {\n          return;\n        }\n        if (r === row || c === col || b === block) {\n          res.push(pos);\n        }\n      })\n    );\n    return res;\n  })\n);\n\nexport const getPosition = (row, col) => _rowPositions[row][col];\n\nexport const getPosBlock = (row, col) => _rowPositions[row][col].block;\n\nexport const getBlockPositions = block => _blockPositions[block];\nexport const getBlockFlattenPositions = block => _blocFlattenkPositions[block];\nexport const getRowPositions = row => _rowPositions[row];\nexport const getColPositions = col => _colPositions[col];\n\nexport const getRelatedBlockPositions = ({ row, col, block }) =>\n  _blockRelatedPositions[block === undefined ? rowColToBlock(row, col) : block][blockRowColIndex(row, col)];\nexport const getRelatedRowPositions = ({ row, col }) => _rowRelatedPositions[row][col];\nexport const getRelatedColPositions = ({ row, col }) => _colRelatedPositions[col][row];\nexport const getRelatedPositions = ({ row, col }) => _relatedPositions[row][col];\n\n// all positions from left to right, top to bottom.\n// used to iterate all positions\nexport const flattenPositions = _rowPositions.flat();\n\nconst _keyPositionMapping = {};\nflattenPositions.forEach(pos => {\n  _keyPositionMapping[pos.key] = pos;\n});\n\nexport const getPositionByKey = key => _keyPositionMapping[key];\n\nexport const mapPositionsTo = f => _baseArray.map(row => _baseArray.map(col => f(row, col)));\n\nexport const getCell = (cells, pos) => cells[pos.row][pos.col];\n\nconst _intersection = (a, b) => {\n  const sb = new Set(b);\n  return a.filter(v => sb.has(v));\n};\n\nexport const getCommonRelatedPositions = (...poses) => {\n  switch (poses.length) {\n    case 0:\n      return [];\n    case 1:\n      return getRelatedPositions(poses[0]);\n    default:\n      const [pos, ...rposes] = poses;\n      return _intersection(getRelatedPositions(pos), getCommonRelatedPositions(...rposes));\n  }\n};\n\nconst calcPosDistance = (aPos, bPos) => {\n  const dRow = aPos.row - bPos.row;\n  const dCol = aPos.col - bPos.col;\n  return dRow * dRow + dCol * dCol;\n};\n\nexport const findClosedPosPair = (aPoses, bPoses) => {\n  if (aPoses.length === 1 && bPoses === 1) {\n    return [aPoses[0], bPoses[0]];\n  }\n\n  let minDistance = Number.MAX_VALUE;\n  let a = null;\n  let b = null;\n  for (const aPos of aPoses) {\n    for (const bPos of bPoses) {\n      const d = calcPosDistance(aPos, bPos);\n      if (d < minDistance) {\n        minDistance = d;\n        a = aPos;\n        b = bPos;\n      }\n    }\n  }\n\n  return [a, b];\n};\n","export const digits = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nexport class Notes {\n  static _base = 1 << 16;\n  static new(...notes) {\n    let value = Notes._base;\n    for (const n of notes) {\n      value |= 1 << n;\n    }\n    return value;\n  }\n\n  static isEmpty(value) {\n    return value === this._base;\n  }\n\n  static size(value) {\n    let s = 0;\n    for (let n = 1; n <= 9; n++) {\n      value = value >> 1;\n      if ((value & 1) === 1) {\n        s++;\n      }\n    }\n    return s;\n  }\n\n  static first(value) {\n    for (let n = 1; n <= 9; n++) {\n      if (Notes.has(value, n)) {\n        return n;\n      }\n    }\n  }\n\n  static entries(value) {\n    const res = [];\n    for (let n = 1; n <= 9; n++) {\n      if (Notes.has(value, n)) {\n        res.push(n);\n      }\n    }\n    return res;\n  }\n\n  static is(value) {\n    return (value & this._base) !== 0;\n  }\n\n  static has(value, n) {\n    return Notes.is(value) && (value & (1 << n)) !== 0;\n  }\n\n  static add(value, n) {\n    return value | (1 << n);\n  }\n\n  static delete(value, ...ns) {\n    for (const n of ns) {\n      value &= ~(1 << n);\n    }\n    return value;\n  }\n}\n","import { rowColToBlock, getRowPositions, getColPositions, getBlockFlattenPositions } from './position';\nimport { Notes } from './notes';\nimport { findNGroupFromLinks } from './utils';\nimport * as positions from './position';\n\nexport const getPosDomains = poses => {\n  const res = {};\n  for (const domain of ['row', 'col', 'block']) {\n    const ds = new Set();\n    poses.forEach(p => ds.add(p[domain]));\n    if (ds.size === 1) {\n      res[domain] = [...ds][0];\n    }\n  }\n  return res;\n};\n\nexport function getPosDigitLinks(cells, poses) {\n  const links = [];\n  for (const pos of poses) {\n    const { value } = positions.getCell(cells, pos);\n    if (!Notes.is(value)) {\n      continue;\n    }\n\n    for (const note of Notes.entries(value)) {\n      links.push([pos, note]);\n    }\n  }\n  return links;\n}\n\nexport function* findNGroup(cells, n, cls) {\n  for (const [domain, getPositions] of [\n    ['row', getRowPositions],\n    ['col', getColPositions],\n    ['block', getBlockFlattenPositions],\n  ]) {\n    for (const idx of positions.indices) {\n      const links = getPosDigitLinks(cells, getPositions(idx));\n      for (const group of findNGroupFromLinks(links, n, cls, { checkClear: n > 1 })) {\n        const poses = group[cls];\n        const notes = group[(cls + 1) % 2];\n        yield {\n          type: 'group',\n          cls,\n          n,\n          domains: cls === 0 ? getPosDomains(poses) : { [domain]: idx },\n          poses,\n          notes,\n          name: ['naked', 'hidden'][cls] + `-${n}-group`,\n        };\n      }\n    }\n  }\n}\n\nexport function eliminateGroup(group, getCell, setCellValue) {\n  if (group.n === 1) {\n    // place value\n    const pos = [...group.poses][0];\n    const d = [...group.notes][0];\n\n    setCellValue(pos, d);\n  } else if (group.cls === 0) {\n    // naked\n    // to eliminate other cells\n    const { row, col, block } = group.domains;\n    const otherPoses = [\n      ...(getRowPositions(row) || []),\n      ...(getColPositions(col) || []),\n      ...(getBlockFlattenPositions(block) || []),\n    ];\n    for (const pos of otherPoses) {\n      const { value } = getCell(pos);\n      if (!Notes.is(value) || group.poses.has(pos)) {\n        continue;\n      }\n\n      setCellValue(pos, Notes.delete(value, ...group.notes));\n    }\n  } else if (group.cls === 1) {\n    // hidden\n    // to eliminate other notes\n    for (const pos of group.poses) {\n      const { value } = getCell(pos);\n      setCellValue(pos, Notes.new(...Notes.entries(value).filter(n => group.notes.has(n))));\n    }\n  }\n}\n\nconst getAToBLinks = (getPositions, getEnd) => (cells, d) => {\n  const links = [];\n  for (let a = 0; a < 9; a++) {\n    for (const pos of getPositions(a)) {\n      const { value } = cells[pos.row][pos.col];\n      if (!Notes.is(value)) {\n        continue;\n      }\n      if (Notes.has(value, d)) {\n        links.push([a, getEnd(pos)]);\n      }\n    }\n  }\n  return links;\n};\n\nconst getRowToColLinks = getAToBLinks(positions.getRowPositions, pos => pos.col);\nconst getRowToBlockLinks = getAToBLinks(positions.getRowPositions, pos => rowColToBlock(pos.row, pos.col));\nconst getColToBlockLinks = getAToBLinks(positions.getColPositions, pos => rowColToBlock(pos.row, pos.col));\n\nconst getPositionsForDigit = (cells, d, positions) => {\n  const poses = [];\n  for (const pos of positions) {\n    const { value } = cells[pos.row][pos.col];\n    if (Notes.is(value) && Notes.has(value, d)) {\n      poses.push(pos);\n    }\n  }\n  return poses;\n};\n\nexport function* findNXGroup(cells, n, types = { rc: true, cr: true, rb: true, br: true, cb: true, bc: true }) {\n  for (let d = 1; d <= 9; d++) {\n    if (types.rc || types.cr) {\n      // row->col\n      const rcLinks = getRowToColLinks(cells, d);\n      if (types.rc) {\n        for (const group of findNGroupFromLinks(rcLinks, n, 0)) {\n          const [rows, cols] = group;\n          const poses = [];\n          let isXWing = true;\n          for (const row of rows) {\n            const rowPositions = getPositionsForDigit(cells, d, positions.getRowPositions(row));\n            if (rowPositions.length !== n) {\n              isXWing = false;\n            }\n            poses.push(...rowPositions);\n          }\n          const name = isXWing ? `${n}-X-Wing` : `${n}-XRC-Group`;\n          yield { name, domain: 'row', effect: 'col', rows, cols, poses: new Set(poses), d };\n        }\n      }\n      // col->row\n      if (types.cr) {\n        for (const group of findNGroupFromLinks(rcLinks, n, 1)) {\n          const [cols, rows] = group;\n          const poses = [];\n          let isXWing = true;\n          for (const col of cols) {\n            const colPositions = getPositionsForDigit(cells, d, positions.getColPositions(col));\n            if (colPositions.length !== n) {\n              isXWing = false;\n            }\n            poses.push(...getPositionsForDigit(cells, d, positions.getColPositions(col)));\n          }\n          const name = isXWing ? `${n}-X-Wing` : `${n}-XCR-Group`;\n          yield { name, domain: 'col', effect: 'row', rows, cols, poses: new Set(poses), d };\n        }\n      }\n    }\n\n    if (types.rb || types.br) {\n      // row->block, 1-xrb-group is claiming\n      const rbLinks = getRowToBlockLinks(cells, d);\n      if (types.rb) {\n        for (const group of findNGroupFromLinks(rbLinks, n, 0)) {\n          const [rows, blocks] = group;\n          const poses = [];\n          for (const row of rows) {\n            poses.push(...getPositionsForDigit(cells, d, positions.getRowPositions(row)));\n          }\n          const name = n === 1 ? 'claiming' : `${n}-XRB-Group`;\n          yield { name, domain: 'row', effect: 'block', rows, blocks, poses: new Set(poses), d };\n        }\n      }\n      // block-row, 1-xbr-group is pointing\n      if (types.br) {\n        for (const group of findNGroupFromLinks(rbLinks, n, 1)) {\n          const [blocks, rows] = group;\n          const poses = [];\n          for (const block of blocks) {\n            poses.push(...getPositionsForDigit(cells, d, positions.getBlockFlattenPositions(block)));\n          }\n          const name = n === 1 ? 'pointing' : `${n}-XBR-Group`;\n          yield { name, domain: 'block', effect: 'row', rows, blocks, poses: new Set(poses), d };\n        }\n      }\n    }\n\n    if (types.cb || types.bc) {\n      // col->block, 1-xcb-group is claiming\n      const cbLinks = getColToBlockLinks(cells, d);\n      if (types.cb) {\n        for (const group of findNGroupFromLinks(cbLinks, n, 0)) {\n          const [cols, blocks] = group;\n          const poses = [];\n          for (const col of cols) {\n            poses.push(...getPositionsForDigit(cells, d, positions.getColPositions(col)));\n          }\n          const name = n === 1 ? 'claiming' : `${n}-XCB-Group`;\n          yield { name, domain: 'col', effect: 'block', cols, blocks, poses: new Set(poses), d };\n        }\n      }\n\n      // block-col, 1-xbc-group is pointing\n      if (types.bc) {\n        for (const group of findNGroupFromLinks(cbLinks, n, 1)) {\n          const [blocks, cols] = group;\n          const poses = [];\n          for (const block of blocks) {\n            poses.push(...getPositionsForDigit(cells, d, positions.getBlockFlattenPositions(block)));\n          }\n          const name = n === 1 ? 'pointing' : `${n}-XBC-Group`;\n          yield { name, domain: 'block', effect: 'col', cols, blocks, poses: new Set(poses), d };\n        }\n      }\n    }\n  }\n}\n\nexport function eliminateXGroup(group, getCell, setCellValue) {\n  const otherPositions = [];\n  if (group.effect === 'row') {\n    for (const row of group.rows) {\n      otherPositions.push(...getRowPositions(row));\n    }\n  } else if (group.effect === 'col') {\n    for (const col of group.cols) {\n      otherPositions.push(...getColPositions(col));\n    }\n  } else if (group.effect === 'block') {\n    for (const block of group.blocks) {\n      otherPositions.push(...getBlockFlattenPositions(block));\n    }\n  }\n\n  for (const pos of otherPositions) {\n    const { value } = getCell(pos);\n    if (!Notes.is(value) || group.poses.has(pos)) {\n      continue;\n    }\n\n    setCellValue(pos, Notes.delete(value, group.d));\n  }\n}\n","import * as positions from './position';\nimport { Notes, digits } from './notes';\nimport { findNGroup } from './logic';\n// import { findNXGroup } from './logic';\nimport { console } from './utils';\n\nconst initValue = Notes.new(...digits);\n\nexport const solve = cells => {\n  const xCells = positions.newCells(() => ({ value: initValue }));\n  for (const pos of positions.flattenPositions) {\n    const cell = positions.getCell(cells, pos);\n    if (Notes.is(cell.value)) {\n      continue;\n    }\n\n    // copy origin\n    xCells[pos.row][pos.col].origin = cell.origin;\n\n    if (!setCellValue(xCells, pos, cell.value)) {\n      // unsolvable\n      return [];\n    }\n  }\n\n  const st = new Date();\n  const stat = { search: 0, setCellValue: 0, basicEliminate: 0, eliminate: 0 };\n  const results = [];\n  for (const res of search(xCells, stat)) {\n    const et = new Date();\n    console.log(`#${results.length}>puzzle solving time: ${et - st}ms, ${JSON.stringify(stat)}`);\n    results.push(res);\n    if (results.length > 1) {\n      // multi results\n      break;\n    }\n  }\n  const et = new Date();\n  console.log(`puzzle solving final time: ${et - st}ms, ${JSON.stringify(stat)}`);\n  return results;\n};\n\nfunction* search(cells, stat) {\n  stat && stat.search++;\n  if (isSolved(cells)) {\n    yield cells;\n    return;\n  }\n\n  const [pos, candidates] = chooseNextCell(cells);\n\n  for (const d of candidates) {\n    const nextCells = positions.copyCells(cells);\n\n    if (!(setCellValue(nextCells, pos, d, stat) && eliminate(nextCells, stat))) {\n      continue;\n    }\n\n    yield* search(nextCells, stat);\n  }\n}\n\nconst isSolved = cells => {\n  for (const pos of positions.flattenPositions) {\n    const { value } = positions.getCell(cells, pos);\n    if (Notes.is(value)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst chooseNextCell = cells => {\n  // strategies:\n  // #1. choose the unplaced cell with the fewest candidates.\n  // #2. choose the next unplaced cell.\n  // *#3. random\n\n  // #1.\n  let xpos;\n  let xvals;\n  let minLen = 10;\n  for (const pos of positions.flattenPositions) {\n    const { value } = positions.getCell(cells, pos);\n    if (!Notes.is(value)) {\n      continue;\n    }\n    const vals = Notes.entries(value);\n    // #3.\n    // xpos = pos;\n    // xvals = vals;\n    // if (Math.random() > 0.5) {\n    //   break;\n    // }\n    // #1.\n    if (vals.length < minLen) {\n      xpos = pos;\n      xvals = vals;\n      minLen = vals.length;\n    }\n\n    // #2.\n    // return [pos, vals];\n  }\n\n  // #1.#3.\n  return [xpos, xvals];\n};\n\nconst setCellValue = (cells, pos, d, stat) => {\n  stat && stat.setCellValue++;\n  const { value } = positions.getCell(cells, pos);\n  if (!Notes.has(value, d)) {\n    // can't set d at pos as candidates don't contain d.\n    return false;\n  }\n\n  // assign  d\n  cells[pos.row][pos.col].value = d;\n\n  return basicEliminate(cells, positions.getRelatedPositions(pos), d, stat);\n};\n\nconst basicEliminate = (cells, poses, d, stat) => {\n  stat && stat.basicEliminate++;\n  // basic: eliminate d from related positions.\n  for (const rpos of poses) {\n    const { value } = positions.getCell(cells, rpos);\n    if (!Notes.has(value, d)) {\n      continue;\n    }\n\n    // eliminate\n    const newValue = Notes.delete(value, d);\n    if (Notes.isEmpty(newValue)) {\n      // empty cell\n      return false;\n    }\n    cells[rpos.row][rpos.col].value = newValue;\n  }\n  return true;\n};\n\n// logic eliminate\nconst eliminate = (cells, stat) => {\n  stat && stat.eliminate++;\n  let changed;\n  do {\n    changed = false;\n\n    // 1. naked/hidden single\n    // 0:naked, 1:hidden\n    for (const cls of [0, 1]) {\n      for (const group of findNGroup(cells, 1, cls)) {\n        const pos = [...group.poses][0];\n        const d = [...group.notes][0];\n        if (!setCellValue(cells, pos, d, stat)) {\n          return false;\n        }\n        changed = true;\n      }\n    }\n\n    // 2. pointing/claiming\n    // for (const group of findNXGroup(cells, 1, { br: true, bc: true, rb: true, cb: true })) {\n    //   const effectedPoses = [];\n    //   if (group.effect === 'row') {\n    //     for (const row of group.rows) {\n    //       effectedPoses.push(...positions.getRowPositions(row));\n    //     }\n    //   } else if (group.effect === 'col') {\n    //     for (const col of group.cols) {\n    //       effectedPoses.push(...positions.getColPositions(col));\n    //     }\n    //   } else if (group.effect === 'block') {\n    //     for (const block of group.blocks) {\n    //       effectedPoses.push(...positions.getBlockFlattenPositions(block));\n    //     }\n    //   }\n    //   if (\n    //     !basicEliminate(\n    //       cells,\n    //       effectedPoses.filter(p => !group.poses.has(p)),\n    //       group.d,\n    //       stat\n    //     )\n    //   ) {\n    //     return false;\n    //   }\n    //   changed = true;\n    // }\n  } while (changed);\n  return true;\n};\n","import {\n  flattenPositions,\n  getRelatedPositions,\n  mapPositionsTo,\n  getRelatedRowPositions,\n  getRelatedColPositions,\n  getRelatedBlockPositions,\n  getRowPositions,\n  getColPositions,\n  getBlockFlattenPositions,\n} from './position';\nimport * as positions from './position';\nimport {\n  aggregateLinks,\n  console,\n  getAttrDefault,\n  shuffleArray,\n  findALSFromPoints,\n  intersection,\n  TimeoutConfirmer,\n} from './utils';\nimport { Notes, digits } from './notes';\nimport { findNGroup, eliminateGroup, findNXGroup, eliminateXGroup, getPosDigitLinks, getPosDomains } from './logic';\nimport { solve } from './solver';\n\nexport * from './notes';\n\nexport class Sudoku {\n  static defaultPuzzle = `\n  000000000 000000000 000000000\n  000000000 000000000 000000000\n  000000000 000000000 000000000\n `;\n  constructor(puzzle) {\n    this._shouldNotify = true;\n    this.subscribers = [];\n    this._setPuzzle(puzzle || Sudoku.defaultPuzzle);\n  }\n\n  _setPuzzle(puzzle) {\n    this._chainCheckMemo = { x: {}, xy: {} };\n    // clear history\n    this._cellsHistory = [];\n    this._curCellsIdx = -1;\n    this._txCells = null;\n    this._historyLowerBound = 0;\n    const parsedCells = Sudoku.parse(puzzle);\n    if (puzzle !== Sudoku.defaultPuzzle) {\n      this._results = solve(parsedCells);\n    }\n\n    this._setCells(parsedCells, 'init');\n    this.puzzle = this.stringify();\n    this._notify();\n  }\n\n  get results() {\n    return this._results;\n  }\n\n  solve() {\n    if (this._results && this._results.length > 0) {\n      // choose the first result.\n      this._setCells(this._results[0], 'solve');\n      this._notify();\n    }\n  }\n\n  setHistoryLowerBound(n) {\n    this._historyLowerBound = n;\n  }\n\n  clearHistoryLowerBound() {\n    this._historyLowerBound = 0;\n  }\n\n  get isComplete() {\n    return this._isComplete;\n  }\n\n  get initialPuzzle() {\n    return this.puzzle;\n  }\n\n  get cells() {\n    return this._cellsHistory[this._curCellsIdx].cells;\n  }\n\n  get cellsRecord() {\n    return this._cellsHistory[this._curCellsIdx];\n  }\n\n  get curIdx() {\n    return this._curCellsIdx;\n  }\n\n  get lastIdx() {\n    return this._cellsHistory.length - 1;\n  }\n\n  _cut() {\n    if (this._curCellsIdx + 1 < this._cellsHistory.length) {\n      this._cellsHistory = this._cellsHistory.slice(0, this._curCellsIdx + 1);\n    }\n  }\n\n  _setCells(cells, action, payload = {}) {\n    this._cut();\n    this._curCellsIdx++;\n    this._cellsHistory.push({\n      idx: this._curCellsIdx,\n      cells,\n      action,\n      payload,\n      get desc() {\n        return `[${action}] ${payload.name || ''}`;\n      },\n    });\n  }\n\n  get hasPrev() {\n    return this._curCellsIdx > 0;\n  }\n\n  get hasNext() {\n    return this._curCellsIdx < this._cellsHistory.length - 1;\n  }\n\n  jumpTo = (idx, revert = false) => {\n    if (idx < this._historyLowerBound) {\n      // can't set lower than lower bound.\n      return;\n    }\n\n    this._curCellsIdx = idx;\n\n    if (this._curCellsIdx < 0) {\n      this._curCellsIdx = 0;\n    } else if (this._curCellsIdx >= this._cellsHistory.length) {\n      this._curCellsIdx = this._cellsHistory.length - 1;\n    }\n    if (revert) {\n      this._cut();\n    }\n\n    this._rollback();\n\n    this._notify();\n  };\n\n  revertTo = idx => {\n    this.jumpTo(idx, true);\n  };\n\n  jump = steps => {\n    this.jumpTo(this.curIdx + steps);\n  };\n\n  jumpToFirst = () => {\n    this.jumpTo(0);\n  };\n\n  jumpToLast = () => {\n    this.jumpTo(this.lastIdx);\n  };\n\n  subscribe(f) {\n    this.subscribers.push(f);\n  }\n\n  unsubscribe(f) {\n    this.subscribers = this.subscribers.filter(s => s !== f);\n  }\n\n  _disableNotify() {\n    this._shouldNotify = false;\n  }\n\n  _enableNotify() {\n    this._shouldNotify = true;\n  }\n\n  _notify() {\n    if (this._shouldNotify) {\n      this._checkComplete();\n      for (const f of this.subscribers) {\n        f(n => n + 1);\n      }\n    }\n  }\n\n  static cellPattern = /(\\d)|(p\\d)|(n[1-9]*N)|\\./g;\n  static valuePattern = /^[1-9]$/;\n\n  static parse(puzzle) {\n    if (!puzzle || puzzle.length < 81) {\n      throw new Error(`bad sudoku puzzle format [${puzzle}]`);\n    }\n    // split cell\n    const flattenCells = puzzle.match(Sudoku.cellPattern);\n    if (flattenCells.length !== 81) {\n      throw new Error(`bad sudoku puzzle format [${puzzle}]`);\n    }\n\n    // parse values\n    const flattenCellValues = flattenCells.map(cell => {\n      if (cell.startsWith('n') && cell.endsWith('N')) {\n        // it's note\n        const notes = cell\n          .slice(1, -1)\n          .split('')\n          .map(s => parseInt(s));\n        return { value: Notes.new(...notes) };\n      } else if (cell.startsWith('p')) {\n        // it's placed value\n        return { value: parseInt(cell[1]) };\n      } else if (Sudoku.valuePattern.test(cell)) {\n        // it's value\n        return {\n          value: parseInt(cell),\n          // puzzle origin value\n          origin: true,\n        };\n      } else if (cell === '0' || cell === '.') {\n        // it's empty\n        return { value: Notes.new() };\n      }\n      throw new Error('impossible');\n    });\n\n    // organize the values\n    const cells = positions.newCells();\n    for (const pos of positions.flattenPositions) {\n      cells[pos.row][pos.col] = flattenCellValues[pos.idx];\n    }\n    return cells;\n  }\n\n  stringify(cells, options = {}) {\n    options = { placedAsOrigin: false, withNotes: true, originAsPlaced: false, ...options };\n    cells = cells || this.cells;\n    const res = [];\n    for (const pos of flattenPositions) {\n      const { origin, value } = cells[pos.row][pos.col];\n      if (Notes.is(value)) {\n        if (!options.withNotes) {\n          res.push('0');\n          continue;\n        }\n\n        // notes\n        if (Notes.isEmpty(value)) {\n          res.push('0');\n        } else {\n          res.push('n', ...Notes.entries(value), 'N');\n        }\n      } else if ((options.placedAsOrigin || origin) && !options.originAsPlaced) {\n        // origin\n        res.push(value);\n      } else {\n        // placed\n        res.push('p', value);\n      }\n    }\n    return res.join('');\n  }\n\n  // calcuate available digits for cell at postion <pos>.\n  calcAvailableDigits(pos) {\n    const res = new Set([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    if (!pos) {\n      return res;\n    }\n\n    const cell = this.getCell(pos);\n    if (cell.origin) {\n      // origin can't be changed\n      return new Set();\n    }\n\n    for (const rpos of getRelatedPositions(pos)) {\n      const { value } = this.getCell(rpos);\n      if (!Notes.is(value)) {\n        res.delete(value);\n      }\n    }\n    return res;\n  }\n\n  calcRemainingDigits() {\n    const res = { 1: 9, 2: 9, 3: 9, 4: 9, 5: 9, 6: 9, 7: 9, 8: 9, 9: 9 };\n    for (const pos of flattenPositions) {\n      const { value } = this.getCell(pos);\n      if (!Notes.is(value)) {\n        res[value]--;\n      }\n    }\n    return res;\n  }\n\n  calcAvailablePositions(d) {\n    if (!(d >= 1 && d <= 9)) {\n      return null;\n    }\n\n    const res = mapPositionsTo(() => true);\n    for (const pos of flattenPositions) {\n      const { value } = this.getCell(pos);\n      if (!Notes.is(value)) {\n        res[pos.row][pos.col] = false;\n        if (value === d) {\n          // clear\n          for (const { row, col } of getRelatedPositions(pos)) {\n            res[row][col] = false;\n          }\n        }\n      }\n    }\n    return res;\n  }\n\n  _txSetCellValue(pos, value) {\n    const { row, col } = pos;\n    const { value: oldValue } = this.getCell(pos);\n    if (value === oldValue) {\n      return;\n    }\n\n    this._startTx();\n    const curCells = this.getCurCells();\n    if (this._txCells === curCells) {\n      this._txCells = [...curCells];\n    }\n    if (this._txCells[row] === curCells[row]) {\n      this._txCells[row] = [...curCells[row]];\n    }\n    if (this._txCells[row][col] === curCells[row][col]) {\n      this._txCells[row][col] = { ...curCells[row][col] };\n    }\n    this._txCells[row][col].value = value;\n    if (!Notes.is(value)) {\n      // updated related notes\n      for (const rpos of getRelatedPositions(pos)) {\n        const cell = this.getCell(rpos);\n        if (!Notes.is(cell.value)) {\n          // is not notes\n          continue;\n        }\n        this._eliminate(rpos, value);\n      }\n    }\n  }\n\n  _eliminate(pos, ...ds) {\n    const { value } = this.getCell(pos);\n    this._txSetCellValue(pos, Notes.delete(value, ...ds));\n  }\n\n  getCurCells = () => {\n    if (this._txCells) {\n      // in transaction\n      return this._txCells;\n    }\n    return this.cells;\n  };\n\n  getCell = ({ row, col }) => {\n    return this.getCurCells()[row][col];\n  };\n\n  _startTx() {\n    if (!this._txCells) {\n      this._txCells = this.getCurCells();\n    }\n  }\n\n  _commit(action, payload) {\n    if (this._txCells && this._txCells !== this.cells) {\n      this._setCells(this._txCells, action, payload);\n      this._txCells = null;\n      this._notify();\n    }\n  }\n\n  _rollback() {\n    this._txCells = null;\n  }\n\n  _setCellValue = (pos, value) => {\n    this._txSetCellValue(pos, value);\n  };\n\n  // actions\n  static actions = {\n    RESET: 'Reset',\n    NOTE: 'Note',\n    UPDATE_CELL_VALUE: 'Update Cell',\n    AUTO_NOTE: 'Auto Note',\n    AUTO_POINTING: 'Auto Pointing',\n    AUTO_CLAIMING: 'Auto Claiming',\n    AUTO_PLACE: 'Auto Place',\n    AUTO_PLACE_POINTING_CLAIMING: 'Auto Place/Pointing/Claiming',\n    ELIMINATE_GROUP: 'X Group',\n    ELIMINATE_XGROUP: 'X XGroup',\n    ELIMINATE_UR: 'X UR',\n    ELIMINATE_CHAIN: 'X Chain',\n    ELIMINATE_TRIAL_ERROR: 'X Trial Error',\n    HANDLE_TIP: 'Handle Tip',\n  };\n\n  _handlActions(action, payload) {\n    switch (action) {\n      case Sudoku.actions.RESET:\n        this._setPuzzle(this.puzzle);\n        break;\n      case Sudoku.actions.NOTE:\n        this._note(payload);\n        break;\n      case Sudoku.actions.AUTO_NOTE:\n        this._autoNote();\n        break;\n      case Sudoku.actions.AUTO_PLACE:\n        this._autoPlace();\n        break;\n      case Sudoku.actions.AUTO_POINTING:\n        this._autoPointing();\n        break;\n      case Sudoku.actions.AUTO_CLAIMING:\n        this._autoClaiming();\n        break;\n      case Sudoku.actions.AUTO_PLACE_POINTING_CLAIMING:\n        this._autoPlacePointingClaiming();\n        break;\n      case Sudoku.actions.UPDATE_CELL_VALUE:\n        this._updateCellValue(payload);\n        break;\n      case Sudoku.actions.ELIMINATE_GROUP:\n        eliminateGroup(payload, this.getCell, this._setCellValue);\n        break;\n      case Sudoku.actions.ELIMINATE_XGROUP:\n        eliminateXGroup(payload, this.getCell, this._setCellValue);\n        break;\n      case Sudoku.actions.ELIMINATE_UR:\n        this._eliminateUR(payload);\n        break;\n      case Sudoku.actions.ELIMINATE_CHAIN:\n        this._eliminateChain(payload);\n        break;\n      case Sudoku.actions.ELIMINATE_TRIAL_ERROR:\n        this._eliminateTrialError(payload);\n        break;\n      case Sudoku.actions.HANDLE_TIP:\n        this._handleTip(payload);\n        break;\n      default:\n        break;\n    }\n  }\n\n  dispatch(action, payload, options) {\n    options = { commit: true, log: true, ...(options || {}) };\n    if (options.log) {\n      console.group(`[${action}]`);\n      payload && console.log('->payload:', payload);\n      options && console.log('->options:', options);\n    }\n\n    this._startTx();\n    this._handlActions(action, payload);\n\n    if (options.log) {\n      console.groupEnd();\n    }\n\n    if (options.commit) {\n      this._commit(action, payload);\n    }\n  }\n\n  reset() {\n    this.dispatch(Sudoku.actions.RESET);\n  }\n\n  note(pos) {\n    this.dispatch(Sudoku.actions.NOTE, pos);\n  }\n\n  updateCellValue(isNoting, pos, value, type) {\n    this.dispatch(Sudoku.actions.UPDATE_CELL_VALUE, {\n      isNoting,\n      pos,\n      value,\n      name: `${type || (isNoting ? 'note' : 'place')} ${value}@${pos}`,\n    });\n  }\n\n  autoNote() {\n    this.dispatch(Sudoku.actions.AUTO_NOTE);\n  }\n\n  autoPlacePointingClaiming() {\n    this.dispatch(Sudoku.actions.AUTO_PLACE_POINTING_CLAIMING);\n  }\n\n  autoPlace() {\n    this.dispatch(Sudoku.actions.AUTO_PLACE);\n  }\n\n  autoPointing() {\n    this.dispatch(Sudoku.actions.AUTO_POINTING);\n  }\n\n  autoClaiming() {\n    this.dispatch(Sudoku.actions.AUTO_CLAIMING);\n  }\n\n  eliminateGroup(group) {\n    this.dispatch(Sudoku.actions.ELIMINATE_GROUP, group);\n  }\n\n  eliminateXGroup(group) {\n    this.dispatch(Sudoku.actions.ELIMINATE_XGROUP, group);\n  }\n\n  eliminateUR(ur) {\n    this.dispatch(Sudoku.actions.ELIMINATE_UR, ur);\n  }\n\n  eliminateChain(chain) {\n    this.dispatch(Sudoku.actions.ELIMINATE_CHAIN, chain);\n  }\n\n  eliminateTrialError(res) {\n    this.dispatch(Sudoku.actions.ELIMINATE_TRIAL_ERROR, res);\n  }\n\n  handleTip(tip) {\n    this.dispatch(Sudoku.actions.HANDLE_TIP, tip);\n  }\n\n  _checkValidity() {\n    // check every house should has 9 digits\n    for (const [domain, getPositions] of [\n      ['row', getRowPositions],\n      ['col', getColPositions],\n      ['block', getBlockFlattenPositions],\n    ]) {\n      for (const idx of positions.indices) {\n        const errDigits = new Set(digits);\n        for (const pos of getPositions(idx)) {\n          const { value } = this.getCell(pos);\n          if (domain === 'row' && Notes.isEmpty(value)) {\n            // check empty.\n            return { domain: 'cell', cell: pos, digits: new Set() };\n          }\n\n          if (Notes.is(value)) {\n            Notes.entries(value).forEach(v => errDigits.delete(v));\n          } else {\n            errDigits.delete(value);\n          }\n        }\n        if (errDigits.size !== 0) {\n          return { domain, [domain]: idx, digits: errDigits };\n        }\n      }\n    }\n  }\n\n  _checkComplete() {\n    for (const pos of positions.flattenPositions) {\n      const { value } = this.getCell(pos);\n      if (Notes.is(value)) {\n        this._isComplete = false;\n        return false;\n      }\n    }\n    this._isComplete = true;\n    return true;\n  }\n\n  _note(pos) {\n    const { value } = this.getCell(pos);\n    if (!Notes.is(value)) {\n      return;\n    }\n    if (Notes.size(value) > 0) {\n      // only note empty cell. erase before re-note.\n      return;\n    }\n    this._setCellValue(pos, Notes.new(...this.calcAvailableDigits(pos)));\n  }\n\n  _autoNote() {\n    for (const pos of flattenPositions) {\n      this.dispatch(Sudoku.actions.NOTE, pos, { commit: false, log: false });\n    }\n  }\n\n  _autoPlacePointingClaiming() {\n    try {\n      let count = 0;\n      do {\n        count = 0;\n        count += this._autoPlace();\n        this._commit(Sudoku.actions.AUTO_PLACE);\n        count += this._autoPointing();\n        this._commit(Sudoku.actions.AUTO_POINTING);\n        count += this._autoClaiming();\n        this._commit(Sudoku.actions.AUTO_CLAIMING);\n      } while (count > 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // auto place naked/hidden single value\n  _autoPlace() {\n    let count = 0;\n    let placed = false;\n\n    console.group('[auto place]');\n    do {\n      placed = false;\n      // 0:naked, 1:hidden\n      for (const cls of [0, 1]) {\n        for (const group of findNGroup(this.getCurCells(), 1, cls)) {\n          this.dispatch(Sudoku.actions.ELIMINATE_GROUP, group, { commit: false });\n          count++;\n          placed = true;\n          break;\n        }\n      }\n    } while (placed);\n    console.groupEnd();\n\n    return count;\n  }\n\n  // block eliminate row/col\n  _autoPointing() {\n    let count = 0;\n    console.group('[auto pointing]');\n    for (const group of findNXGroup(this.getCurCells(), 1, { br: true, bc: true })) {\n      console.log(group);\n      this.dispatch(Sudoku.actions.ELIMINATE_XGROUP, group, { commit: false });\n      count++;\n    }\n    console.groupEnd();\n    return count;\n  }\n\n  // row/col eliminate block\n  _autoClaiming() {\n    let count = 0;\n    console.group('[auto claiming]');\n    for (const group of findNXGroup(this.getCurCells(), 1, { rb: true, cb: true })) {\n      this.dispatch(Sudoku.actions.ELIMINATE_XGROUP, group, { commit: false });\n      count++;\n    }\n    console.groupEnd();\n    return count;\n  }\n\n  _updateCellValue({ isNoting, pos, value }) {\n    if (isNoting) {\n      this._noteCellValue(pos, value);\n    } else {\n      this._placeCellValue(pos, value);\n    }\n  }\n\n  _placeCellValue(pos, value) {\n    const oldCell = this.getCell(pos);\n    if (oldCell.origin) {\n      // can't place origin value\n      return;\n    }\n\n    if (oldCell.value === value) {\n      // cancel current value\n      value = Notes.new();\n    }\n\n    this._setCellValue(pos, value);\n  }\n\n  _noteCellValue(pos, n) {\n    const { value } = this.getCell(pos);\n    if (!Notes.is(value)) {\n      // can't note cell with value.\n      return;\n    }\n\n    // note\n    let notes = value;\n    if (Notes.has(notes, n)) {\n      notes = Notes.delete(notes, n);\n    } else {\n      notes = Notes.add(notes, n);\n    }\n\n    this._setCellValue(pos, notes);\n  }\n\n  findGroup(cells) {\n    for (let n = 1; n <= 8; n++) {\n      // 0:naked group, 1: hidden group\n      for (const cls of [0, 1]) {\n        for (const group of findNGroup(cells, n, cls)) {\n          // only return the first group\n          return group;\n        }\n      }\n    }\n  }\n\n  findXGroup(cells) {\n    for (let n = 1; n <= 8; n++) {\n      for (const group of findNXGroup(cells, n)) {\n        group.type = 'X-Group';\n        return group;\n      }\n    }\n  }\n\n  findUR(cells) {\n    //\n  }\n\n  _eliminateUR(ur) {\n    //\n  }\n\n  findTip(options) {\n    options = { trial: true, chain: { withoutALS: false }, ...options };\n    const cells = this.getCurCells();\n    return (\n      this.findGroup(cells) ||\n      this.findXGroup(cells) ||\n      this.findUR(cells) ||\n      this.findChain(cells, options.chain) ||\n      (options.trial && this.findTrialError())\n    );\n  }\n\n  _handleTip(tip) {\n    if (tip.type === 'group') {\n      this.eliminateGroup(tip);\n    } else if (tip.type === 'X-Group') {\n      this.eliminateXGroup(tip);\n    } else if (tip.type === 'ur') {\n      this.eliminateUR(tip);\n    } else if (tip.type === 'chain') {\n      this.eliminateChain(tip);\n    } else if (tip.type === 'trial-error') {\n      this.eliminateTrialError(tip);\n    }\n  }\n\n  findTrialError() {\n    this._disableNotify();\n    const startIdx = this._curCellsIdx;\n    // randomize positions\n    const poses = shuffleArray(\n      positions.flattenPositions.filter(p => {\n        const { value } = this.getCell(p);\n        return Notes.is(value);\n      })\n    );\n    // sort positions by candidates count.\n    // const poses = positions.flattenPositions\n    //   .filter(p => {\n    //     const { value } = this.getCell(p);\n    //     return Notes.is(value);\n    //   })\n    //   .sort((pa, pb) => {\n    //     const ca = Notes.size(this.getCell(pa).value);\n    //     const cb = Notes.size(this.getCell(pb).value);\n    //     return ca - cb;\n    //   });\n    for (const tryTip of [false, { maxDepth: 15 }, { maxDepth: 25 }, { maxDepth: Number.MAX_VALUE }]) {\n      for (const pos of poses) {\n        const { value } = this.getCell(pos);\n        for (const d of Notes.entries(value)) {\n          console.enabled = true;\n          console.log(`try: ${d}@${pos} ${JSON.stringify(tryTip)}`);\n          console.enabled = false;\n          // start trial for d@pos\n          let deepTried = 0;\n          this.updateCellValue(false, pos, d, 'try');\n          this.autoPlacePointingClaiming();\n          let err = this._checkValidity();\n          if (!err && tryTip) {\n            let tip = this.findTip({ trial: false, chain: { withoutALS: true } });\n            while (tip) {\n              deepTried++;\n              this.handleTip(tip);\n              this.autoPlacePointingClaiming();\n              err = this._checkValidity();\n              if (err) {\n                break;\n              }\n              if (deepTried > tryTip.maxDepth) {\n                break;\n              }\n              tip = this.findTip({ trial: false, chain: { withoutALS: true } });\n            }\n            if (this._checkComplete()) {\n              err = true;\n            }\n          }\n          if (err) {\n            // restore some settings.\n            console.enabled = true;\n            this._enableNotify();\n            const endIdx = this._curCellsIdx;\n            const includedCells = new Set(\n              this._cellsHistory.filter(({ idx }) => idx >= startIdx && idx <= endIdx).map(h => h.cells)\n            );\n            return {\n              startIdx,\n              endIdx,\n              includedCells,\n              pos,\n              d,\n              err,\n              type: 'trial-error',\n              name: `try${deepTried ? '*' + deepTried : ''} ${d}@${pos}`,\n            };\n          }\n          this.jumpTo(startIdx);\n        }\n      }\n    }\n    // revert\n    this.jumpTo(startIdx);\n    this._enableNotify();\n  }\n\n  _eliminateTrialError(res) {\n    const { startIdx, pos, d, err } = res;\n    if (err === true) {\n      // complete\n      return;\n    }\n    this.revertTo(startIdx);\n    this._eliminate(pos, d);\n  }\n\n  findChain(cells, options = {}) {\n    options = { withoutALS: true, timeout: 60 * 1000, confirmContinue: null, ...options };\n    const [dPoses, dGroupPoses, dAlsces, dLinks] = getDigitPosesAndLinks(cells, { alsSizes: [1, 2, 3, 4, 5] });\n    console.log('dPoses:', dPoses);\n    console.log('dGroupPoses:', dGroupPoses);\n    console.log('dAlsces:', dAlsces);\n    console.log('dLinks:', dLinks);\n    // randomize digits.\n    const ds = shuffleArray(digits);\n    const baseData = { dLinks, dAlsces, val: false, cells };\n    const singlePosSrcs = [d => dPoses[d]];\n    const basicPosSrcs = [...singlePosSrcs, d => (dGroupPoses[d] || []).filter(p => p.isGroup)];\n    const defaultConfig = {\n      tryDigitLinks: true,\n      tryCellLinks: false,\n      tryGroupLinks: false,\n      tryAlscLinks: false,\n      posSrcs: basicPosSrcs,\n      searchChain: dfsSearchChain,\n      earlyExitLen: 7,\n      checkMemo: this._chainCheckMemo,\n    };\n    // TODO: 在checkMemo的基础上，如果startPos对应的所有可能endPos都checkFailed，则不搜索\n    const stat = { searchChainDFS: 0, checkChainX: 0, checkChainXY: 0 };\n\n    const timeoutChecker = options.confirmContinue && new TimeoutConfirmer(options.timeout, options.confirmContinue);\n    // without ALS\n    for (const maxLength of [15, 20 /*,Number.MAX_VALUE*/]) {\n      for (const config of [\n        defaultConfig,\n        { ...defaultConfig, tryCellLinks: true },\n        { ...defaultConfig, tryCellLinks: true, tryGroupLinks: true },\n      ]) {\n        for (const getPoses of config.posSrcs) {\n          const extraData = { ...baseData, maxLength, ...config, stat: { ...stat } };\n          for (const d of ds) {\n            extraData.td = d;\n            for (const res of config.searchChain(d, getPoses(d) || [], extraData)) {\n              console.log('chain stat:', maxLength, extraData.stat);\n              return prepareChainResult(res);\n            }\n            // check continue\n            if (timeoutChecker && !timeoutChecker.continue()) {\n              return prepareChainResult(extraData.res);\n            }\n          }\n          console.log('chain stat:', maxLength, extraData.stat);\n          if (extraData.res) {\n            return prepareChainResult(extraData.res);\n          }\n        }\n      }\n    }\n\n    if (!options.withoutALS) {\n      // with ALS\n      const alscSrcs = [d => Object.values(dAlsces[d] || {})];\n      const allClosedConfig = { ...defaultConfig, tryDigitLinks: false, posSrcs: [] };\n      for (const config of [\n        // pure ALS-chain\n        { ...allClosedConfig, tryAlscLinks: true, maxLength: 15, earlyExitLen: 15, posSrcs: alscSrcs },\n        {\n          ...defaultConfig,\n          tryDigitLinks: true,\n          tryGroupLinks: true,\n          tryAlscLinks: true,\n          maxLength: 15,\n          earlyExitLen: 15,\n          posSrcs: basicPosSrcs,\n        },\n      ]) {\n        for (const getPoses of config.posSrcs) {\n          const extraData = { ...baseData, ...config, stat: { ...stat } };\n          for (const d of ds) {\n            extraData.td = d;\n            for (const res of config.searchChain(d, getPoses(d) || [], extraData, timeoutChecker)) {\n              console.log('als stat:', 15, extraData.stat);\n              return prepareChainResult(res);\n            }\n            // check continue\n            if (extraData.exit || (timeoutChecker && !timeoutChecker.continue())) {\n              return prepareChainResult(extraData.res);\n            }\n          }\n          console.log('als stat:', 15, extraData.stat);\n          if (extraData.res) {\n            return prepareChainResult(extraData.res);\n          }\n        }\n      }\n    }\n  }\n\n  _eliminateChain(chain) {\n    for (const pos of chain.effectedPoses) {\n      const { value } = this.getCell(pos);\n      if (chain.keep) {\n        this._eliminate(pos, ...Notes.entries(value).filter(d => d !== chain.d && d !== chain.yd));\n      } else {\n        this._eliminate(pos, chain.d);\n      }\n    }\n  }\n}\n\nconst getPosTypeSign = pos => {\n  return pos.isAlsc ? 'a' : pos.isGroup ? 'g' : 'd';\n};\n\nconst prepareChainResult = res => {\n  if (!res) {\n    return;\n  }\n\n  res.type = 'chain';\n  const startPos = res.chain[0].pos;\n  const endNode = res.chain[res.chain.length - 1];\n  const endPos = endNode.pos;\n  const d = res.d;\n  let hasMulti = false;\n  let hasGroup = false;\n  let hasALS = false;\n  for (const node of res.chain) {\n    if (node.d !== d) {\n      hasMulti = true;\n    }\n    if (node.pos.isAlsc) {\n      hasALS = true;\n    } else if (node.pos.isGroup) {\n      hasGroup = true;\n    }\n    if (hasMulti && hasGroup && hasALS) {\n      break;\n    }\n  }\n  const parts = [res.chain.length - 1];\n  hasGroup && parts.push('G');\n  hasALS && parts.push('ALS');\n  parts.push(hasMulti ? 'XY' : 'X', 'Chain');\n  parts.push([getPosTypeSign(startPos), getPosTypeSign(endPos), endNode.d === d ? '-x' : '-xy'].join(''));\n  res.name = parts.join('-');\n  return res;\n};\n\nfunction* dfsSearchChain(d, poses, extraData, timeoutChecker) {\n  for (const pos of poses) {\n    const node = { pos, d, val: extraData.val };\n    for (const res of searchChainDFS([], node, extraData, timeoutChecker)) {\n      if (res.chain.length <= extraData.earlyExitLen) {\n        yield res;\n      } else {\n        extraData.res = res;\n        extraData.maxLength = res.chain.length;\n      }\n    }\n    if (extraData.exit) {\n      return;\n    }\n  }\n}\n\nconst checkExistAndEqual = (a, b) => a !== undefined && a === b;\n\nfunction* checkChain(chain, node, extraData) {\n  const { pos, d, val } = node;\n  const { cells, td } = extraData;\n  if (extraData.val === false && val === true && chain.length > 1) {\n    // strong link\n    const startPos = chain[0].pos;\n    const startMemoKey = `${td}@${startPos.key}`;\n    const endMemoKey = `${d}@${pos.key}`;\n    // ignore g->d\n    if (d === td) {\n      const memo = extraData.checkMemo.x[startMemoKey];\n      if (memo && memo.has(endMemoKey)) {\n        return;\n      }\n      extraData.stat.checkChainX++;\n\n      // start and end shouldn't be the same position.\n      // check if intersection related positions has d\n      const effectedPoses = new Set();\n      const poses = [...getRealPoses(startPos), ...getRealPoses(pos)];\n\n      for (const cpos of positions.getCommonRelatedPositions(...poses)) {\n        const { value } = positions.getCell(cells, cpos);\n        if (Notes.has(value, d)) {\n          effectedPoses.add(cpos);\n        }\n      }\n      if (effectedPoses.size > 0) {\n        yield { chain: [...chain, node], effectedPoses, d: td };\n      } else {\n        // check failed\n        getAttrDefault(extraData.checkMemo.x, startMemoKey, new Set()).add(endMemoKey);\n        getAttrDefault(extraData.checkMemo.x, endMemoKey, new Set()).add(startMemoKey);\n      }\n    } else {\n      const memo = extraData.checkMemo.xy[startMemoKey];\n      if (memo && memo.has(endMemoKey)) {\n        return;\n      }\n      extraData.stat.checkChainXY++;\n\n      let checkOk = false;\n      // xy-chain\n      const poses = getRealPoses(pos);\n      // two types:\n      // 1. same pos\n      if (startPos.key === pos.key && poses.length === 1) {\n        // should only be one position\n\n        const ds = new Set();\n        for (const p of poses) {\n          const { value } = positions.getCell(cells, p);\n          Notes.entries(value).forEach(d => ds.add(d));\n        }\n        ds.delete(d);\n        ds.delete(td);\n        if (ds.size > 0) {\n          checkOk = true;\n          // eliminate other digits of this position\n          yield {\n            chain: [...chain, node],\n            effectedPoses: new Set(poses),\n            // xd\n            d: td,\n            // yd\n            yd: d,\n            effectedDs: ds,\n            keep: true,\n            keepDs: [d, td],\n          };\n        }\n        // 2. different poses\n      } else {\n        const startPoses = getRealPoses(startPos);\n        if (poses.length === 1 && startPoses.length === 1) {\n          // pos is cell then startPos should also be cell.\n          // pos is one of startPos's related positions.\n          const startPos = startPoses[0];\n          const pos = poses[0];\n          if (\n            checkExistAndEqual(pos.row, startPos.row) ||\n            checkExistAndEqual(pos.col, startPos.col) ||\n            checkExistAndEqual(pos.block, startPos.block)\n          ) {\n            const { value } = positions.getCell(cells, pos);\n            if (Notes.has(value, td)) {\n              checkOk = true;\n              yield { chain: [...chain, node], effectedPoses: new Set([pos]), d: td };\n            }\n          }\n        }\n      }\n      if (!checkOk) {\n        // check failed\n        getAttrDefault(extraData.checkMemo.xy, startMemoKey, new Set()).add(endMemoKey);\n        if (startPos.key === pos.key) {\n          // same position\n          getAttrDefault(extraData.checkMemo.xy, endMemoKey, new Set()).add(startMemoKey);\n        }\n      }\n    }\n  }\n}\n\nfunction* genNextChainAndNode(chain, node, extraData) {\n  const { pos, d, val } = node;\n  const { dLinks, dAlsces } = extraData;\n  if (extraData.tryDigitLinks) {\n    // try related links or group links\n    for (const targets of [dLinks[d][pos][val], extraData.tryGroupLinks ? dLinks[d][pos].group[val] : []]) {\n      for (const tpos of targets) {\n        const nextNode = { pos: tpos, val: !val, d };\n\n        if (chainHasNode(chain, nextNode)) {\n          continue;\n        }\n\n        yield [[...chain, node], nextNode];\n      }\n    }\n  }\n\n  if (extraData.tryCellLinks) {\n    // try cell links\n    for (const cd of dLinks[d][pos].cell[val]) {\n      const nextNode = { pos, val: !val, d: cd };\n\n      if (chainHasNode(chain, nextNode)) {\n        continue;\n      }\n\n      yield [[...chain, node], nextNode];\n    }\n  }\n\n  if (extraData.tryAlscLinks) {\n    // try alsc links\n    for (const link of dLinks[d][pos].alsc[val]) {\n      let curNode = null;\n      let nextNode = null;\n      if (val) {\n        // weak link\n        const rcc = link;\n        curNode = { ...node, pos: dAlsces[d][pos] };\n        nextNode = { pos: rcc, val: !val, d: rcc.d };\n      } else {\n        // strong link\n        const { als, alsc } = link;\n        curNode = { ...node, pos: dAlsces[d][pos], als };\n        nextNode = { pos: alsc, val: !val, d: alsc.d, als };\n      }\n      if (chainHasNode(chain, nextNode)) {\n        continue;\n      }\n      yield [[...chain, curNode], nextNode];\n    }\n  }\n}\n\nfunction* searchChainDFS(chain, node, extraData, timeoutChecker) {\n  extraData.stat.searchChainDFS++;\n\n  if (extraData.exit) {\n    return;\n  }\n  // optimize\n  if (chain.length > extraData.maxLength) {\n    // check continue\n    if (timeoutChecker && !timeoutChecker.continue()) {\n      extraData.exit = true;\n    }\n\n    return;\n  }\n\n  yield* checkChain(chain, node, extraData);\n\n  for (const nextChainAndNode of genNextChainAndNode(chain, node, extraData)) {\n    yield* searchChainDFS(...nextChainAndNode, extraData, timeoutChecker);\n  }\n}\n\n/*\nfunction* searchChainBFS(qs, extraData) {\n  while (qs.length > 0) {\n    const chain = qs.shift();\n    if (chain.length + 1 > extraData.maxLength) {\n      continue;\n    }\n\n    const node = chain.pop();\n\n    yield* checkChain(chain, node, extraData);\n\n    for (const nextChainAndNode of genNextChainAndNode(chain, node, extraData)) {\n      const [chain, nextNode] = nextChainAndNode;\n      qs.push([...chain, nextNode]);\n    }\n  }\n}\n*/\n\nconst chainHasNode = (chain, node) => {\n  const poses = getRealPoses(node.pos);\n  for (const n of chain) {\n    if (n.val === node.val && n.d === node.d && n.pos.key === node.pos.key) {\n      return true;\n    }\n    // FIXME:\n    if (n.d === node.d && n.val && node.val) {\n      if (n.pos.poses || node.pos.poses) {\n        if (hasCommon(poses, getRealPoses(n.pos))) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n};\n\nconst newGroupPos = (domain, val, block, poses, d) => {\n  if (poses.length > 1) {\n    return {\n      key: `${d}@${domain}${val}block${block}`,\n      d,\n      isGroup: true,\n      domain: new Set([domain]),\n      [domain]: val,\n      block,\n      poses,\n      toString() {\n        return this.key;\n      },\n    };\n  }\n  const pos = poses[0];\n  return {\n    key: pos.key,\n    d,\n    isGroup: false,\n    domain: new Set([domain]),\n    [domain]: val,\n    block,\n    pos,\n    poses,\n    toString() {\n      return this.key;\n    },\n  };\n};\n\nexport const getRealPoses = pos => (pos.isGroup || pos.isAlsc ? [...pos.poses] : [pos]);\n\n// for row/col in block, like claiming.\nfunction getDigitGroupPoses(cells) {\n  const dGroupPoses = {};\n  for (const [domain, xPositions] of [\n    ['row', positions.rowPositions],\n    ['col', positions.colPositions],\n  ]) {\n    for (const xPoses of xPositions) {\n      const blockDigitPoses = {};\n      let val = 0;\n      for (const pos of xPoses) {\n        val = pos[domain];\n        const { value } = positions.getCell(cells, pos);\n        if (!Notes.is(value)) {\n          continue;\n        }\n        const digitPoses = getAttrDefault(blockDigitPoses, pos.block, {});\n        for (const d of Notes.entries(value)) {\n          const poses = getAttrDefault(digitPoses, d, []);\n          poses.push(pos);\n        }\n      }\n      for (const [sblock, digitGroups] of Object.entries(blockDigitPoses)) {\n        for (const [sd, poses] of Object.entries(digitGroups)) {\n          const block = parseInt(sblock);\n          const d = parseInt(sd);\n          const groupPoses = getAttrDefault(dGroupPoses, d, []);\n          if (poses.length > 1) {\n            groupPoses.push(newGroupPos(domain, val, block, poses, d));\n          } else {\n            const pos = poses[0];\n            let groupPos = groupPoses.filter(gp => gp.pos === pos)[0];\n            if (!groupPos) {\n              groupPos = newGroupPos(domain, val, block, poses, d);\n              groupPoses.push(groupPos);\n            }\n            groupPos.domain.add(domain);\n            groupPos[domain] = val;\n          }\n        }\n      }\n    }\n  }\n  return dGroupPoses;\n}\n\nconst hasCommon = (a, b) => {\n  return intersection(new Set(a), new Set(b)).size > 0;\n};\n\nconst getOtherRowGroupPositions = (groupPoses = [], pos) => {\n  return groupPoses.filter(p => pos.row !== undefined && p.row === pos.row && p.key !== pos.key);\n};\n\nconst getOtherColGroupPositions = (groupPoses = [], pos) => {\n  return groupPoses.filter(p => pos.col !== undefined && p.col === pos.col && p.key !== pos.key);\n};\n\nconst getOtherBlockGroupPositions = (groupPoses = [], pos) => {\n  const filteredGroupPoses = groupPoses.filter(\n    p => p.block === pos.block && p.key !== pos.key && !hasCommon(p.poses, pos.isGroup ? pos.poses : [pos])\n  );\n  const res = filteredGroupPoses.filter(p => p.isGroup);\n  for (const p of filteredGroupPoses.filter(p => !p.isGroup)) {\n    let ok = true;\n    for (const rpos of res) {\n      if (hasCommon(rpos.poses, p.poses)) {\n        ok = false;\n        break;\n      }\n    }\n    if (ok) {\n      res.push(p);\n    }\n  }\n  return res;\n};\n\nfunction getGroupPosLink(groupPoses, pos) {\n  // strong: false->true, weak: true->false\n  const strongTargets = new Set();\n  const weakTargets = new Set();\n  for (const [domain, getOtherGroupPositions] of [\n    ['row', getOtherRowGroupPositions],\n    ['col', getOtherColGroupPositions],\n    ['block', getOtherBlockGroupPositions],\n  ]) {\n    if (pos.isGroup && domain !== 'block' && !pos.domain.has(domain)) {\n      continue;\n    }\n\n    let count = 0;\n    let strongPos = null;\n    for (const opos of getOtherGroupPositions(groupPoses, pos)) {\n      count++;\n      if (opos.isGroup) {\n        if (pos.isGroup) {\n          // group pos\n          weakTargets.add(opos);\n          strongPos = opos;\n        } else if (!new Set(opos.poses).has(pos)) {\n          // pos\n          weakTargets.add(opos);\n          strongPos = opos;\n        }\n      }\n    }\n    if (count === 1 && strongPos) {\n      strongTargets.add(strongPos);\n    }\n  }\n  return { false: strongTargets, true: weakTargets };\n}\n\nfunction getPosLink(cells, d, pos) {\n  // strong: false->true, weak: true->false\n  const strongTargets = new Set();\n  const weakTargets = new Set();\n  for (const [domain, getRelatedPositions] of [\n    ['row', getRelatedRowPositions],\n    ['col', getRelatedColPositions],\n    ['block', getRelatedBlockPositions],\n  ]) {\n    let spos = pos;\n    let filterPoses = new Set();\n    if (pos.isGroup) {\n      if (domain !== 'block' && !pos.domain.has(domain)) {\n        continue;\n      }\n      spos = pos.poses[0];\n      filterPoses = new Set(pos.poses);\n    }\n\n    let count = 0;\n    let strongPos = null;\n    for (const rpos of getRelatedPositions(spos).filter(p => !filterPoses.has(p))) {\n      const { value } = positions.getCell(cells, rpos);\n      if (!Notes.has(value, d)) {\n        continue;\n      }\n      weakTargets.add(rpos);\n      count++;\n      strongPos = rpos;\n    }\n    if (count === 1) {\n      strongTargets.add(strongPos);\n    }\n  }\n  return { false: strongTargets, true: weakTargets };\n}\n\nfunction getAlscLink(alscLinks = {}, pos) {\n  return alscLinks[pos];\n}\n\nfunction getDigitPosesAndLinks(cells, options) {\n  const dGroupPoses = getDigitGroupPoses(cells);\n  const [dAlsces, dAlscLinks] = getDigitAlscAndLinks(cells, dGroupPoses, options);\n  const dLinks = {};\n  const dPoses = {};\n  for (const pos of positions.flattenPositions) {\n    const { value } = positions.getCell(cells, pos);\n    if (!Notes.is(value)) {\n      continue;\n    }\n    const ds = Notes.entries(value);\n    for (const d of ds) {\n      const poses = getAttrDefault(dPoses, d, []);\n      poses.push(pos);\n\n      const links = getAttrDefault(dLinks, d, {});\n      // same digit, different poses\n      const link = getPosLink(cells, d, pos);\n      links[pos] = link;\n\n      // group\n      link.group = getGroupPosLink(dGroupPoses[d], pos);\n\n      const otherDs = new Set(ds.filter(v => v !== d));\n      // different digits, same pos\n      link.cell = { false: ds.length === 2 ? otherDs : new Set(), true: otherDs };\n\n      link.alsc = getAlscLink(dAlscLinks[d], pos) || { false: new Set(), true: new Set() };\n    }\n  }\n  // group position links\n  for (const [sd, groupPoses] of Object.entries(dGroupPoses)) {\n    const d = parseInt(sd);\n    const links = getAttrDefault(dLinks, d, {});\n    for (const pos of groupPoses.filter(p => p.isGroup)) {\n      const link = getPosLink(cells, d, pos);\n      links[pos] = link;\n      link.group = getGroupPosLink(dGroupPoses[d], pos);\n      link.cell = { false: new Set(), true: new Set() };\n      link.alsc = getAlscLink(dAlscLinks[d], pos) || { false: new Set(), true: new Set() };\n    }\n  }\n\n  // alsc position links\n  for (const [sd, alsces] of Object.entries(dAlsces)) {\n    const d = parseInt(sd);\n    const links = getAttrDefault(dLinks, d, {});\n    for (const alsc of Object.values(alsces).filter(a => a.type === 'alsc')) {\n      const link = { false: new Set(), true: new Set() };\n      links[alsc] = link;\n      link.group = { false: new Set(), true: new Set() };\n      link.cell = { false: new Set(), true: new Set() };\n      link.alsc = getAlscLink(dAlscLinks[d], alsc) || { false: new Set(), true: new Set() };\n    }\n  }\n\n  return [dPoses, dGroupPoses, dAlsces, dLinks];\n}\n\nconst findGroupForALSC = (d, dGroupPoses, domains, poses) => {\n  const { row, col, block } = domains;\n  const key = `${d}@row${row}col${col}block${block}`;\n  const groupPoses = dGroupPoses[d].filter(g => g.isGroup && g.key === key && g.poses.size === poses.size);\n  if (groupPoses.length === 1) {\n    return groupPoses[0];\n  }\n};\n\nfunction getDigitALSCes(cells, dGroupPoses, options = {}) {\n  options = { alsSizes: [1, 2, 3, 4, 5, 6, 7, 8], ...options };\n  const alses = {};\n  const dAlsces = {};\n  for (const getPositions of [getRowPositions, getColPositions, getBlockFlattenPositions]) {\n    for (const idx of positions.indices) {\n      const links = getPosDigitLinks(cells, getPositions(idx));\n      const points = Object.values(aggregateLinks(links, 0));\n      for (const n of options.alsSizes) {\n        for (const [poses, digits] of findALSFromPoints(points, n)) {\n          const xlinks = getPosDigitLinks(cells, poses);\n          // build digit infos.\n          const digitInfos = aggregateLinks(xlinks, 1, 'd', 'poses');\n          const key = [...[...poses].map(p => p.key).sort(), [...digits].sort().join('')].join('-');\n          const als = alses[key] || {\n            key,\n            poses,\n            digits,\n            domains: getPosDomains(poses),\n            digitInfos,\n            toString() {\n              return this.key;\n            },\n          };\n          alses[key] = als;\n          for (const d of digits) {\n            const digitInfo = digitInfos[d];\n            const { poses } = digitInfo;\n            const domains = getPosDomains(poses);\n            const alsces = getAttrDefault(dAlsces, d, {});\n            let key = null;\n            let alsc = null;\n            if (poses.size === 1) {\n              const cell = [...poses][0];\n              key = cell.key;\n              alsc = alsces[key] || {\n                ...digitInfo,\n                isAlsc: true,\n                domains,\n                cell,\n                key,\n                type: 'cell',\n                alses: [],\n                toString() {\n                  return this.key;\n                },\n              };\n            } else {\n              const group = findGroupForALSC(d, dGroupPoses, domains, poses);\n              if (group) {\n                key = group.key;\n                alsc = alsces[key] || {\n                  ...digitInfo,\n                  isAlsc: true,\n                  domains,\n                  group,\n                  key: group.key,\n                  type: 'group',\n                  isGroup: true,\n                  alses: [],\n                  toString() {\n                    return this.key;\n                  },\n                };\n              } else {\n                key = [...poses]\n                  .map(p => p.key)\n                  .sort()\n                  .join('-');\n                alsc = alsces[key] || {\n                  ...digitInfo,\n                  isAlsc: true,\n                  domains,\n                  key,\n                  type: 'alsc',\n                  alses: [],\n                  toString() {\n                    return this.key;\n                  },\n                };\n              }\n            }\n            alsc.alses.push(als);\n            alsces[key] = alsc;\n            digitInfos[d] = alsc;\n          }\n        }\n      }\n    }\n  }\n  return dAlsces;\n}\n\nfunction getRCCs(alsces, alsc) {\n  const rccs = [];\n  const { poses, domains } = alsc;\n  // check every domain of the rcc\n  for (const [domain, val] of Object.entries(domains)) {\n    // find d related ALSes in domain\n    for (const rcc of Object.values(alsces)) {\n      if (rcc === alsc) {\n        // should not be current als.\n        continue;\n      }\n      if (rcc.domains[domain] !== val) {\n        // rcc should be in domain\n        continue;\n      }\n      if (hasCommon(rcc.poses, poses)) {\n        // overlapping area should not contain the rcc.\n        continue;\n      }\n\n      rccs.push(rcc);\n    }\n  }\n  return rccs;\n}\n\nfunction getDigitAlscAndLinks(cells, dGroupPoses, options) {\n  const dAlsces = getDigitALSCes(cells, dGroupPoses, options);\n  const dAlscLinks = {};\n  for (const alsces of Object.values(dAlsces)) {\n    for (const alsc of Object.values(alsces)) {\n      const { d, alses } = alsc;\n      const alscLinks = getAttrDefault(dAlscLinks, d, {});\n      const weakTargets = getRCCs(alsces, alsc);\n      const strongTargets = [];\n      for (const als of alses) {\n        for (const t of Object.values(als.digitInfos)) {\n          if (t !== alsc) {\n            strongTargets.push({ als, alsc: t });\n          }\n        }\n      }\n      alscLinks[alsc] = { true: weakTargets, false: strongTargets };\n    }\n  }\n\n  return [dAlsces, dAlscLinks];\n}\n","import React from 'react';\nimport styles from './Cell.module.scss';\nimport digits from '../../../../UI/Digits/Digits';\nimport { Notes } from '../../../../../libs/sudoku';\nimport * as positions from '../../../../../libs/position';\n\nconst noteClassName = (n, activeVal, highlighted, effectMarked, marks, pos) => {\n  const classes = [styles.Note];\n  if (n === activeVal) {\n    classes.push(styles.ActiveValue);\n  }\n\n  if (marks) {\n    let src = null;\n    if (highlighted) {\n      src = marks.highlights;\n    } else if (effectMarked) {\n      src = marks.effect;\n    }\n\n    if (src) {\n      const { posNotes, posSubNotes } = src;\n      let { notes, subNotes } = src;\n      if (posNotes && posSubNotes) {\n        notes = posNotes[pos];\n        subNotes = posSubNotes[pos];\n      }\n      if (notes && notes.has(n)) {\n        classes.push(styles.MarkedNoteValue);\n      } else if (subNotes && subNotes.has(n)) {\n        classes.push(styles.MarkedValue);\n      }\n\n      if (highlighted && effectMarked) {\n        if (marks.effect.notes.has(n)) {\n          classes.push(styles.Effected);\n        }\n      }\n    }\n  }\n\n  return classes.join(' ');\n};\n\nconst Cell = React.memo(\n  ({ value, origin, pos, activePos, activeVal, available, showAvail, isNoting, onClick, marks }) => {\n    const { block, row, col } = pos;\n    const classes = [];\n    let content = null;\n    let isSelected = false;\n\n    if (activePos) {\n      const { row: activeRow, col: activeCol, block: activeBlock } = activePos;\n      if (row === activeRow && col === activeCol) {\n        // active\n        isSelected = true;\n        classes.push(styles.Selected);\n      } else if (row === activeRow || col === activeCol || block === activeBlock) {\n        // related area\n        classes.push(styles.Related);\n      }\n    }\n\n    let clickable = available;\n    if (available) {\n      classes.push(styles.Available);\n      if (showAvail) {\n        // show background\n        classes.push(isNoting ? styles.Note : styles.Place);\n      }\n    } else if (available === null) {\n      // deselected\n      classes.push(styles.Available);\n      clickable = true;\n    } else if (!isNoting && !origin && value === activeVal) {\n      // place mode, placed value === activeVal\n      classes.push(styles.Available);\n      clickable = true;\n    }\n\n    // marks\n    let highlighted = false;\n    let domainMarked = false;\n    let effectMarked = false;\n    if (marks) {\n      const { domain, effect, highlights } = marks;\n      if (domain) {\n        const { rows, cols, blocks, cells } = domain;\n        if (rows && rows.has(row)) {\n          domainMarked = true;\n        }\n        if (cols && cols.has(col)) {\n          domainMarked = true;\n        }\n        if (blocks && blocks.has(block)) {\n          domainMarked = true;\n        }\n        if (cells && cells.has(pos)) {\n          domainMarked = true;\n        }\n      }\n      if (effect) {\n        const { rows, cols, blocks, cells } = effect;\n        if (rows && rows.has(row)) {\n          effectMarked = true;\n        }\n        if (cols && cols.has(col)) {\n          effectMarked = true;\n        }\n        if (blocks && blocks.has(block)) {\n          effectMarked = true;\n        }\n        if (cells && cells.has(pos)) {\n          effectMarked = true;\n        }\n      }\n      if (highlights && highlights.cells.has(pos)) {\n        highlighted = true;\n      }\n    }\n    if (highlighted) {\n      classes.push(styles.MarkedHighlight);\n      if (marks.highlights.withoutOutlinePoses && marks.highlights.withoutOutlinePoses.has(pos)) {\n        classes.push(styles.WithoutOutline);\n      }\n    } else if (domainMarked) {\n      classes.push(styles.MarkedDomain);\n    }\n    if (effectMarked) {\n      classes.push(styles.MarkedEffect);\n    }\n\n    if (!Notes.is(value)) {\n      classes.push(styles.Value);\n      // it's placed value\n      !origin && classes.push(styles.Placed);\n      // it's active value\n      if (value === activeVal && !isSelected) {\n        classes.push(styles.ActiveValue);\n      }\n      // it's marked value\n      if (highlighted && marks.highlights.values && marks.highlights.values.has(value)) {\n        classes.push(styles.MarkedValue);\n      }\n\n      content = digits[value];\n    } else {\n      classes.push(styles.Notes);\n      // Set: [1-9]\n      const notes = value;\n      if (Notes.size(notes) > 0) {\n        content = positions.blockShape.map((rows, idx) => (\n          <div key={idx} className={styles.RowNotes}>\n            {rows.map(i => (\n              <div key={i} className={noteClassName(i + 1, activeVal, highlighted, effectMarked, marks, pos)}>\n                {Notes.has(notes, i + 1) ? digits[i + 1] : null}\n              </div>\n            ))}\n          </div>\n        ));\n      }\n    }\n    return (\n      <div className={classes.join(' ')} onClick={clickable ? () => onClick(pos) : undefined}>\n        {content}\n      </div>\n    );\n  }\n);\n\nexport default Cell;\n","import React from 'react';\nimport Cell from './Cell/Cell';\nimport styles from './Block.module.scss';\nimport * as positions from '../../../../libs/position';\n\nconst Block = ({\n  block,\n  activePos,\n  activeVal,\n  cells,\n  availableCells,\n  cellClickedHandler,\n  showAvail,\n  isNoting,\n  marks,\n}) => {\n  const isOdd = block % 2 === 1;\n  return (\n    <div className={`${styles.Block} ${isOdd ? styles.Odd : ''}`}>\n      {positions.getBlockPositions(block).map((rows, idx) => (\n        <div key={idx} className={styles.Row}>\n          {rows.map(pos => (\n            <Cell\n              key={pos.key}\n              {...positions.getCell(cells, pos)}\n              pos={pos}\n              activePos={activePos}\n              activeVal={activeVal}\n              available={availableCells && availableCells[pos.row][pos.col]}\n              onClick={cellClickedHandler}\n              showAvail={showAvail}\n              isNoting={isNoting}\n              marks={marks}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\nexport default Block;\n","import React from 'react';\nimport styled from 'styled-components';\n\n/*\n  make sure the width is the same with a parent's,\n  because padding refer to parent's width.\n*/\nconst Box = styled.div`\n  width: ${({ width }) => (width !== undefined ? width : 'auto')};\n  height: 0;\n  padding-top: ${({ ratio }) => 100 / ratio}%;\n  position: relative;\n`;\n\nconst Content = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  ${({ fixed, scroll }) =>\n    fixed\n      ? `\n    height: 100%;\n    overflow: ${scroll ? `scroll` : 'hidden'};\n  `\n      : `\n  min-height: 100%;\n  `}\n`;\n\nexport default ({ ratio = 1.0, fixed = true, scroll = false, children }) => {\n  return (\n    <Box ratio={ratio}>\n      <Content fixed={fixed} scroll={scroll}>\n        {children}\n      </Content>\n    </Box>\n  );\n};\n","import * as positions from '../../../libs/position';\n\n// percentage for a cell\nexport const perCell = (1 - 1.5 / 100) / 9;\n\nexport const getCoord = ({ row, col }, d) => {\n  const [localRow, localCol] = positions.getDigitLocalPos(d);\n\n  // block margin: 0.25%\n  // cell margin:1%, padding: 2.5% of block\n  const x = (col + (localCol + 0.5) / 3 + 0.35 / 100) * perCell + ((Math.floor(col / 3) + 1) * 0.5 - 0.25) / 100;\n  const y = (row + (localRow + 0.5) / 3 + 0.35 / 100) * perCell + ((Math.floor(row / 3) + 1) * 0.5 - 0.25) / 100;\n\n  return [x, y];\n};\n\nexport const calcDistance = ([sx, sy], [ex, ey]) => {\n  const [dx, dy] = [ex - sx, ey - sy];\n\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\nexport const calcDeg = ([sx, sy], [ex, ey], d) => {\n  const [dx, dy] = [ex - sx, ey - sy];\n  return ((Math.acos(dx / d) * (dy < 0 ? -1 : 1)) / Math.PI) * 180;\n};\n","import React from 'react';\nimport styles from './Arrow.module.scss';\nimport styled from 'styled-components';\nimport * as calc from './calc';\n\n// shortend arrow length, to avoid tail-head contact.\nconst dd = 0.02;\n\nconst Arrow = styled.div.attrs(({ x, y, distance, deg, type }) => ({\n  style: {\n    borderTop: `2px ${type} red`,\n    width: `${distance * 100}%`,\n    height: `${distance * 100}%`,\n    transform: `translate(${(x / distance) * 100}%, ${(y / distance) * 100}%)\n    rotate(${deg}deg)\n    translate(${(dd / 2 / distance) * 100}%)`,\n  },\n}))`\n  user-select: none;\n  pointer-events: none;\n  position: absolute;\n  transform-origin: top left;\n`;\n\nexport default ({ type = 'solid', startPos, startDigit, endPos, endDigit }) => {\n  const sc = calc.getCoord(startPos, startDigit);\n  const ec = calc.getCoord(endPos, endDigit);\n  const distance = calc.calcDistance(sc, ec);\n  const deg = calc.calcDeg(sc, ec, distance);\n\n  return (\n    <Arrow x={sc[0]} y={sc[1]} distance={distance - dd} deg={deg} type={type}>\n      <div className={styles.Pointer}></div>\n    </Arrow>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as positions from '../../../libs/position';\nimport * as calc from './calc';\n\nconst dd = 0.8;\n\nconst Frame = styled.div.attrs(({ sx, sy, ex, ey }) => ({\n  style: {\n    top: `${sy * 100 - dd}%`,\n    left: `${sx * 100 - dd}%`,\n    right: `${(1 - ex) * 100 - dd}%`,\n    bottom: `${(1 - ey) * 100 - dd}%`,\n  },\n}))`\n  user-select: none;\n  pointer-events: none;\n  position: absolute;\n  border: 1px solid red;\n`;\n\nexport default ({ domain, row, col, block }) => {\n  let startRow;\n  let startCol;\n  let endRow;\n  let endCol;\n\n  if (domain === 'row') {\n    startRow = endRow = row;\n\n    startCol = positions.blockCols(block)[0];\n    endCol = startCol + 2;\n  } else if (domain === 'col') {\n    startCol = endCol = col;\n\n    startRow = positions.blockRows(block)[0];\n    endRow = startRow + 2;\n  }\n\n  const [sx, sy] = calc.getCoord({ row: startRow, col: startCol }, 1);\n  const [ex, ey] = calc.getCoord({ row: endRow, col: endCol }, 9);\n  return <Frame sx={sx} sy={sy} ex={ex} ey={ey} />;\n};\n","import React from 'react';\nimport Block from './Block/Block';\nimport AspectRatioBox from '../../UI/AspectRatio/AspectRatioBox';\nimport Arrow from './Arrow';\nimport Frame from './Frame';\nimport styles from './Board.module.scss';\nimport * as positions from '../../../libs/position';\n\nconst Board = ({\n  isComplete,\n  availablePositions,\n  cells,\n  activeVal,\n  activePos,\n  cellClickedHandler,\n  showAvail,\n  isNoting,\n  marks,\n}) => {\n  // active value\n  if (activePos) {\n    // no active value, then selected value is active value for board\n    activeVal = positions.getCell(cells, activePos).value;\n  }\n\n  const classes = [styles.SudokuBoard];\n  if (isComplete) {\n    classes.push(styles.Complete);\n  }\n  return (\n    <AspectRatioBox ratio={1.0}>\n      <div className={classes.join(' ')}>\n        {marks && marks.frames && marks.frames.map(frame => <Frame {...frame} />)}\n        {marks &&\n          marks.arrows &&\n          marks.arrows.map((arrow, idx) => <Arrow key={`${arrow.startPos}-${arrow.endPos}#${idx}`} {...arrow} />)}\n        {positions.blockShape.map((rows, idx) => (\n          <div key={idx} className={styles.Row}>\n            {rows.map(b => (\n              <Block\n                key={b}\n                block={b}\n                cells={cells}\n                activePos={activePos}\n                activeVal={activeVal}\n                availableCells={availablePositions}\n                cellClickedHandler={cellClickedHandler}\n                showAvail={showAvail}\n                isNoting={isNoting}\n                marks={marks}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n    </AspectRatioBox>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  &::before {\n    content: '';\n    width: 1px;\n    margin-left: -1px;\n    float: left;\n    height: 0;\n    padding-top: ${({ ratio }) => 100 / ratio}%;\n  }\n  &::after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n`;\n\nexport default ({ ratio = 1.0, children, ...props }) => {\n  return (\n    <Wrapper ratio={ratio} {...props}>\n      {children}\n    </Wrapper>\n  );\n};\n","import React, { useCallback } from 'react';\nimport AspectRatioWrapper from '../../../UI/AspectRatio/AspectRatioWrapper';\nimport digits from '../../../UI/Digits/Digits';\nimport styles from './Digits.module.scss';\n\nconst Digits = React.memo(\n  ({\n    isNoting,\n    activeVal,\n    availableDigits,\n    remainingDigits,\n    digitClickedHandler,\n  }) => {\n    const genClassName = useCallback(\n      d => {\n        const classes = [styles.Digit];\n        if (d === activeVal) {\n          classes.push(styles.active);\n        }\n        if (!availableDigits.has(d)) {\n          classes.push(styles.Disabled);\n        }\n        return classes.join(' ');\n      },\n      [activeVal, availableDigits]\n    );\n\n    return (\n      <div className={`${styles.Digits} ${isNoting ? styles.isNoting : ''}`}>\n        <AspectRatioWrapper\n          className={genClassName(1)}\n          onClick={\n            availableDigits.has(1) ? () => digitClickedHandler(1) : undefined\n          }\n        >\n          {digits[1]}\n          <div className={styles.Count}>{digits[remainingDigits[1]]}</div>\n        </AspectRatioWrapper>\n        {[2, 3, 4, 5, 6, 7, 8, 9].map(d => (\n          <div\n            key={d}\n            className={genClassName(d)}\n            onClick={\n              availableDigits.has(d) ? () => digitClickedHandler(d) : undefined\n            }\n          >\n            {digits[d]}\n            <div className={styles.Count}>{digits[remainingDigits[d]]}</div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n);\n\nexport default Digits;\n","import React from 'react';\nimport Digits from './Digits/Digits';\nimport Button from '../../UI/Button/Button';\nimport styles from './Controls.module.scss';\n\nconst Controls = ({\n  cellsRecord,\n  hasPrev,\n  hasNext,\n  jump,\n  jumpToFirst,\n  jumpToLast,\n  remainingDigits,\n  activeVal,\n  availableDigits,\n  digitClickedHandler,\n  showAvail,\n  isNoting,\n  withALS,\n  deselectHandler,\n  toggleShowAvailHandler,\n  toggleIsNotingHandler,\n  toggleWithALSHandler,\n  solveHandler,\n  resetHandler,\n  eraseValueHandler,\n  autoNoteHandler,\n  autoPlacePointingClaimingHandler,\n  tip,\n  tipHandler,\n  cancelTipHandler,\n  changeChainStepHandler,\n  jumpToTrailStartHandler,\n}) => {\n  return (\n    <div className={styles.Controls}>\n      <div className={styles.History}>\n        <Button disabled={!hasPrev} onClick={jumpToFirst}>\n          &lt;&lt;\n        </Button>\n        <Button disabled={!hasPrev} onClick={() => jump(-1)}>\n          &lt;\n        </Button>\n        <Button disabled={!hasNext} onClick={() => jump(1)}>\n          &gt;\n        </Button>\n        <Button disabled={!hasNext} onClick={jumpToLast}>\n          &gt;&gt;\n        </Button>\n        <span>#{cellsRecord.idx}</span>\n        <span>{cellsRecord.desc}</span>\n      </div>\n      <div className={styles.Panel}>\n        <Button onClick={solveHandler}>Solve</Button>\n        <Button onClick={resetHandler}>Reset</Button>\n        <Button onClick={eraseValueHandler}>Erase</Button>\n        <Button onClick={deselectHandler}>Deselect</Button>\n        <Button type={showAvail ? 'On' : 'Off'} onClick={toggleShowAvailHandler}>\n          Avail\n        </Button>\n        <Button type={isNoting ? 'On' : 'Off'} onClick={toggleIsNotingHandler}>\n          Note\n        </Button>\n        <Button type={withALS ? 'On' : 'Off'} onClick={toggleWithALSHandler}>\n          ALS\n        </Button>\n      </div>\n      <Digits\n        isNoting={isNoting}\n        activeVal={activeVal}\n        availableDigits={availableDigits}\n        remainingDigits={remainingDigits}\n        digitClickedHandler={digitClickedHandler}\n      />\n      <div className={styles.Tools}>\n        <Button onClick={autoNoteHandler}>note</Button>\n        <Button onClick={autoPlacePointingClaimingHandler}>place/point/claim</Button>\n        <div className={styles.Tip}>\n          <Button type={tip && 'On'} onClick={tipHandler}>\n            {tip ? tip.name : 'tip'}\n          </Button>\n          {tip && (\n            <Button type={'Warn'} onClick={cancelTipHandler}>\n              X\n            </Button>\n          )}\n          {tip && tip.type === 'chain' && (\n            <>\n              <span className={styles.ChainSteper} onClick={() => changeChainStepHandler(-1)}>\n                &lt;\n              </span>\n              <span className={styles.ChainSteper} onClick={() => changeChainStepHandler(1)}>\n                &gt;\n              </span>\n            </>\n          )}\n          {tip && tip.type === 'trial-error' && (\n            <span className={styles.ChainSteper} onClick={jumpToTrailStartHandler}>\n              &lt;start\n            </span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Controls;\n","import React from 'react';\nimport styles from './Backdrop.module.scss';\n\nconst Backdrop = ({ show, onClick, absolute = false }) => {\n  if (!show) {\n    return null;\n  }\n  const classes = [styles.Backdrop];\n  if (absolute) {\n    classes.push(styles.Absolute);\n  }\n  return <div className={classes.join(' ')} onClick={onClick} />;\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport Backdrop from '../Backdrop/Backdrop';\nimport styles from './Modal.module.scss';\n\nconst Modal = ({ show = false, close, children }) => {\n  const classes = [styles.Modal];\n  if (show) {\n    classes.push(styles.Show);\n  }\n  return (\n    <>\n      <Backdrop show={show} onClick={close} />\n      <div className={classes.join(' ')}>\n        <div className={styles.Close} onClick={close}>\n          X\n        </div>\n        {children}\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(React.memo(Modal), (prevProps, nextProps) => {\n  return !prevProps.show && !nextProps.show;\n});\n","import React from 'react';\nimport styles from './Spinner.module.css';\n\nconst Spinner = () => {\n  return <div className={styles.Loader}>Loading...</div>;\n};\n\nexport default Spinner;\n","import React from 'react';\nimport styles from './Loading.module.scss';\nimport Backdrop from '../Backdrop/Backdrop';\nimport Spinner from '../Spinner/Spinner';\n\nexport default () => {\n  return (\n    <>\n      <Backdrop show absolute />\n      <div className={styles.Spinner}>\n        <Spinner />\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport Button from '../../components/UI/Button/Button';\nimport Board from '../../components/Sudoku/Board/Board';\nimport Controls from '../../components/Sudoku/Controls/Controls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Loading from '../../components/UI/Loading/Loading';\nimport QRCode from 'qrcode.react';\nimport styles from './Main.module.scss';\nimport * as sudokus from '../../libs/sudoku';\nimport { Notes } from '../../libs/sudoku';\nimport { getPosition, findClosedPosPair } from '../../libs/position';\nimport { console } from '../../libs/utils';\n\nconst Sudoku = ({\n  /** @type {sudokus.Sudoku} */ sudoku = new sudokus.Sudoku(),\n  startNewGameHandler,\n  newGameHandler,\n  emptyHandler,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [showShare, setShowShare] = useState(false);\n  const [, setChanged] = useState(0);\n  useEffect(() => {\n    sudoku.subscribe(setChanged);\n    return () => {\n      sudoku.unsubscribe(setChanged);\n    };\n  }, [sudoku]);\n\n  // {pos:[row, col], val:0}\n  const [activeState, setActiveState] = useState({ pos: null, val: 0 });\n  const { pos: activePos, val: activeVal } = activeState;\n  const [showAvail, setShowAvail] = useState(false);\n  const [isNoting, setIsNoting] = useState(false);\n  const [withALS, setWithALS] = useState(false);\n  const [tip, setTip] = useState(null);\n  const [chainStep, setChainStep] = useState(2);\n\n  // calculated states\n  const cellsRecord = sudoku.cellsRecord;\n  const isComplete = sudoku.isComplete;\n  const { cells: boardCells } = cellsRecord;\n  // cells dependency is needed for memo check\n  const availableDigits = useMemo(() => sudoku.calcAvailableDigits(activePos, boardCells), [\n    activePos,\n    sudoku,\n    boardCells,\n  ]);\n  const availablePositions = useMemo(() => sudoku.calcAvailablePositions(activeVal, boardCells), [\n    activeVal,\n    sudoku,\n    boardCells,\n  ]);\n  const remainingDigits = useMemo(() => sudoku.calcRemainingDigits(boardCells), [sudoku, boardCells]);\n\n  // handlers\n  const startGameHandler = useCallback(() => {\n    newGameHandler(sudoku.stringify(boardCells, { placedAsOrigin: true, withNotes: false }));\n  }, [boardCells, newGameHandler, sudoku]);\n\n  const editGameHandler = useCallback(() => {\n    newGameHandler(sudoku.stringify(boardCells, { originAsPlaced: true, withNotes: false }), false);\n  }, [boardCells, newGameHandler, sudoku]);\n\n  const cellClickedHandler = useCallback(\n    pos => {\n      if (activeVal !== 0) {\n        // place or note\n        sudoku.updateCellValue(isNoting, pos, activeVal);\n      } else {\n        // select position\n        setActiveState(({ pos: curActivePos }) => {\n          if (curActivePos) {\n            if (pos === curActivePos) {\n              // cancel current selected\n              pos = null;\n            }\n          }\n          return { pos, val: 0 };\n        });\n      }\n    },\n    [activeVal, isNoting, sudoku]\n  );\n\n  const digitClickedHandler = useCallback(\n    (d, force = false) => {\n      // force active specified digit\n      if (!force) {\n        if (!availableDigits.has(d)) {\n          return;\n        }\n\n        if (activePos) {\n          // place or note\n          sudoku.updateCellValue(isNoting, activePos, d);\n        } else {\n          // active a value\n          setActiveState(({ val: curActiveVal }) => {\n            let val = d;\n            if (curActiveVal === d) {\n              // cancel active\n              val = 0;\n            }\n            return { pos: null, val };\n          });\n        }\n      } else {\n        // active a value\n        setActiveState({ pos: null, val: d });\n      }\n    },\n    [activePos, availableDigits, isNoting, sudoku]\n  );\n\n  const deselectHandler = useCallback(() => {\n    setActiveState({ pos: null, val: 0 });\n  }, []);\n\n  const solveHandler = useCallback(() => {\n    sudoku.solve();\n  }, [sudoku]);\n\n  const resetHandler = useCallback(() => {\n    if (!window.confirm || window.confirm('Are you sure to reset?')) {\n      sudoku.reset();\n      deselectHandler();\n    }\n  }, [deselectHandler, sudoku]);\n\n  const eraseValueHandler = useCallback(() => {\n    if (activePos) {\n      sudoku.updateCellValue(false, activePos, Notes.new());\n    }\n  }, [activePos, sudoku]);\n\n  const toggleShowAvailHandler = useCallback(() => {\n    setShowAvail(showAvail => !showAvail);\n  }, []);\n\n  const toggleIsNotingHandler = useCallback(() => {\n    setIsNoting(isNoting => !isNoting);\n  }, []);\n\n  const toggleWithALSHandler = useCallback(() => {\n    setWithALS(v => !v);\n  }, []);\n\n  const autoNoteHandler = useCallback(() => {\n    sudoku.autoNote();\n  }, [sudoku]);\n\n  const autoPlacePointingClaimingHandler = useCallback(() => {\n    sudoku.autoPlacePointingClaiming();\n  }, [sudoku]);\n\n  const tipHandler = useCallback(() => {\n    // deselect\n    deselectHandler();\n    if (tip) {\n      // clear\n      setTip(null);\n      sudoku.clearHistoryLowerBound();\n\n      // handle tip\n      sudoku.handleTip(tip);\n    } else {\n      // find tip\n      setIsLoading(true);\n      setTimeout(() => {\n        // for test new tech.\n        // const t = sudoku.findTip({ trial: false });\n        const t = sudoku.findTip({\n          chain: {\n            timeout: 10 * 1000,\n            confirmContinue: t => window.confirm(`already running for ${t / 1000}s, continue finding?`),\n            withoutALS: !withALS,\n          },\n        });\n        setIsLoading(false);\n        if (t) {\n          console.log('tip:', t);\n          setTip(t);\n          if (t.type === 'chain') {\n            setChainStep(t.chain.length);\n          } else if (t.type === 'trial-error') {\n            sudoku.setHistoryLowerBound(t.startIdx);\n            if (t.err !== true && t.err.digits.size > 0) {\n              digitClickedHandler([...t.err.digits][0], true);\n            }\n          }\n        }\n      }, 0);\n    }\n  }, [deselectHandler, digitClickedHandler, sudoku, tip, withALS]);\n\n  const cancelTipHandler = useCallback(() => {\n    if (tip) {\n      // clear\n      setTip(null);\n      if (tip.type === 'trial-error') {\n        sudoku.clearHistoryLowerBound();\n        sudoku.revertTo(tip.startIdx);\n      }\n    }\n  }, [sudoku, tip]);\n\n  const moveActivePos = useCallback(\n    (dRow, dCol) => {\n      if (activePos) {\n        setActiveState(({ pos: { row: curRow, col: curCol } }) => {\n          const pos = getPosition((curRow + 9 + dRow) % 9, (curCol + 9 + dCol) % 9);\n          return { val: 0, pos };\n        });\n      }\n    },\n    [activePos]\n  );\n\n  const moveActiveVal = useCallback(\n    d => {\n      if (activeVal) {\n        setActiveState(({ val: curVal }) => {\n          const val = ((curVal - 1 + d + 9) % 9) + 1;\n          return { pos: null, val };\n        });\n      }\n    },\n    [activeVal]\n  );\n\n  const marks = useMemo(() => {\n    if (tip) {\n      if (tip.type === 'group') {\n        const { cls, domains, poses: cells, notes } = tip;\n        const domainInfo = {};\n        for (const [domain, value] of Object.entries(domains)) {\n          domainInfo[domain + 's'] = new Set([value]);\n        }\n\n        if (cls === 0) {\n          // naked\n          return { effect: { ...domainInfo, notes }, highlights: { cells, notes } };\n        } else if (cls === 1) {\n          // hidden\n          return { domain: { ...domainInfo, notes }, highlights: { cells, notes } };\n        }\n      } else if (tip.type === 'X-Group') {\n        const { domain, rows, cols, blocks, poses: cells, d } = tip;\n        const notes = new Set([d]);\n        if (domain === 'row') {\n          return { domain: { rows }, effect: { cols, blocks, notes }, highlights: { cells, notes } };\n        } else if (domain === 'col') {\n          return { domain: { cols }, effect: { rows, blocks, notes }, highlights: { cells, notes } };\n        } else if (domain === 'block') {\n          return { domain: { blocks }, effect: { rows, cols, notes }, highlights: { cells, notes } };\n        }\n      } else if (tip.type === 'chain') {\n        const { chain, effectedPoses, d, effectedDs } = tip;\n        const curChain = chain.slice(0, chainStep);\n        const allPoses = [];\n        curChain.forEach(({ pos }) => {\n          if (!pos.isAlsc) {\n            // no alsc\n            allPoses.push(...sudokus.getRealPoses(pos));\n          }\n        });\n        const poses = new Set(allPoses);\n        const withoutOutlinePoses = new Set(allPoses);\n        // remove head and tail\n        sudokus.getRealPoses(chain[0].pos).forEach(p => withoutOutlinePoses.delete(p));\n        sudokus.getRealPoses(chain[chain.length - 1].pos).forEach(p => withoutOutlinePoses.delete(p));\n\n        const effectedNotes = effectedDs ? effectedDs : new Set([d]);\n        const posNotes = {};\n        const posSubNotes = {};\n        for (const n of curChain) {\n          let _posNotes = posNotes;\n          if (n.d !== d) {\n            _posNotes = posSubNotes;\n          }\n          const { pos } = n;\n          for (const p of sudokus.getRealPoses(pos)) {\n            const subNotes = _posNotes[p] || new Set();\n            _posNotes[p] = subNotes;\n            subNotes.add(n.d);\n          }\n        }\n\n        const frames = [];\n        const domain = {};\n        let lastAls = null;\n        let lastPos = null;\n\n        // frames\n        curChain.forEach(({ pos, als }) => {\n          if (pos.isAlsc) {\n            lastAls = als;\n            lastPos = pos;\n          } else if (pos.isGroup) {\n            const { key, domain, block, row, col } = pos;\n            frames.push({ key, domain: [...domain][0], block, row, col });\n          }\n        });\n        domain.cells = lastAls && lastAls.poses;\n        lastPos && sudokus.getRealPoses(lastPos).forEach(p => poses.add(p));\n\n        // arrows\n        const arrows = [];\n        let startNode = curChain[0];\n        for (const endNode of curChain.slice(1)) {\n          const [startPos, endPos] = findClosedPosPair(\n            sudokus.getRealPoses(startNode.pos),\n            sudokus.getRealPoses(endNode.pos)\n          );\n\n          arrows.push({\n            startPos,\n            startDigit: startNode.d,\n            endPos,\n            endDigit: endNode.d,\n            type: endNode.val ? 'solid' : 'dashed',\n          });\n          startNode = endNode;\n        }\n        const effect = curChain.length === chain.length ? { cells: effectedPoses, notes: effectedNotes } : null;\n        return {\n          domain,\n          frames,\n          arrows,\n          effect,\n          highlights: { cells: poses, posNotes, posSubNotes, withoutOutlinePoses },\n        };\n      } else if (tip.type === 'trial-error') {\n        const { startIdx, pos, d, err } = tip;\n        const values = new Set([d]);\n        let marks = null;\n        if (err === true) {\n          // is complete\n          marks = { highlights: { cells: new Set([pos]), values, notes: values } };\n        } else {\n          const { domain, digits } = err;\n          if (cellsRecord.idx >= startIdx) {\n            marks = {\n              effect: { [domain + 's']: new Set([err[domain]]), notes: digits, values: digits },\n              highlights: { cells: new Set([pos]), values, notes: values },\n            };\n          }\n        }\n        if (cellsRecord.idx >= startIdx) {\n          return marks;\n        }\n      }\n    }\n  }, [cellsRecord.idx, chainStep, tip]);\n\n  const changeChainStepHandler = useCallback(\n    d => {\n      if (tip && tip.type === 'chain') {\n        const len = tip.chain.length;\n        setChainStep(s => {\n          return ((s - 1 + d + len) % len) + 1;\n        });\n      }\n    },\n    [tip]\n  );\n\n  const jumpToTrialStartHandler = useCallback(() => {\n    if (tip && tip.type === 'trial-error') {\n      sudoku.jumpTo(tip.startIdx);\n    }\n  }, [sudoku, tip]);\n\n  // event listeners\n  useEffect(() => {\n    const keydownHandler = e => {\n      console.log(e);\n      if (isLoading) {\n        return;\n      }\n\n      // TODO: handler other shortcut keys\n      if (e.code.startsWith('Digit')) {\n        const d = parseInt(e.key);\n        digitClickedHandler(d);\n      } else if (e.key === 'N') {\n        startNewGameHandler();\n      } else if (e.key === 'n') {\n        if (e.ctrlKey) {\n          autoNoteHandler();\n        } else {\n          toggleIsNotingHandler();\n        }\n      } else if (e.key === 'a') {\n        if (e.ctrlKey) {\n          toggleShowAvailHandler();\n        } else {\n          toggleWithALSHandler();\n        }\n      } else if (e.key === 's' && !e.isComposing && !e.metaKey) {\n        solveHandler();\n      } else if (e.key === 'r' && !e.isComposing && !e.metaKey) {\n        resetHandler();\n      } else if (e.key === 'e') {\n        eraseValueHandler();\n      } else if (e.key === 'b') {\n        if (!activeVal && !activePos) {\n          cellClickedHandler(getPosition(4, 4));\n        }\n      } else if (e.key === 'd' || e.key === 'Escape') {\n        deselectHandler();\n      } else if (e.key === 't') {\n        tipHandler();\n      } else if (e.key === 'x') {\n        cancelTipHandler();\n      } else if (e.key === 'y') {\n        changeChainStepHandler(-1);\n        jumpToTrialStartHandler();\n      } else if (e.key === 'u') {\n        changeChainStepHandler(1);\n      } else if (e.key === 'p') {\n        autoPlacePointingClaimingHandler();\n      } else if (e.key === 'h' || e.key === 'ArrowLeft') {\n        if (activePos) {\n          moveActivePos(0, -1);\n        } else if (activeVal) {\n          moveActiveVal(-1);\n        } else {\n          sudoku.jumpToFirst();\n        }\n      } else if (e.key === 'l' || e.key === 'ArrowRight') {\n        if (activePos) {\n          moveActivePos(0, 1);\n        } else if (activeVal) {\n          moveActiveVal(1);\n        } else {\n          sudoku.jumpToLast();\n        }\n      } else if (e.key === 'j' || e.key === 'ArrowDown') {\n        if (activePos) {\n          moveActivePos(1, 0);\n        } else if (activeVal) {\n          moveActiveVal(-1);\n        } else {\n          sudoku.jump(-1);\n        }\n      } else if (e.key === 'k' || e.key === 'ArrowUp') {\n        if (activePos) {\n          moveActivePos(-1, 0);\n        } else if (activeVal) {\n          moveActiveVal(1);\n        } else {\n          sudoku.jump(1);\n        }\n      } else {\n        return;\n      }\n      // e.preventDefault();\n    };\n    document.addEventListener('keydown', keydownHandler);\n\n    return () => {\n      document.removeEventListener('keydown', keydownHandler);\n    };\n  }, [\n    activePos,\n    activeVal,\n    autoNoteHandler,\n    autoPlacePointingClaimingHandler,\n    cancelTipHandler,\n    cellClickedHandler,\n    changeChainStepHandler,\n    deselectHandler,\n    digitClickedHandler,\n    eraseValueHandler,\n    isLoading,\n    jumpToTrialStartHandler,\n    moveActivePos,\n    moveActiveVal,\n    resetHandler,\n    solveHandler,\n    startNewGameHandler,\n    sudoku,\n    tip,\n    tipHandler,\n    toggleIsNotingHandler,\n    toggleShowAvailHandler,\n    toggleWithALSHandler,\n  ]);\n\n  useEffect(() => {\n    if (tip) {\n      if (tip.includedCells && tip.includedCells.has(boardCells)) {\n        return;\n      }\n      // clear tip if values changed\n      setTip(null);\n      sudoku.clearHistoryLowerBound();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [boardCells]);\n\n  let shareContent = null;\n  if (showShare) {\n    const url = new URL(window.location);\n    const initialPuzzle = sudoku.initialPuzzle;\n    const curPuzzle = sudoku.stringify();\n    url.search = '?puzzle=' + curPuzzle;\n    shareContent = (\n      <div className={styles.QRCode}>\n        <QRCode size={256} value={url.toString()} />\n        <p>{initialPuzzle}</p>\n        <p>{curPuzzle}</p>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {isLoading && <Loading />}\n      <Modal show={showShare} close={() => setShowShare(false)}>\n        {shareContent}\n      </Modal>\n      <div className={styles.Menu}>\n        <Button onClick={startNewGameHandler}>New</Button>\n        <Button onClick={startGameHandler}>Start</Button>\n        <Button onClick={editGameHandler}>Edit</Button>\n        <Button onClick={emptyHandler}>Empty</Button>\n        <Button onClick={() => setShowShare(true)}>Share</Button>\n      </div>\n      <div className={styles.Board}>\n        <Board\n          isComplete={isComplete}\n          cells={boardCells}\n          availablePositions={availablePositions}\n          activeVal={activeVal}\n          activePos={activePos}\n          cellClickedHandler={cellClickedHandler}\n          showAvail={showAvail}\n          isNoting={isNoting}\n          marks={marks}\n        />\n      </div>\n      <div className={styles.Controls}>\n        <Controls\n          cellsRecord={cellsRecord}\n          hasPrev={sudoku.hasPrev}\n          hasNext={sudoku.hasNext}\n          jump={sudoku.jump}\n          jumpToFirst={sudoku.jumpToFirst}\n          jumpToLast={sudoku.jumpToLast}\n          remainingDigits={remainingDigits}\n          activeVal={activeVal}\n          availableDigits={availableDigits}\n          digitClickedHandler={digitClickedHandler}\n          showAvail={showAvail}\n          isNoting={isNoting}\n          withALS={withALS}\n          solveHandler={solveHandler}\n          resetHandler={resetHandler}\n          eraseValueHandler={eraseValueHandler}\n          deselectHandler={deselectHandler}\n          toggleShowAvailHandler={toggleShowAvailHandler}\n          toggleIsNotingHandler={toggleIsNotingHandler}\n          toggleWithALSHandler={toggleWithALSHandler}\n          autoNoteHandler={autoNoteHandler}\n          autoPlacePointingClaimingHandler={autoPlacePointingClaimingHandler}\n          tip={tip}\n          tipHandler={tipHandler}\n          cancelTipHandler={cancelTipHandler}\n          changeChainStepHandler={changeChainStepHandler}\n          jumpToTrailStartHandler={jumpToTrialStartHandler}\n        />\n      </div>\n      <div className={styles.Info}></div>\n    </>\n  );\n};\n\nexport default Sudoku;\n","import React, { useState, useCallback, useRef } from 'react';\nimport Button from '../../components/UI/Button/Button';\nimport styles from './NewGame.module.scss';\nimport { useEffect } from 'react';\n\nconst samplePuzzle = `901002708\n570060000\n000000004\n000000000\n700421900\n000098030\n300506070\n009003000\n000080051`;\n\nconst NewGame = ({ cancelNewGameHandler, newGameHandler, error }) => {\n  const [puzzle, setPuzzle] = useState('');\n  const puzzleChangedHandler = useCallback(event => {\n    setPuzzle(event.target.value);\n  }, []);\n\n  const textareaRef = useRef();\n  useEffect(() => {\n    textareaRef.current.focus();\n  }, []);\n\n  // event listeners\n  useEffect(() => {\n    const keydownHandler = e => {\n      // console.log(e);\n      if (e.key === 'Escape') {\n        cancelNewGameHandler();\n      } else if (e.key === 'Enter' && e.shiftKey) {\n        newGameHandler(puzzle);\n      } else {\n        return;\n      }\n      e.preventDefault();\n    };\n    document.addEventListener('keydown', keydownHandler);\n\n    return () => {\n      document.removeEventListener('keydown', keydownHandler);\n    };\n  }, [cancelNewGameHandler, newGameHandler, puzzle]);\n\n  return (\n    <div className={styles.NewGame}>\n      <h1>input a new puzzle</h1>\n      {error && <div className={styles.Error}>{error.message}</div>}\n      <textarea\n        ref={textareaRef}\n        id=\"puzzle\"\n        name=\"puzzle\"\n        inputMode=\"numeric\"\n        onChange={puzzleChangedHandler}\n        value={puzzle}\n        placeholder={samplePuzzle}\n      />\n      <Button onClick={cancelNewGameHandler}>Cancel</Button>\n      <Button onClick={() => newGameHandler(puzzle)}>Done</Button>\n    </div>\n  );\n};\n\nexport default NewGame;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport Main from './Main';\nimport NewGame from './NewGame';\nimport styles from './Sudoku.module.scss';\nimport * as sudokus from '../../libs/sudoku';\nimport * as utils from '../../libs/utils';\n\nconst Sudoku = () => {\n  const [alertInfo, setAlertInfo] = useState();\n\n  const checkSudokuResults = useCallback(results => {\n    if (results) {\n      if (results.length === 0) {\n        setAlertInfo('this sudoku has no solution');\n      } else if (results.length > 1) {\n        setAlertInfo('this sudoku has multi solutions');\n      }\n    }\n  }, []);\n\n  const [sudoku, setSudoku] = useState(() => {\n    // get puzzle from url search parameter: puzzle\n    const puzzle = new URLSearchParams(window.location.search).get('puzzle');\n    try {\n      const instance = new sudokus.Sudoku(puzzle);\n      checkSudokuResults(instance.results);\n      return instance;\n    } catch (error) {\n      console.error(error);\n      return new sudokus.Sudoku();\n    }\n  });\n  const [isNewGame, setIsNewGame] = useState(false);\n  const [puzzleError, setPuzzleError] = useState(null);\n\n  // handlers\n  const startNewGameHandler = useCallback(() => {\n    setIsNewGame(true);\n  }, []);\n  const cancelNewGameHandler = useCallback(() => {\n    setIsNewGame(false);\n  }, []);\n\n  const newGameHandler = useCallback(\n    (puzzle, checkResults = true) => {\n      try {\n        const instance = new sudokus.Sudoku(puzzle);\n        if (checkResults) {\n          checkSudokuResults(instance.results);\n        }\n        setSudoku(instance);\n        setIsNewGame(false);\n        setPuzzleError(null);\n      } catch (error) {\n        console.error(error);\n        setPuzzleError(error);\n      }\n    },\n    [checkSudokuResults]\n  );\n\n  const emptyHandler = useCallback(() => {\n    newGameHandler();\n  }, [newGameHandler]);\n\n  // effects\n  useEffect(() => {\n    if (alertInfo) {\n      alert(alertInfo);\n      setAlertInfo(null);\n    }\n  }, [alertInfo]);\n\n  useEffect(() => {\n    // set debug\n    const isDebug = new URLSearchParams(window.location.search).get('debug');\n    utils.setDebug(isDebug !== null);\n  }, []);\n\n  let content = null;\n  if (isNewGame) {\n    content = (\n      <NewGame cancelNewGameHandler={cancelNewGameHandler} newGameHandler={newGameHandler} error={puzzleError} />\n    );\n  } else {\n    content = (\n      <Main\n        sudoku={sudoku}\n        startNewGameHandler={startNewGameHandler}\n        newGameHandler={newGameHandler}\n        emptyHandler={emptyHandler}\n      />\n    );\n  }\n\n  return <div className={styles.Sudoku}>{content}</div>;\n};\n\nexport default Sudoku;\n","import React from 'react';\nimport Sudoku from './containers/Sudodu/Sudoku';\n\nexport default function App() {\n  return <Sudoku />;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}